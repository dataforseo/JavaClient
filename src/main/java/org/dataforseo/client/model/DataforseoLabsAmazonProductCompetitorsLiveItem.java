/*
 * DataForSEO API documentation
 * DataForSEO API is the starting point on your journey towards building powerful SEO software. With DataForSEO you can get all the data you need to build an efficient application while also saving your time and budget. DataForSEO API is using the REST technology for interchanging data between your application and our service. The data exchange is made through the widely used HTTP protocol, which allows applying our API to almost all programming languages.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.dataforseo.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.dataforseo.client.model.AmazonMetricsBundleInfo;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.dataforseo.client.JSON;

/**
 * DataforseoLabsAmazonProductCompetitorsLiveItem
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-04-26T17:31:56.777561200+03:00[Europe/Kiev]")
public class DataforseoLabsAmazonProductCompetitorsLiveItem {
  public static final String SERIALIZED_NAME_SE_TYPE = "se_type";
  @SerializedName(SERIALIZED_NAME_SE_TYPE)
  private String seType;

  public static final String SERIALIZED_NAME_ASIN = "asin";
  @SerializedName(SERIALIZED_NAME_ASIN)
  private String asin;

  public static final String SERIALIZED_NAME_AVG_POSITION = "avg_position";
  @SerializedName(SERIALIZED_NAME_AVG_POSITION)
  private Float avgPosition;

  public static final String SERIALIZED_NAME_SUM_POSITION = "sum_position";
  @SerializedName(SERIALIZED_NAME_SUM_POSITION)
  private Integer sumPosition;

  public static final String SERIALIZED_NAME_INTERSECTIONS = "intersections";
  @SerializedName(SERIALIZED_NAME_INTERSECTIONS)
  private Integer intersections;

  public static final String SERIALIZED_NAME_COMPETITOR_METRICS = "competitor_metrics";
  @SerializedName(SERIALIZED_NAME_COMPETITOR_METRICS)
  private AmazonMetricsBundleInfo competitorMetrics;

  public static final String SERIALIZED_NAME_FULL_METRICS = "full_metrics";
  @SerializedName(SERIALIZED_NAME_FULL_METRICS)
  private AmazonMetricsBundleInfo fullMetrics;

  public DataforseoLabsAmazonProductCompetitorsLiveItem() {
  }

  public DataforseoLabsAmazonProductCompetitorsLiveItem seType(String seType) {
    this.seType = seType;
    return this;
  }

   /**
   * search engine type
   * @return seType
  **/
  @javax.annotation.Nullable
  public String getSeType() {
    return seType;
  }

  public void setSeType(String seType) {
    this.seType = seType;
  }


  public DataforseoLabsAmazonProductCompetitorsLiveItem asin(String asin) {
    this.asin = asin;
    return this;
  }

   /**
   * ASIN of the product unique product identifier on Amazon; for more information, refer to this help center guide
   * @return asin
  **/
  @javax.annotation.Nullable
  public String getAsin() {
    return asin;
  }

  public void setAsin(String asin) {
    this.asin = asin;
  }


  public DataforseoLabsAmazonProductCompetitorsLiveItem avgPosition(Float avgPosition) {
    this.avgPosition = avgPosition;
    return this;
  }

   /**
   * average position of the product in Amazon SERP Note: average position is calculated for intersected keywords only; the value for a given product may differ when combined with different target products
   * @return avgPosition
  **/
  @javax.annotation.Nullable
  public Float getAvgPosition() {
    return avgPosition;
  }

  public void setAvgPosition(Float avgPosition) {
    this.avgPosition = avgPosition;
  }


  public DataforseoLabsAmazonProductCompetitorsLiveItem sumPosition(Integer sumPosition) {
    this.sumPosition = sumPosition;
    return this;
  }

   /**
   * sum of all product positions in Amazon SERP Note: average position is calculated for intersected keywords only; the value for a given product may differ when combined with different target products
   * @return sumPosition
  **/
  @javax.annotation.Nullable
  public Integer getSumPosition() {
    return sumPosition;
  }

  public void setSumPosition(Integer sumPosition) {
    this.sumPosition = sumPosition;
  }


  public DataforseoLabsAmazonProductCompetitorsLiveItem intersections(Integer intersections) {
    this.intersections = intersections;
    return this;
  }

   /**
   * number of intersecting keywords
   * @return intersections
  **/
  @javax.annotation.Nullable
  public Integer getIntersections() {
    return intersections;
  }

  public void setIntersections(Integer intersections) {
    this.intersections = intersections;
  }


  public DataforseoLabsAmazonProductCompetitorsLiveItem competitorMetrics(AmazonMetricsBundleInfo competitorMetrics) {
    this.competitorMetrics = competitorMetrics;
    return this;
  }

   /**
   * Get competitorMetrics
   * @return competitorMetrics
  **/
  @javax.annotation.Nullable
  public AmazonMetricsBundleInfo getCompetitorMetrics() {
    return competitorMetrics;
  }

  public void setCompetitorMetrics(AmazonMetricsBundleInfo competitorMetrics) {
    this.competitorMetrics = competitorMetrics;
  }


  public DataforseoLabsAmazonProductCompetitorsLiveItem fullMetrics(AmazonMetricsBundleInfo fullMetrics) {
    this.fullMetrics = fullMetrics;
    return this;
  }

   /**
   * Get fullMetrics
   * @return fullMetrics
  **/
  @javax.annotation.Nullable
  public AmazonMetricsBundleInfo getFullMetrics() {
    return fullMetrics;
  }

  public void setFullMetrics(AmazonMetricsBundleInfo fullMetrics) {
    this.fullMetrics = fullMetrics;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DataforseoLabsAmazonProductCompetitorsLiveItem dataforseoLabsAmazonProductCompetitorsLiveItem = (DataforseoLabsAmazonProductCompetitorsLiveItem) o;
    return Objects.equals(this.seType, dataforseoLabsAmazonProductCompetitorsLiveItem.seType) &&
        Objects.equals(this.asin, dataforseoLabsAmazonProductCompetitorsLiveItem.asin) &&
        Objects.equals(this.avgPosition, dataforseoLabsAmazonProductCompetitorsLiveItem.avgPosition) &&
        Objects.equals(this.sumPosition, dataforseoLabsAmazonProductCompetitorsLiveItem.sumPosition) &&
        Objects.equals(this.intersections, dataforseoLabsAmazonProductCompetitorsLiveItem.intersections) &&
        Objects.equals(this.competitorMetrics, dataforseoLabsAmazonProductCompetitorsLiveItem.competitorMetrics) &&
        Objects.equals(this.fullMetrics, dataforseoLabsAmazonProductCompetitorsLiveItem.fullMetrics);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(seType, asin, avgPosition, sumPosition, intersections, competitorMetrics, fullMetrics);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DataforseoLabsAmazonProductCompetitorsLiveItem {\n");
    sb.append("    seType: ").append(toIndentedString(seType)).append("\n");
    sb.append("    asin: ").append(toIndentedString(asin)).append("\n");
    sb.append("    avgPosition: ").append(toIndentedString(avgPosition)).append("\n");
    sb.append("    sumPosition: ").append(toIndentedString(sumPosition)).append("\n");
    sb.append("    intersections: ").append(toIndentedString(intersections)).append("\n");
    sb.append("    competitorMetrics: ").append(toIndentedString(competitorMetrics)).append("\n");
    sb.append("    fullMetrics: ").append(toIndentedString(fullMetrics)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("se_type");
    openapiFields.add("asin");
    openapiFields.add("avg_position");
    openapiFields.add("sum_position");
    openapiFields.add("intersections");
    openapiFields.add("competitor_metrics");
    openapiFields.add("full_metrics");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to DataforseoLabsAmazonProductCompetitorsLiveItem
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!DataforseoLabsAmazonProductCompetitorsLiveItem.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in DataforseoLabsAmazonProductCompetitorsLiveItem is not found in the empty JSON string", DataforseoLabsAmazonProductCompetitorsLiveItem.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!DataforseoLabsAmazonProductCompetitorsLiveItem.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `DataforseoLabsAmazonProductCompetitorsLiveItem` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("se_type") != null && !jsonObj.get("se_type").isJsonNull()) && !jsonObj.get("se_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `se_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("se_type").toString()));
      }
      if ((jsonObj.get("asin") != null && !jsonObj.get("asin").isJsonNull()) && !jsonObj.get("asin").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `asin` to be a primitive type in the JSON string but got `%s`", jsonObj.get("asin").toString()));
      }
      // validate the optional field `competitor_metrics`
      if (jsonObj.get("competitor_metrics") != null && !jsonObj.get("competitor_metrics").isJsonNull()) {
        AmazonMetricsBundleInfo.validateJsonElement(jsonObj.get("competitor_metrics"));
      }
      // validate the optional field `full_metrics`
      if (jsonObj.get("full_metrics") != null && !jsonObj.get("full_metrics").isJsonNull()) {
        AmazonMetricsBundleInfo.validateJsonElement(jsonObj.get("full_metrics"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!DataforseoLabsAmazonProductCompetitorsLiveItem.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'DataforseoLabsAmazonProductCompetitorsLiveItem' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<DataforseoLabsAmazonProductCompetitorsLiveItem> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(DataforseoLabsAmazonProductCompetitorsLiveItem.class));

       return (TypeAdapter<T>) new TypeAdapter<DataforseoLabsAmazonProductCompetitorsLiveItem>() {
           @Override
           public void write(JsonWriter out, DataforseoLabsAmazonProductCompetitorsLiveItem value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public DataforseoLabsAmazonProductCompetitorsLiveItem read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of DataforseoLabsAmazonProductCompetitorsLiveItem given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of DataforseoLabsAmazonProductCompetitorsLiveItem
  * @throws IOException if the JSON string is invalid with respect to DataforseoLabsAmazonProductCompetitorsLiveItem
  */
  public static DataforseoLabsAmazonProductCompetitorsLiveItem fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, DataforseoLabsAmazonProductCompetitorsLiveItem.class);
  }

 /**
  * Convert an instance of DataforseoLabsAmazonProductCompetitorsLiveItem to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

