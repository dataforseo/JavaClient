/*
 * DataForSEO API documentation
 * DataForSEO API is the starting point on your journey towards building powerful SEO software. With DataForSEO you can get all the data you need to build an efficient application while also saving your time and budget. DataForSEO API is using the REST technology for interchanging data between your application and our service. The data exchange is made through the widely used HTTP protocol, which allows applying our API to almost all programming languages.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.dataforseo.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.dataforseo.client.model.AddressInfo;
import org.dataforseo.client.model.BaseSerpElementItem;
import org.dataforseo.client.model.LocalJustificationInfo;
import org.dataforseo.client.model.RatingInfo;
import org.dataforseo.client.model.WorkHours;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.dataforseo.client.JSON;

/**
 * MapsSearchSerpElementItem
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-08-28T19:49:11.515676700+03:00[Europe/Kiev]")
public class MapsSearchSerpElementItem extends BaseSerpElementItem {
  public static final String SERIALIZED_NAME_RANK_GROUP = "rank_group";
  @SerializedName(SERIALIZED_NAME_RANK_GROUP)
  private Integer rankGroup;

  public static final String SERIALIZED_NAME_RANK_ABSOLUTE = "rank_absolute";
  @SerializedName(SERIALIZED_NAME_RANK_ABSOLUTE)
  private Integer rankAbsolute;

  public static final String SERIALIZED_NAME_DOMAIN = "domain";
  @SerializedName(SERIALIZED_NAME_DOMAIN)
  private String domain;

  public static final String SERIALIZED_NAME_TITLE = "title";
  @SerializedName(SERIALIZED_NAME_TITLE)
  private String title;

  public static final String SERIALIZED_NAME_URL = "url";
  @SerializedName(SERIALIZED_NAME_URL)
  private String url;

  public static final String SERIALIZED_NAME_CONTACT_URL = "contact_url";
  @SerializedName(SERIALIZED_NAME_CONTACT_URL)
  private String contactUrl;

  public static final String SERIALIZED_NAME_CONTRIBUTOR_URL = "contributor_url";
  @SerializedName(SERIALIZED_NAME_CONTRIBUTOR_URL)
  private String contributorUrl;

  public static final String SERIALIZED_NAME_RATING = "rating";
  @SerializedName(SERIALIZED_NAME_RATING)
  private RatingInfo rating;

  public static final String SERIALIZED_NAME_HOTEL_RATING = "hotel_rating";
  @SerializedName(SERIALIZED_NAME_HOTEL_RATING)
  private Integer hotelRating;

  public static final String SERIALIZED_NAME_PRICE_LEVEL = "price_level";
  @SerializedName(SERIALIZED_NAME_PRICE_LEVEL)
  private String priceLevel;

  public static final String SERIALIZED_NAME_RATING_DISTRIBUTION = "rating_distribution";
  @SerializedName(SERIALIZED_NAME_RATING_DISTRIBUTION)
  private Map<String, Integer> ratingDistribution;

  public static final String SERIALIZED_NAME_SNIPPET = "snippet";
  @SerializedName(SERIALIZED_NAME_SNIPPET)
  private String snippet;

  public static final String SERIALIZED_NAME_ADDRESS = "address";
  @SerializedName(SERIALIZED_NAME_ADDRESS)
  private String address;

  public static final String SERIALIZED_NAME_ADDRESS_INFO = "address_info";
  @SerializedName(SERIALIZED_NAME_ADDRESS_INFO)
  private AddressInfo addressInfo;

  public static final String SERIALIZED_NAME_PLACE_ID = "place_id";
  @SerializedName(SERIALIZED_NAME_PLACE_ID)
  private String placeId;

  public static final String SERIALIZED_NAME_PHONE = "phone";
  @SerializedName(SERIALIZED_NAME_PHONE)
  private String phone;

  public static final String SERIALIZED_NAME_MAIN_IMAGE = "main_image";
  @SerializedName(SERIALIZED_NAME_MAIN_IMAGE)
  private String mainImage;

  public static final String SERIALIZED_NAME_TOTAL_PHOTOS = "total_photos";
  @SerializedName(SERIALIZED_NAME_TOTAL_PHOTOS)
  private Long totalPhotos;

  public static final String SERIALIZED_NAME_CATEGORY = "category";
  @SerializedName(SERIALIZED_NAME_CATEGORY)
  private String category;

  public static final String SERIALIZED_NAME_ADDITIONAL_CATEGORIES = "additional_categories";
  @SerializedName(SERIALIZED_NAME_ADDITIONAL_CATEGORIES)
  private List<String> additionalCategories;

  public static final String SERIALIZED_NAME_CATEGORY_IDS = "category_ids";
  @SerializedName(SERIALIZED_NAME_CATEGORY_IDS)
  private List<String> categoryIds;

  public static final String SERIALIZED_NAME_WORK_HOURS = "work_hours";
  @SerializedName(SERIALIZED_NAME_WORK_HOURS)
  private WorkHours workHours;

  public static final String SERIALIZED_NAME_FEATURE_ID = "feature_id";
  @SerializedName(SERIALIZED_NAME_FEATURE_ID)
  private String featureId;

  public static final String SERIALIZED_NAME_CID = "cid";
  @SerializedName(SERIALIZED_NAME_CID)
  private String cid;

  public static final String SERIALIZED_NAME_LATITUDE = "latitude";
  @SerializedName(SERIALIZED_NAME_LATITUDE)
  private Float latitude;

  public static final String SERIALIZED_NAME_LONGITUDE = "longitude";
  @SerializedName(SERIALIZED_NAME_LONGITUDE)
  private Float longitude;

  public static final String SERIALIZED_NAME_IS_CLAIMED = "is_claimed";
  @SerializedName(SERIALIZED_NAME_IS_CLAIMED)
  private Boolean isClaimed;

  public static final String SERIALIZED_NAME_LOCAL_JUSTIFICATIONS = "local_justifications";
  @SerializedName(SERIALIZED_NAME_LOCAL_JUSTIFICATIONS)
  private List<LocalJustificationInfo> localJustifications;

  public static final String SERIALIZED_NAME_IS_DIRECTORY_ITEM = "is_directory_item";
  @SerializedName(SERIALIZED_NAME_IS_DIRECTORY_ITEM)
  private Boolean isDirectoryItem;

  public MapsSearchSerpElementItem() {
    this.type = this.getClass().getSimpleName();
  }

  public MapsSearchSerpElementItem rankGroup(Integer rankGroup) {
    this.rankGroup = rankGroup;
    return this;
  }

   /**
   * group rank in SERP position within a group of elements with identical type values positions of elements with different type values are omitted from rank_group
   * @return rankGroup
  **/
  @javax.annotation.Nullable
  public Integer getRankGroup() {
    return rankGroup;
  }

  public void setRankGroup(Integer rankGroup) {
    this.rankGroup = rankGroup;
  }


  public MapsSearchSerpElementItem rankAbsolute(Integer rankAbsolute) {
    this.rankAbsolute = rankAbsolute;
    return this;
  }

   /**
   * absolute rank in SERP absolute position among all the elements in SERP
   * @return rankAbsolute
  **/
  @javax.annotation.Nullable
  public Integer getRankAbsolute() {
    return rankAbsolute;
  }

  public void setRankAbsolute(Integer rankAbsolute) {
    this.rankAbsolute = rankAbsolute;
  }


  public MapsSearchSerpElementItem domain(String domain) {
    this.domain = domain;
    return this;
  }

   /**
   * domain in the SERP element
   * @return domain
  **/
  @javax.annotation.Nullable
  public String getDomain() {
    return domain;
  }

  public void setDomain(String domain) {
    this.domain = domain;
  }


  public MapsSearchSerpElementItem title(String title) {
    this.title = title;
    return this;
  }

   /**
   * title of the result in SERP
   * @return title
  **/
  @javax.annotation.Nullable
  public String getTitle() {
    return title;
  }

  public void setTitle(String title) {
    this.title = title;
  }


  public MapsSearchSerpElementItem url(String url) {
    this.url = url;
    return this;
  }

   /**
   * relevant URL in SERP
   * @return url
  **/
  @javax.annotation.Nullable
  public String getUrl() {
    return url;
  }

  public void setUrl(String url) {
    this.url = url;
  }


  public MapsSearchSerpElementItem contactUrl(String contactUrl) {
    this.contactUrl = contactUrl;
    return this;
  }

   /**
   * URL of the preferred contact page
   * @return contactUrl
  **/
  @javax.annotation.Nullable
  public String getContactUrl() {
    return contactUrl;
  }

  public void setContactUrl(String contactUrl) {
    this.contactUrl = contactUrl;
  }


  public MapsSearchSerpElementItem contributorUrl(String contributorUrl) {
    this.contributorUrl = contributorUrl;
    return this;
  }

   /**
   * URL of the user’s or entity’s Local Guides profile, if available
   * @return contributorUrl
  **/
  @javax.annotation.Nullable
  public String getContributorUrl() {
    return contributorUrl;
  }

  public void setContributorUrl(String contributorUrl) {
    this.contributorUrl = contributorUrl;
  }


  public MapsSearchSerpElementItem rating(RatingInfo rating) {
    this.rating = rating;
    return this;
  }

   /**
   * Get rating
   * @return rating
  **/
  @javax.annotation.Nullable
  public RatingInfo getRating() {
    return rating;
  }

  public void setRating(RatingInfo rating) {
    this.rating = rating;
  }


  public MapsSearchSerpElementItem hotelRating(Integer hotelRating) {
    this.hotelRating = hotelRating;
    return this;
  }

   /**
   * hotel class rating class ratings range between 1-5 stars, learn more if there is no hotel class rating information, the value will be null
   * @return hotelRating
  **/
  @javax.annotation.Nullable
  public Integer getHotelRating() {
    return hotelRating;
  }

  public void setHotelRating(Integer hotelRating) {
    this.hotelRating = hotelRating;
  }


  public MapsSearchSerpElementItem priceLevel(String priceLevel) {
    this.priceLevel = priceLevel;
    return this;
  }

   /**
   * property price level can take values: inexpensive, moderate, expensive, very_expensive if there is no price level information, the value will be null
   * @return priceLevel
  **/
  @javax.annotation.Nullable
  public String getPriceLevel() {
    return priceLevel;
  }

  public void setPriceLevel(String priceLevel) {
    this.priceLevel = priceLevel;
  }


  public MapsSearchSerpElementItem ratingDistribution(Map<String, Integer> ratingDistribution) {
    this.ratingDistribution = ratingDistribution;
    return this;
  }

  public MapsSearchSerpElementItem putRatingDistributionItem(String key, Integer ratingDistributionItem) {
    if (this.ratingDistribution == null) {
      this.ratingDistribution = new HashMap<>();
    }
    this.ratingDistribution.put(key, ratingDistributionItem);
    return this;
  }

   /**
   * the distribution of ratings of the business entity the object displays the number of 1-star to 5-star ratings, as reviewed by users
   * @return ratingDistribution
  **/
  @javax.annotation.Nullable
  public Map<String, Integer> getRatingDistribution() {
    return ratingDistribution;
  }

  public void setRatingDistribution(Map<String, Integer> ratingDistribution) {
    this.ratingDistribution = ratingDistribution;
  }


  public MapsSearchSerpElementItem snippet(String snippet) {
    this.snippet = snippet;
    return this;
  }

   /**
   * element snippet contains the address and other information about the local establishment featured in the element
   * @return snippet
  **/
  @javax.annotation.Nullable
  public String getSnippet() {
    return snippet;
  }

  public void setSnippet(String snippet) {
    this.snippet = snippet;
  }


  public MapsSearchSerpElementItem address(String address) {
    this.address = address;
    return this;
  }

   /**
   * address line address of the local establishment featured in the element
   * @return address
  **/
  @javax.annotation.Nullable
  public String getAddress() {
    return address;
  }

  public void setAddress(String address) {
    this.address = address;
  }


  public MapsSearchSerpElementItem addressInfo(AddressInfo addressInfo) {
    this.addressInfo = addressInfo;
    return this;
  }

   /**
   * Get addressInfo
   * @return addressInfo
  **/
  @javax.annotation.Nullable
  public AddressInfo getAddressInfo() {
    return addressInfo;
  }

  public void setAddressInfo(AddressInfo addressInfo) {
    this.addressInfo = addressInfo;
  }


  public MapsSearchSerpElementItem placeId(String placeId) {
    this.placeId = placeId;
    return this;
  }

   /**
   * unique place identifier place id of the local establishment featured in the element
   * @return placeId
  **/
  @javax.annotation.Nullable
  public String getPlaceId() {
    return placeId;
  }

  public void setPlaceId(String placeId) {
    this.placeId = placeId;
  }


  public MapsSearchSerpElementItem phone(String phone) {
    this.phone = phone;
    return this;
  }

   /**
   * phone number phone number of the local establishment featured in the element
   * @return phone
  **/
  @javax.annotation.Nullable
  public String getPhone() {
    return phone;
  }

  public void setPhone(String phone) {
    this.phone = phone;
  }


  public MapsSearchSerpElementItem mainImage(String mainImage) {
    this.mainImage = mainImage;
    return this;
  }

   /**
   * URL of the main image featured in Google My Business profile
   * @return mainImage
  **/
  @javax.annotation.Nullable
  public String getMainImage() {
    return mainImage;
  }

  public void setMainImage(String mainImage) {
    this.mainImage = mainImage;
  }


  public MapsSearchSerpElementItem totalPhotos(Long totalPhotos) {
    this.totalPhotos = totalPhotos;
    return this;
  }

   /**
   * total count of images featured in Google My Business profile
   * @return totalPhotos
  **/
  @javax.annotation.Nullable
  public Long getTotalPhotos() {
    return totalPhotos;
  }

  public void setTotalPhotos(Long totalPhotos) {
    this.totalPhotos = totalPhotos;
  }


  public MapsSearchSerpElementItem category(String category) {
    this.category = category;
    return this;
  }

   /**
   * business category Google My Business general category that best describes the services provided by the business entity
   * @return category
  **/
  @javax.annotation.Nullable
  public String getCategory() {
    return category;
  }

  public void setCategory(String category) {
    this.category = category;
  }


  public MapsSearchSerpElementItem additionalCategories(List<String> additionalCategories) {
    this.additionalCategories = additionalCategories;
    return this;
  }

  public MapsSearchSerpElementItem addAdditionalCategoriesItem(String additionalCategoriesItem) {
    if (this.additionalCategories == null) {
      this.additionalCategories = new ArrayList<>();
    }
    this.additionalCategories.add(additionalCategoriesItem);
    return this;
  }

   /**
   * additional business categories additional Google My Business categories that describe the services provided by the business entity in more detail
   * @return additionalCategories
  **/
  @javax.annotation.Nullable
  public List<String> getAdditionalCategories() {
    return additionalCategories;
  }

  public void setAdditionalCategories(List<String> additionalCategories) {
    this.additionalCategories = additionalCategories;
  }


  public MapsSearchSerpElementItem categoryIds(List<String> categoryIds) {
    this.categoryIds = categoryIds;
    return this;
  }

  public MapsSearchSerpElementItem addCategoryIdsItem(String categoryIdsItem) {
    if (this.categoryIds == null) {
      this.categoryIds = new ArrayList<>();
    }
    this.categoryIds.add(categoryIdsItem);
    return this;
  }

   /**
   * global category IDs universal category IDs that do not change based on the selected country
   * @return categoryIds
  **/
  @javax.annotation.Nullable
  public List<String> getCategoryIds() {
    return categoryIds;
  }

  public void setCategoryIds(List<String> categoryIds) {
    this.categoryIds = categoryIds;
  }


  public MapsSearchSerpElementItem workHours(WorkHours workHours) {
    this.workHours = workHours;
    return this;
  }

   /**
   * Get workHours
   * @return workHours
  **/
  @javax.annotation.Nullable
  public WorkHours getWorkHours() {
    return workHours;
  }

  public void setWorkHours(WorkHours workHours) {
    this.workHours = workHours;
  }


  public MapsSearchSerpElementItem featureId(String featureId) {
    this.featureId = featureId;
    return this;
  }

   /**
   * the unique identifier of the element in SERP
   * @return featureId
  **/
  @javax.annotation.Nullable
  public String getFeatureId() {
    return featureId;
  }

  public void setFeatureId(String featureId) {
    this.featureId = featureId;
  }


  public MapsSearchSerpElementItem cid(String cid) {
    this.cid = cid;
    return this;
  }

   /**
   * google-defined client id unique id of a local establishment; can be used with Google Reviews API to get a full list of reviews
   * @return cid
  **/
  @javax.annotation.Nullable
  public String getCid() {
    return cid;
  }

  public void setCid(String cid) {
    this.cid = cid;
  }


  public MapsSearchSerpElementItem latitude(Float latitude) {
    this.latitude = latitude;
    return this;
  }

   /**
   * latitude coordinate of the local establishments in google maps example: \&quot;latitude\&quot;: 51.584091
   * @return latitude
  **/
  @javax.annotation.Nullable
  public Float getLatitude() {
    return latitude;
  }

  public void setLatitude(Float latitude) {
    this.latitude = latitude;
  }


  public MapsSearchSerpElementItem longitude(Float longitude) {
    this.longitude = longitude;
    return this;
  }

   /**
   * longitude coordinate of the local establishment in google maps example: \&quot;longitude\&quot;: -0.31365919999999997
   * @return longitude
  **/
  @javax.annotation.Nullable
  public Float getLongitude() {
    return longitude;
  }

  public void setLongitude(Float longitude) {
    this.longitude = longitude;
  }


  public MapsSearchSerpElementItem isClaimed(Boolean isClaimed) {
    this.isClaimed = isClaimed;
    return this;
  }

   /**
   * indicates whether ownership of this local establishment is claimed
   * @return isClaimed
  **/
  @javax.annotation.Nullable
  public Boolean getIsClaimed() {
    return isClaimed;
  }

  public void setIsClaimed(Boolean isClaimed) {
    this.isClaimed = isClaimed;
  }


  public MapsSearchSerpElementItem localJustifications(List<LocalJustificationInfo> localJustifications) {
    this.localJustifications = localJustifications;
    return this;
  }

  public MapsSearchSerpElementItem addLocalJustificationsItem(LocalJustificationInfo localJustificationsItem) {
    if (this.localJustifications == null) {
      this.localJustifications = new ArrayList<>();
    }
    this.localJustifications.add(localJustificationsItem);
    return this;
  }

   /**
   * Google local justifications snippets of text that “justify” why the business is showing up for search query
   * @return localJustifications
  **/
  @javax.annotation.Nullable
  public List<LocalJustificationInfo> getLocalJustifications() {
    return localJustifications;
  }

  public void setLocalJustifications(List<LocalJustificationInfo> localJustifications) {
    this.localJustifications = localJustifications;
  }


  public MapsSearchSerpElementItem isDirectoryItem(Boolean isDirectoryItem) {
    this.isDirectoryItem = isDirectoryItem;
    return this;
  }

   /**
   * indicates whether this local establishment is a directory
   * @return isDirectoryItem
  **/
  @javax.annotation.Nullable
  public Boolean getIsDirectoryItem() {
    return isDirectoryItem;
  }

  public void setIsDirectoryItem(Boolean isDirectoryItem) {
    this.isDirectoryItem = isDirectoryItem;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MapsSearchSerpElementItem mapsSearchSerpElementItem = (MapsSearchSerpElementItem) o;
    return Objects.equals(this.rankGroup, mapsSearchSerpElementItem.rankGroup) &&
        Objects.equals(this.rankAbsolute, mapsSearchSerpElementItem.rankAbsolute) &&
        Objects.equals(this.domain, mapsSearchSerpElementItem.domain) &&
        Objects.equals(this.title, mapsSearchSerpElementItem.title) &&
        Objects.equals(this.url, mapsSearchSerpElementItem.url) &&
        Objects.equals(this.contactUrl, mapsSearchSerpElementItem.contactUrl) &&
        Objects.equals(this.contributorUrl, mapsSearchSerpElementItem.contributorUrl) &&
        Objects.equals(this.rating, mapsSearchSerpElementItem.rating) &&
        Objects.equals(this.hotelRating, mapsSearchSerpElementItem.hotelRating) &&
        Objects.equals(this.priceLevel, mapsSearchSerpElementItem.priceLevel) &&
        Objects.equals(this.ratingDistribution, mapsSearchSerpElementItem.ratingDistribution) &&
        Objects.equals(this.snippet, mapsSearchSerpElementItem.snippet) &&
        Objects.equals(this.address, mapsSearchSerpElementItem.address) &&
        Objects.equals(this.addressInfo, mapsSearchSerpElementItem.addressInfo) &&
        Objects.equals(this.placeId, mapsSearchSerpElementItem.placeId) &&
        Objects.equals(this.phone, mapsSearchSerpElementItem.phone) &&
        Objects.equals(this.mainImage, mapsSearchSerpElementItem.mainImage) &&
        Objects.equals(this.totalPhotos, mapsSearchSerpElementItem.totalPhotos) &&
        Objects.equals(this.category, mapsSearchSerpElementItem.category) &&
        Objects.equals(this.additionalCategories, mapsSearchSerpElementItem.additionalCategories) &&
        Objects.equals(this.categoryIds, mapsSearchSerpElementItem.categoryIds) &&
        Objects.equals(this.workHours, mapsSearchSerpElementItem.workHours) &&
        Objects.equals(this.featureId, mapsSearchSerpElementItem.featureId) &&
        Objects.equals(this.cid, mapsSearchSerpElementItem.cid) &&
        Objects.equals(this.latitude, mapsSearchSerpElementItem.latitude) &&
        Objects.equals(this.longitude, mapsSearchSerpElementItem.longitude) &&
        Objects.equals(this.isClaimed, mapsSearchSerpElementItem.isClaimed) &&
        Objects.equals(this.localJustifications, mapsSearchSerpElementItem.localJustifications) &&
        Objects.equals(this.isDirectoryItem, mapsSearchSerpElementItem.isDirectoryItem) &&
        super.equals(o);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(rankGroup, rankAbsolute, domain, title, url, contactUrl, contributorUrl, rating, hotelRating, priceLevel, ratingDistribution, snippet, address, addressInfo, placeId, phone, mainImage, totalPhotos, category, additionalCategories, categoryIds, workHours, featureId, cid, latitude, longitude, isClaimed, localJustifications, isDirectoryItem, super.hashCode());
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MapsSearchSerpElementItem {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    rankGroup: ").append(toIndentedString(rankGroup)).append("\n");
    sb.append("    rankAbsolute: ").append(toIndentedString(rankAbsolute)).append("\n");
    sb.append("    domain: ").append(toIndentedString(domain)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    contactUrl: ").append(toIndentedString(contactUrl)).append("\n");
    sb.append("    contributorUrl: ").append(toIndentedString(contributorUrl)).append("\n");
    sb.append("    rating: ").append(toIndentedString(rating)).append("\n");
    sb.append("    hotelRating: ").append(toIndentedString(hotelRating)).append("\n");
    sb.append("    priceLevel: ").append(toIndentedString(priceLevel)).append("\n");
    sb.append("    ratingDistribution: ").append(toIndentedString(ratingDistribution)).append("\n");
    sb.append("    snippet: ").append(toIndentedString(snippet)).append("\n");
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("    addressInfo: ").append(toIndentedString(addressInfo)).append("\n");
    sb.append("    placeId: ").append(toIndentedString(placeId)).append("\n");
    sb.append("    phone: ").append(toIndentedString(phone)).append("\n");
    sb.append("    mainImage: ").append(toIndentedString(mainImage)).append("\n");
    sb.append("    totalPhotos: ").append(toIndentedString(totalPhotos)).append("\n");
    sb.append("    category: ").append(toIndentedString(category)).append("\n");
    sb.append("    additionalCategories: ").append(toIndentedString(additionalCategories)).append("\n");
    sb.append("    categoryIds: ").append(toIndentedString(categoryIds)).append("\n");
    sb.append("    workHours: ").append(toIndentedString(workHours)).append("\n");
    sb.append("    featureId: ").append(toIndentedString(featureId)).append("\n");
    sb.append("    cid: ").append(toIndentedString(cid)).append("\n");
    sb.append("    latitude: ").append(toIndentedString(latitude)).append("\n");
    sb.append("    longitude: ").append(toIndentedString(longitude)).append("\n");
    sb.append("    isClaimed: ").append(toIndentedString(isClaimed)).append("\n");
    sb.append("    localJustifications: ").append(toIndentedString(localJustifications)).append("\n");
    sb.append("    isDirectoryItem: ").append(toIndentedString(isDirectoryItem)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("type");
    openapiFields.add("rank_group");
    openapiFields.add("rank_absolute");
    openapiFields.add("domain");
    openapiFields.add("title");
    openapiFields.add("url");
    openapiFields.add("contact_url");
    openapiFields.add("contributor_url");
    openapiFields.add("rating");
    openapiFields.add("hotel_rating");
    openapiFields.add("price_level");
    openapiFields.add("rating_distribution");
    openapiFields.add("snippet");
    openapiFields.add("address");
    openapiFields.add("address_info");
    openapiFields.add("place_id");
    openapiFields.add("phone");
    openapiFields.add("main_image");
    openapiFields.add("total_photos");
    openapiFields.add("category");
    openapiFields.add("additional_categories");
    openapiFields.add("category_ids");
    openapiFields.add("work_hours");
    openapiFields.add("feature_id");
    openapiFields.add("cid");
    openapiFields.add("latitude");
    openapiFields.add("longitude");
    openapiFields.add("is_claimed");
    openapiFields.add("local_justifications");
    openapiFields.add("is_directory_item");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to MapsSearchSerpElementItem
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!MapsSearchSerpElementItem.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in MapsSearchSerpElementItem is not found in the empty JSON string", MapsSearchSerpElementItem.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!MapsSearchSerpElementItem.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `MapsSearchSerpElementItem` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!MapsSearchSerpElementItem.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'MapsSearchSerpElementItem' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<MapsSearchSerpElementItem> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(MapsSearchSerpElementItem.class));

       return (TypeAdapter<T>) new TypeAdapter<MapsSearchSerpElementItem>() {
           @Override
           public void write(JsonWriter out, MapsSearchSerpElementItem value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public MapsSearchSerpElementItem read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of MapsSearchSerpElementItem given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of MapsSearchSerpElementItem
  * @throws IOException if the JSON string is invalid with respect to MapsSearchSerpElementItem
  */
  public static MapsSearchSerpElementItem fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, MapsSearchSerpElementItem.class);
  }

 /**
  * Convert an instance of MapsSearchSerpElementItem to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

