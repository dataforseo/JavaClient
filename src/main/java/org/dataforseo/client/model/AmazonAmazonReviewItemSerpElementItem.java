/*
 * DataForSEO API documentation
 * DataForSEO API is the starting point on your journey towards building powerful SEO software. With DataForSEO you can get all the data you need to build an efficient application while also saving your time and budget. DataForSEO API is using the REST technology for interchanging data between your application and our service. The data exchange is made through the widely used HTTP protocol, which allows applying our API to almost all programming languages.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.dataforseo.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.dataforseo.client.model.BaseAmazonSerpElementItem;
import org.dataforseo.client.model.ImagesElement;
import org.dataforseo.client.model.RatingInfo;
import org.dataforseo.client.model.UserProfileInfo;
import org.dataforseo.client.model.VideoElement;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.dataforseo.client.JSON;

/**
 * AmazonAmazonReviewItemSerpElementItem
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-04-15T10:15:18.753898100+03:00[Europe/Kiev]")
public class AmazonAmazonReviewItemSerpElementItem extends BaseAmazonSerpElementItem {
  public static final String SERIALIZED_NAME_RANK_GROUP = "rank_group";
  @SerializedName(SERIALIZED_NAME_RANK_GROUP)
  private Integer rankGroup;

  public static final String SERIALIZED_NAME_RANK_ABSOLUTE = "rank_absolute";
  @SerializedName(SERIALIZED_NAME_RANK_ABSOLUTE)
  private Integer rankAbsolute;

  public static final String SERIALIZED_NAME_POSITION = "position";
  @SerializedName(SERIALIZED_NAME_POSITION)
  private String position;

  public static final String SERIALIZED_NAME_XPATH = "xpath";
  @SerializedName(SERIALIZED_NAME_XPATH)
  private String xpath;

  public static final String SERIALIZED_NAME_VERIFIED = "verified";
  @SerializedName(SERIALIZED_NAME_VERIFIED)
  private Boolean verified;

  public static final String SERIALIZED_NAME_SUBTITLE = "subtitle";
  @SerializedName(SERIALIZED_NAME_SUBTITLE)
  private String subtitle;

  public static final String SERIALIZED_NAME_HELPFUL_VOTES = "helpful_votes";
  @SerializedName(SERIALIZED_NAME_HELPFUL_VOTES)
  private Integer helpfulVotes;

  public static final String SERIALIZED_NAME_IMAGES = "images";
  @SerializedName(SERIALIZED_NAME_IMAGES)
  private List<ImagesElement> images;

  public static final String SERIALIZED_NAME_VIDEOS = "videos";
  @SerializedName(SERIALIZED_NAME_VIDEOS)
  private List<VideoElement> videos;

  public static final String SERIALIZED_NAME_USER_PROFILE = "user_profile";
  @SerializedName(SERIALIZED_NAME_USER_PROFILE)
  private UserProfileInfo userProfile;

  public static final String SERIALIZED_NAME_TITLE = "title";
  @SerializedName(SERIALIZED_NAME_TITLE)
  private String title;

  public static final String SERIALIZED_NAME_URL = "url";
  @SerializedName(SERIALIZED_NAME_URL)
  private String url;

  public static final String SERIALIZED_NAME_REVIEW_TEXT = "review_text";
  @SerializedName(SERIALIZED_NAME_REVIEW_TEXT)
  private String reviewText;

  public static final String SERIALIZED_NAME_PUBLICATION_DATE = "publication_date";
  @SerializedName(SERIALIZED_NAME_PUBLICATION_DATE)
  private String publicationDate;

  public static final String SERIALIZED_NAME_RATING = "rating";
  @SerializedName(SERIALIZED_NAME_RATING)
  private RatingInfo rating;

  public AmazonAmazonReviewItemSerpElementItem() {
    this.type = this.getClass().getSimpleName();
  }

  public AmazonAmazonReviewItemSerpElementItem rankGroup(Integer rankGroup) {
    this.rankGroup = rankGroup;
    return this;
  }

   /**
   * position within a group of elements with identical type values positions of elements with different type values are omitted from rank_group
   * @return rankGroup
  **/
  @javax.annotation.Nullable
  public Integer getRankGroup() {
    return rankGroup;
  }

  public void setRankGroup(Integer rankGroup) {
    this.rankGroup = rankGroup;
  }


  public AmazonAmazonReviewItemSerpElementItem rankAbsolute(Integer rankAbsolute) {
    this.rankAbsolute = rankAbsolute;
    return this;
  }

   /**
   * absolute rank among all the listed reviews absolute position among all reviews on the list
   * @return rankAbsolute
  **/
  @javax.annotation.Nullable
  public Integer getRankAbsolute() {
    return rankAbsolute;
  }

  public void setRankAbsolute(Integer rankAbsolute) {
    this.rankAbsolute = rankAbsolute;
  }


  public AmazonAmazonReviewItemSerpElementItem position(String position) {
    this.position = position;
    return this;
  }

   /**
   * the alignment of the review in SERP can take the following values: right
   * @return position
  **/
  @javax.annotation.Nullable
  public String getPosition() {
    return position;
  }

  public void setPosition(String position) {
    this.position = position;
  }


  public AmazonAmazonReviewItemSerpElementItem xpath(String xpath) {
    this.xpath = xpath;
    return this;
  }

   /**
   * the XPath of the element
   * @return xpath
  **/
  @javax.annotation.Nullable
  public String getXpath() {
    return xpath;
  }

  public void setXpath(String xpath) {
    this.xpath = xpath;
  }


  public AmazonAmazonReviewItemSerpElementItem verified(Boolean verified) {
    this.verified = verified;
    return this;
  }

   /**
   * indicates whether the review has the “Verified Purchase” mark
   * @return verified
  **/
  @javax.annotation.Nullable
  public Boolean getVerified() {
    return verified;
  }

  public void setVerified(Boolean verified) {
    this.verified = verified;
  }


  public AmazonAmazonReviewItemSerpElementItem subtitle(String subtitle) {
    this.subtitle = subtitle;
    return this;
  }

   /**
   * subtitle of the review
   * @return subtitle
  **/
  @javax.annotation.Nullable
  public String getSubtitle() {
    return subtitle;
  }

  public void setSubtitle(String subtitle) {
    this.subtitle = subtitle;
  }


  public AmazonAmazonReviewItemSerpElementItem helpfulVotes(Integer helpfulVotes) {
    this.helpfulVotes = helpfulVotes;
    return this;
  }

   /**
   * helpful votes count number of users who clicked on the ‘Helpful” button under the review text
   * @return helpfulVotes
  **/
  @javax.annotation.Nullable
  public Integer getHelpfulVotes() {
    return helpfulVotes;
  }

  public void setHelpfulVotes(Integer helpfulVotes) {
    this.helpfulVotes = helpfulVotes;
  }


  public AmazonAmazonReviewItemSerpElementItem images(List<ImagesElement> images) {
    this.images = images;
    return this;
  }

  public AmazonAmazonReviewItemSerpElementItem addImagesItem(ImagesElement imagesItem) {
    if (this.images == null) {
      this.images = new ArrayList<>();
    }
    this.images.add(imagesItem);
    return this;
  }

   /**
   * images of the product submitted by the reviewer
   * @return images
  **/
  @javax.annotation.Nullable
  public List<ImagesElement> getImages() {
    return images;
  }

  public void setImages(List<ImagesElement> images) {
    this.images = images;
  }


  public AmazonAmazonReviewItemSerpElementItem videos(List<VideoElement> videos) {
    this.videos = videos;
    return this;
  }

  public AmazonAmazonReviewItemSerpElementItem addVideosItem(VideoElement videosItem) {
    if (this.videos == null) {
      this.videos = new ArrayList<>();
    }
    this.videos.add(videosItem);
    return this;
  }

   /**
   * videos of the product submitted by the reviewer
   * @return videos
  **/
  @javax.annotation.Nullable
  public List<VideoElement> getVideos() {
    return videos;
  }

  public void setVideos(List<VideoElement> videos) {
    this.videos = videos;
  }


  public AmazonAmazonReviewItemSerpElementItem userProfile(UserProfileInfo userProfile) {
    this.userProfile = userProfile;
    return this;
  }

   /**
   * Get userProfile
   * @return userProfile
  **/
  @javax.annotation.Nullable
  public UserProfileInfo getUserProfile() {
    return userProfile;
  }

  public void setUserProfile(UserProfileInfo userProfile) {
    this.userProfile = userProfile;
  }


  public AmazonAmazonReviewItemSerpElementItem title(String title) {
    this.title = title;
    return this;
  }

   /**
   * title of the review
   * @return title
  **/
  @javax.annotation.Nullable
  public String getTitle() {
    return title;
  }

  public void setTitle(String title) {
    this.title = title;
  }


  public AmazonAmazonReviewItemSerpElementItem url(String url) {
    this.url = url;
    return this;
  }

   /**
   * URL to the review
   * @return url
  **/
  @javax.annotation.Nullable
  public String getUrl() {
    return url;
  }

  public void setUrl(String url) {
    this.url = url;
  }


  public AmazonAmazonReviewItemSerpElementItem reviewText(String reviewText) {
    this.reviewText = reviewText;
    return this;
  }

   /**
   * content of the review
   * @return reviewText
  **/
  @javax.annotation.Nullable
  public String getReviewText() {
    return reviewText;
  }

  public void setReviewText(String reviewText) {
    this.reviewText = reviewText;
  }


  public AmazonAmazonReviewItemSerpElementItem publicationDate(String publicationDate) {
    this.publicationDate = publicationDate;
    return this;
  }

   /**
   * date and time when the review was published in the UTC format: “yyyy-mm-dd hh-mm-ss +00:00”; example: 2019-11-15 12:57:46 +00:00
   * @return publicationDate
  **/
  @javax.annotation.Nullable
  public String getPublicationDate() {
    return publicationDate;
  }

  public void setPublicationDate(String publicationDate) {
    this.publicationDate = publicationDate;
  }


  public AmazonAmazonReviewItemSerpElementItem rating(RatingInfo rating) {
    this.rating = rating;
    return this;
  }

   /**
   * Get rating
   * @return rating
  **/
  @javax.annotation.Nullable
  public RatingInfo getRating() {
    return rating;
  }

  public void setRating(RatingInfo rating) {
    this.rating = rating;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AmazonAmazonReviewItemSerpElementItem amazonAmazonReviewItemSerpElementItem = (AmazonAmazonReviewItemSerpElementItem) o;
    return Objects.equals(this.rankGroup, amazonAmazonReviewItemSerpElementItem.rankGroup) &&
        Objects.equals(this.rankAbsolute, amazonAmazonReviewItemSerpElementItem.rankAbsolute) &&
        Objects.equals(this.position, amazonAmazonReviewItemSerpElementItem.position) &&
        Objects.equals(this.xpath, amazonAmazonReviewItemSerpElementItem.xpath) &&
        Objects.equals(this.verified, amazonAmazonReviewItemSerpElementItem.verified) &&
        Objects.equals(this.subtitle, amazonAmazonReviewItemSerpElementItem.subtitle) &&
        Objects.equals(this.helpfulVotes, amazonAmazonReviewItemSerpElementItem.helpfulVotes) &&
        Objects.equals(this.images, amazonAmazonReviewItemSerpElementItem.images) &&
        Objects.equals(this.videos, amazonAmazonReviewItemSerpElementItem.videos) &&
        Objects.equals(this.userProfile, amazonAmazonReviewItemSerpElementItem.userProfile) &&
        Objects.equals(this.title, amazonAmazonReviewItemSerpElementItem.title) &&
        Objects.equals(this.url, amazonAmazonReviewItemSerpElementItem.url) &&
        Objects.equals(this.reviewText, amazonAmazonReviewItemSerpElementItem.reviewText) &&
        Objects.equals(this.publicationDate, amazonAmazonReviewItemSerpElementItem.publicationDate) &&
        Objects.equals(this.rating, amazonAmazonReviewItemSerpElementItem.rating) &&
        super.equals(o);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(rankGroup, rankAbsolute, position, xpath, verified, subtitle, helpfulVotes, images, videos, userProfile, title, url, reviewText, publicationDate, rating, super.hashCode());
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AmazonAmazonReviewItemSerpElementItem {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    rankGroup: ").append(toIndentedString(rankGroup)).append("\n");
    sb.append("    rankAbsolute: ").append(toIndentedString(rankAbsolute)).append("\n");
    sb.append("    position: ").append(toIndentedString(position)).append("\n");
    sb.append("    xpath: ").append(toIndentedString(xpath)).append("\n");
    sb.append("    verified: ").append(toIndentedString(verified)).append("\n");
    sb.append("    subtitle: ").append(toIndentedString(subtitle)).append("\n");
    sb.append("    helpfulVotes: ").append(toIndentedString(helpfulVotes)).append("\n");
    sb.append("    images: ").append(toIndentedString(images)).append("\n");
    sb.append("    videos: ").append(toIndentedString(videos)).append("\n");
    sb.append("    userProfile: ").append(toIndentedString(userProfile)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    reviewText: ").append(toIndentedString(reviewText)).append("\n");
    sb.append("    publicationDate: ").append(toIndentedString(publicationDate)).append("\n");
    sb.append("    rating: ").append(toIndentedString(rating)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("type");
    openapiFields.add("rank_group");
    openapiFields.add("rank_absolute");
    openapiFields.add("position");
    openapiFields.add("xpath");
    openapiFields.add("verified");
    openapiFields.add("subtitle");
    openapiFields.add("helpful_votes");
    openapiFields.add("images");
    openapiFields.add("videos");
    openapiFields.add("user_profile");
    openapiFields.add("title");
    openapiFields.add("url");
    openapiFields.add("review_text");
    openapiFields.add("publication_date");
    openapiFields.add("rating");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to AmazonAmazonReviewItemSerpElementItem
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!AmazonAmazonReviewItemSerpElementItem.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AmazonAmazonReviewItemSerpElementItem is not found in the empty JSON string", AmazonAmazonReviewItemSerpElementItem.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!AmazonAmazonReviewItemSerpElementItem.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AmazonAmazonReviewItemSerpElementItem` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AmazonAmazonReviewItemSerpElementItem.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AmazonAmazonReviewItemSerpElementItem' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AmazonAmazonReviewItemSerpElementItem> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AmazonAmazonReviewItemSerpElementItem.class));

       return (TypeAdapter<T>) new TypeAdapter<AmazonAmazonReviewItemSerpElementItem>() {
           @Override
           public void write(JsonWriter out, AmazonAmazonReviewItemSerpElementItem value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AmazonAmazonReviewItemSerpElementItem read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of AmazonAmazonReviewItemSerpElementItem given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of AmazonAmazonReviewItemSerpElementItem
  * @throws IOException if the JSON string is invalid with respect to AmazonAmazonReviewItemSerpElementItem
  */
  public static AmazonAmazonReviewItemSerpElementItem fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AmazonAmazonReviewItemSerpElementItem.class);
  }

 /**
  * Convert an instance of AmazonAmazonReviewItemSerpElementItem to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

