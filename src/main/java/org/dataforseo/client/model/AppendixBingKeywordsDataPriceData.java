/*
 * DataForSEO API documentation
 * DataForSEO API is the starting point on your journey towards building powerful SEO software. With DataForSEO you can get all the data you need to build an efficient application while also saving your time and budget. DataForSEO API is using the REST technology for interchanging data between your application and our service. The data exchange is made through the widely used HTTP protocol, which allows applying our API to almost all programming languages.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.dataforseo.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.dataforseo.client.model.AppendixKeywordBingKeywordsDataPriceDataInfo;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.dataforseo.client.JSON;

/**
 * AppendixBingKeywordsDataPriceData
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-07-05T09:46:18.018897200+03:00[Europe/Kiev]")
public class AppendixBingKeywordsDataPriceData {
  public static final String SERIALIZED_NAME_KEYWORD_PERFORMANCE = "keyword_performance";
  @SerializedName(SERIALIZED_NAME_KEYWORD_PERFORMANCE)
  private AppendixKeywordBingKeywordsDataPriceDataInfo keywordPerformance;

  public static final String SERIALIZED_NAME_KEYWORDS_FOR_KEYWORDS = "keywords_for_keywords";
  @SerializedName(SERIALIZED_NAME_KEYWORDS_FOR_KEYWORDS)
  private AppendixKeywordBingKeywordsDataPriceDataInfo keywordsForKeywords;

  public static final String SERIALIZED_NAME_KEYWORDS_FOR_SITE = "keywords_for_site";
  @SerializedName(SERIALIZED_NAME_KEYWORDS_FOR_SITE)
  private AppendixKeywordBingKeywordsDataPriceDataInfo keywordsForSite;

  public static final String SERIALIZED_NAME_SEARCH_VOLUME_HISTORY = "search_volume_history";
  @SerializedName(SERIALIZED_NAME_SEARCH_VOLUME_HISTORY)
  private AppendixKeywordBingKeywordsDataPriceDataInfo searchVolumeHistory;

  public static final String SERIALIZED_NAME_SEARCH_VOLUME = "search_volume";
  @SerializedName(SERIALIZED_NAME_SEARCH_VOLUME)
  private AppendixKeywordBingKeywordsDataPriceDataInfo searchVolume;

  public AppendixBingKeywordsDataPriceData() {
  }

  public AppendixBingKeywordsDataPriceData keywordPerformance(AppendixKeywordBingKeywordsDataPriceDataInfo keywordPerformance) {
    this.keywordPerformance = keywordPerformance;
    return this;
  }

   /**
   * Get keywordPerformance
   * @return keywordPerformance
  **/
  @javax.annotation.Nullable
  public AppendixKeywordBingKeywordsDataPriceDataInfo getKeywordPerformance() {
    return keywordPerformance;
  }

  public void setKeywordPerformance(AppendixKeywordBingKeywordsDataPriceDataInfo keywordPerformance) {
    this.keywordPerformance = keywordPerformance;
  }


  public AppendixBingKeywordsDataPriceData keywordsForKeywords(AppendixKeywordBingKeywordsDataPriceDataInfo keywordsForKeywords) {
    this.keywordsForKeywords = keywordsForKeywords;
    return this;
  }

   /**
   * Get keywordsForKeywords
   * @return keywordsForKeywords
  **/
  @javax.annotation.Nullable
  public AppendixKeywordBingKeywordsDataPriceDataInfo getKeywordsForKeywords() {
    return keywordsForKeywords;
  }

  public void setKeywordsForKeywords(AppendixKeywordBingKeywordsDataPriceDataInfo keywordsForKeywords) {
    this.keywordsForKeywords = keywordsForKeywords;
  }


  public AppendixBingKeywordsDataPriceData keywordsForSite(AppendixKeywordBingKeywordsDataPriceDataInfo keywordsForSite) {
    this.keywordsForSite = keywordsForSite;
    return this;
  }

   /**
   * Get keywordsForSite
   * @return keywordsForSite
  **/
  @javax.annotation.Nullable
  public AppendixKeywordBingKeywordsDataPriceDataInfo getKeywordsForSite() {
    return keywordsForSite;
  }

  public void setKeywordsForSite(AppendixKeywordBingKeywordsDataPriceDataInfo keywordsForSite) {
    this.keywordsForSite = keywordsForSite;
  }


  public AppendixBingKeywordsDataPriceData searchVolumeHistory(AppendixKeywordBingKeywordsDataPriceDataInfo searchVolumeHistory) {
    this.searchVolumeHistory = searchVolumeHistory;
    return this;
  }

   /**
   * Get searchVolumeHistory
   * @return searchVolumeHistory
  **/
  @javax.annotation.Nullable
  public AppendixKeywordBingKeywordsDataPriceDataInfo getSearchVolumeHistory() {
    return searchVolumeHistory;
  }

  public void setSearchVolumeHistory(AppendixKeywordBingKeywordsDataPriceDataInfo searchVolumeHistory) {
    this.searchVolumeHistory = searchVolumeHistory;
  }


  public AppendixBingKeywordsDataPriceData searchVolume(AppendixKeywordBingKeywordsDataPriceDataInfo searchVolume) {
    this.searchVolume = searchVolume;
    return this;
  }

   /**
   * Get searchVolume
   * @return searchVolume
  **/
  @javax.annotation.Nullable
  public AppendixKeywordBingKeywordsDataPriceDataInfo getSearchVolume() {
    return searchVolume;
  }

  public void setSearchVolume(AppendixKeywordBingKeywordsDataPriceDataInfo searchVolume) {
    this.searchVolume = searchVolume;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AppendixBingKeywordsDataPriceData appendixBingKeywordsDataPriceData = (AppendixBingKeywordsDataPriceData) o;
    return Objects.equals(this.keywordPerformance, appendixBingKeywordsDataPriceData.keywordPerformance) &&
        Objects.equals(this.keywordsForKeywords, appendixBingKeywordsDataPriceData.keywordsForKeywords) &&
        Objects.equals(this.keywordsForSite, appendixBingKeywordsDataPriceData.keywordsForSite) &&
        Objects.equals(this.searchVolumeHistory, appendixBingKeywordsDataPriceData.searchVolumeHistory) &&
        Objects.equals(this.searchVolume, appendixBingKeywordsDataPriceData.searchVolume);
  }

  @Override
  public int hashCode() {
    return Objects.hash(keywordPerformance, keywordsForKeywords, keywordsForSite, searchVolumeHistory, searchVolume);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AppendixBingKeywordsDataPriceData {\n");
    sb.append("    keywordPerformance: ").append(toIndentedString(keywordPerformance)).append("\n");
    sb.append("    keywordsForKeywords: ").append(toIndentedString(keywordsForKeywords)).append("\n");
    sb.append("    keywordsForSite: ").append(toIndentedString(keywordsForSite)).append("\n");
    sb.append("    searchVolumeHistory: ").append(toIndentedString(searchVolumeHistory)).append("\n");
    sb.append("    searchVolume: ").append(toIndentedString(searchVolume)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("keyword_performance");
    openapiFields.add("keywords_for_keywords");
    openapiFields.add("keywords_for_site");
    openapiFields.add("search_volume_history");
    openapiFields.add("search_volume");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to AppendixBingKeywordsDataPriceData
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!AppendixBingKeywordsDataPriceData.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AppendixBingKeywordsDataPriceData is not found in the empty JSON string", AppendixBingKeywordsDataPriceData.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!AppendixBingKeywordsDataPriceData.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AppendixBingKeywordsDataPriceData` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `keyword_performance`
      if (jsonObj.get("keyword_performance") != null && !jsonObj.get("keyword_performance").isJsonNull()) {
        AppendixKeywordBingKeywordsDataPriceDataInfo.validateJsonElement(jsonObj.get("keyword_performance"));
      }
      // validate the optional field `keywords_for_keywords`
      if (jsonObj.get("keywords_for_keywords") != null && !jsonObj.get("keywords_for_keywords").isJsonNull()) {
        AppendixKeywordBingKeywordsDataPriceDataInfo.validateJsonElement(jsonObj.get("keywords_for_keywords"));
      }
      // validate the optional field `keywords_for_site`
      if (jsonObj.get("keywords_for_site") != null && !jsonObj.get("keywords_for_site").isJsonNull()) {
        AppendixKeywordBingKeywordsDataPriceDataInfo.validateJsonElement(jsonObj.get("keywords_for_site"));
      }
      // validate the optional field `search_volume_history`
      if (jsonObj.get("search_volume_history") != null && !jsonObj.get("search_volume_history").isJsonNull()) {
        AppendixKeywordBingKeywordsDataPriceDataInfo.validateJsonElement(jsonObj.get("search_volume_history"));
      }
      // validate the optional field `search_volume`
      if (jsonObj.get("search_volume") != null && !jsonObj.get("search_volume").isJsonNull()) {
        AppendixKeywordBingKeywordsDataPriceDataInfo.validateJsonElement(jsonObj.get("search_volume"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AppendixBingKeywordsDataPriceData.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AppendixBingKeywordsDataPriceData' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AppendixBingKeywordsDataPriceData> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AppendixBingKeywordsDataPriceData.class));

       return (TypeAdapter<T>) new TypeAdapter<AppendixBingKeywordsDataPriceData>() {
           @Override
           public void write(JsonWriter out, AppendixBingKeywordsDataPriceData value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AppendixBingKeywordsDataPriceData read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of AppendixBingKeywordsDataPriceData given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of AppendixBingKeywordsDataPriceData
  * @throws IOException if the JSON string is invalid with respect to AppendixBingKeywordsDataPriceData
  */
  public static AppendixBingKeywordsDataPriceData fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AppendixBingKeywordsDataPriceData.class);
  }

 /**
  * Convert an instance of AppendixBingKeywordsDataPriceData to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

