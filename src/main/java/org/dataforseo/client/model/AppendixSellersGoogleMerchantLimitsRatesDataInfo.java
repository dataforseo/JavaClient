/*
 * DataForSEO API documentation
 * DataForSEO API is the starting point on your journey towards building powerful SEO software. With DataForSEO you can get all the data you need to build an efficient application while also saving your time and budget. DataForSEO API is using the REST technology for interchanging data between your application and our service. The data exchange is made through the widely used HTTP protocol, which allows applying our API to almost all programming languages.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.dataforseo.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.dataforseo.client.model.AppendixFunctionTypeInfo;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.dataforseo.client.JSON;

/**
 * AppendixSellersGoogleMerchantLimitsRatesDataInfo
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-06-02T20:51:42.343286900+03:00[Europe/Kiev]")
public class AppendixSellersGoogleMerchantLimitsRatesDataInfo {
  public static final String SERIALIZED_NAME_TASK_POST = "task_post";
  @SerializedName(SERIALIZED_NAME_TASK_POST)
  private Double taskPost;

  public static final String SERIALIZED_NAME_TASKS_READY = "tasks_ready";
  @SerializedName(SERIALIZED_NAME_TASKS_READY)
  private Double tasksReady;

  public static final String SERIALIZED_NAME_TASK_GET = "task_get";
  @SerializedName(SERIALIZED_NAME_TASK_GET)
  private AppendixFunctionTypeInfo taskGet;

  public static final String SERIALIZED_NAME_AD_URL = "ad_url";
  @SerializedName(SERIALIZED_NAME_AD_URL)
  private Double adUrl;

  public AppendixSellersGoogleMerchantLimitsRatesDataInfo() {
  }

  public AppendixSellersGoogleMerchantLimitsRatesDataInfo taskPost(Double taskPost) {
    this.taskPost = taskPost;
    return this;
  }

   /**
   * Get taskPost
   * @return taskPost
  **/
  @javax.annotation.Nullable
  public Double getTaskPost() {
    return taskPost;
  }

  public void setTaskPost(Double taskPost) {
    this.taskPost = taskPost;
  }


  public AppendixSellersGoogleMerchantLimitsRatesDataInfo tasksReady(Double tasksReady) {
    this.tasksReady = tasksReady;
    return this;
  }

   /**
   * Get tasksReady
   * @return tasksReady
  **/
  @javax.annotation.Nullable
  public Double getTasksReady() {
    return tasksReady;
  }

  public void setTasksReady(Double tasksReady) {
    this.tasksReady = tasksReady;
  }


  public AppendixSellersGoogleMerchantLimitsRatesDataInfo taskGet(AppendixFunctionTypeInfo taskGet) {
    this.taskGet = taskGet;
    return this;
  }

   /**
   * Get taskGet
   * @return taskGet
  **/
  @javax.annotation.Nullable
  public AppendixFunctionTypeInfo getTaskGet() {
    return taskGet;
  }

  public void setTaskGet(AppendixFunctionTypeInfo taskGet) {
    this.taskGet = taskGet;
  }


  public AppendixSellersGoogleMerchantLimitsRatesDataInfo adUrl(Double adUrl) {
    this.adUrl = adUrl;
    return this;
  }

   /**
   * Get adUrl
   * @return adUrl
  **/
  @javax.annotation.Nullable
  public Double getAdUrl() {
    return adUrl;
  }

  public void setAdUrl(Double adUrl) {
    this.adUrl = adUrl;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AppendixSellersGoogleMerchantLimitsRatesDataInfo appendixSellersGoogleMerchantLimitsRatesDataInfo = (AppendixSellersGoogleMerchantLimitsRatesDataInfo) o;
    return Objects.equals(this.taskPost, appendixSellersGoogleMerchantLimitsRatesDataInfo.taskPost) &&
        Objects.equals(this.tasksReady, appendixSellersGoogleMerchantLimitsRatesDataInfo.tasksReady) &&
        Objects.equals(this.taskGet, appendixSellersGoogleMerchantLimitsRatesDataInfo.taskGet) &&
        Objects.equals(this.adUrl, appendixSellersGoogleMerchantLimitsRatesDataInfo.adUrl);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(taskPost, tasksReady, taskGet, adUrl);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AppendixSellersGoogleMerchantLimitsRatesDataInfo {\n");
    sb.append("    taskPost: ").append(toIndentedString(taskPost)).append("\n");
    sb.append("    tasksReady: ").append(toIndentedString(tasksReady)).append("\n");
    sb.append("    taskGet: ").append(toIndentedString(taskGet)).append("\n");
    sb.append("    adUrl: ").append(toIndentedString(adUrl)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("task_post");
    openapiFields.add("tasks_ready");
    openapiFields.add("task_get");
    openapiFields.add("ad_url");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to AppendixSellersGoogleMerchantLimitsRatesDataInfo
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!AppendixSellersGoogleMerchantLimitsRatesDataInfo.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AppendixSellersGoogleMerchantLimitsRatesDataInfo is not found in the empty JSON string", AppendixSellersGoogleMerchantLimitsRatesDataInfo.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!AppendixSellersGoogleMerchantLimitsRatesDataInfo.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AppendixSellersGoogleMerchantLimitsRatesDataInfo` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `task_get`
      if (jsonObj.get("task_get") != null && !jsonObj.get("task_get").isJsonNull()) {
        AppendixFunctionTypeInfo.validateJsonElement(jsonObj.get("task_get"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AppendixSellersGoogleMerchantLimitsRatesDataInfo.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AppendixSellersGoogleMerchantLimitsRatesDataInfo' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AppendixSellersGoogleMerchantLimitsRatesDataInfo> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AppendixSellersGoogleMerchantLimitsRatesDataInfo.class));

       return (TypeAdapter<T>) new TypeAdapter<AppendixSellersGoogleMerchantLimitsRatesDataInfo>() {
           @Override
           public void write(JsonWriter out, AppendixSellersGoogleMerchantLimitsRatesDataInfo value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AppendixSellersGoogleMerchantLimitsRatesDataInfo read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of AppendixSellersGoogleMerchantLimitsRatesDataInfo given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of AppendixSellersGoogleMerchantLimitsRatesDataInfo
  * @throws IOException if the JSON string is invalid with respect to AppendixSellersGoogleMerchantLimitsRatesDataInfo
  */
  public static AppendixSellersGoogleMerchantLimitsRatesDataInfo fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AppendixSellersGoogleMerchantLimitsRatesDataInfo.class);
  }

 /**
  * Convert an instance of AppendixSellersGoogleMerchantLimitsRatesDataInfo to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

