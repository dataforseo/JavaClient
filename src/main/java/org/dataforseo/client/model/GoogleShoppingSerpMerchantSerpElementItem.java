/*
 * DataForSEO API documentation
 * DataForSEO API is the starting point on your journey towards building powerful SEO software. With DataForSEO you can get all the data you need to build an efficient application while also saving your time and budget. DataForSEO API is using the REST technology for interchanging data between your application and our service. The data exchange is made through the widely used HTTP protocol, which allows applying our API to almost all programming languages.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.dataforseo.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.dataforseo.client.model.BaseMerchantSerpElementItem;
import org.dataforseo.client.model.DeliveryInfo;
import org.dataforseo.client.model.RatingElement;
import org.dataforseo.client.model.StoresCountInfo;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.dataforseo.client.JSON;

/**
 * GoogleShoppingSerpMerchantSerpElementItem
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-06-21T10:44:48.237213300+03:00[Europe/Kiev]")
public class GoogleShoppingSerpMerchantSerpElementItem extends BaseMerchantSerpElementItem {
  public static final String SERIALIZED_NAME_RANK_GROUP = "rank_group";
  @SerializedName(SERIALIZED_NAME_RANK_GROUP)
  private Integer rankGroup;

  public static final String SERIALIZED_NAME_RANK_ABSOLUTE = "rank_absolute";
  @SerializedName(SERIALIZED_NAME_RANK_ABSOLUTE)
  private Integer rankAbsolute;

  public static final String SERIALIZED_NAME_POSITION = "position";
  @SerializedName(SERIALIZED_NAME_POSITION)
  private String position;

  public static final String SERIALIZED_NAME_XPATH = "xpath";
  @SerializedName(SERIALIZED_NAME_XPATH)
  private String xpath;

  public static final String SERIALIZED_NAME_DOMAIN = "domain";
  @SerializedName(SERIALIZED_NAME_DOMAIN)
  private String domain;

  public static final String SERIALIZED_NAME_TITLE = "title";
  @SerializedName(SERIALIZED_NAME_TITLE)
  private String title;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_URL = "url";
  @SerializedName(SERIALIZED_NAME_URL)
  private String url;

  public static final String SERIALIZED_NAME_SHOPPING_URL = "shopping_url";
  @SerializedName(SERIALIZED_NAME_SHOPPING_URL)
  private String shoppingUrl;

  public static final String SERIALIZED_NAME_TAGS = "tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private List<String> tags;

  public static final String SERIALIZED_NAME_PRICE = "price";
  @SerializedName(SERIALIZED_NAME_PRICE)
  private Float price;

  public static final String SERIALIZED_NAME_OLD_PRICE = "old_price";
  @SerializedName(SERIALIZED_NAME_OLD_PRICE)
  private Float oldPrice;

  public static final String SERIALIZED_NAME_CURRENCY = "currency";
  @SerializedName(SERIALIZED_NAME_CURRENCY)
  private String currency;

  public static final String SERIALIZED_NAME_PRODUCT_ID = "product_id";
  @SerializedName(SERIALIZED_NAME_PRODUCT_ID)
  private String productId;

  public static final String SERIALIZED_NAME_DATA_DOCID = "data_docid";
  @SerializedName(SERIALIZED_NAME_DATA_DOCID)
  private String dataDocid;

  public static final String SERIALIZED_NAME_SELLER = "seller";
  @SerializedName(SERIALIZED_NAME_SELLER)
  private String seller;

  public static final String SERIALIZED_NAME_ADDITIONAL_SPECIFICATIONS = "additional_specifications";
  @SerializedName(SERIALIZED_NAME_ADDITIONAL_SPECIFICATIONS)
  private Map<String, String> additionalSpecifications;

  public static final String SERIALIZED_NAME_REVIEWS_COUNT = "reviews_count";
  @SerializedName(SERIALIZED_NAME_REVIEWS_COUNT)
  private Long reviewsCount;

  public static final String SERIALIZED_NAME_IS_BEST_MATCH = "is_best_match";
  @SerializedName(SERIALIZED_NAME_IS_BEST_MATCH)
  private Boolean isBestMatch;

  public static final String SERIALIZED_NAME_PRODUCT_RATING = "product_rating";
  @SerializedName(SERIALIZED_NAME_PRODUCT_RATING)
  private RatingElement productRating;

  public static final String SERIALIZED_NAME_SHOP_RATING = "shop_rating";
  @SerializedName(SERIALIZED_NAME_SHOP_RATING)
  private RatingElement shopRating;

  public static final String SERIALIZED_NAME_PRODUCT_IMAGES = "product_images";
  @SerializedName(SERIALIZED_NAME_PRODUCT_IMAGES)
  private List<String> productImages;

  public static final String SERIALIZED_NAME_SHOP_AD_ACLK = "shop_ad_aclk";
  @SerializedName(SERIALIZED_NAME_SHOP_AD_ACLK)
  private String shopAdAclk;

  public static final String SERIALIZED_NAME_DELIVERY_INFO = "delivery_info";
  @SerializedName(SERIALIZED_NAME_DELIVERY_INFO)
  private DeliveryInfo deliveryInfo;

  public static final String SERIALIZED_NAME_STORES_COUNT_INFO = "stores_count_info";
  @SerializedName(SERIALIZED_NAME_STORES_COUNT_INFO)
  private StoresCountInfo storesCountInfo;

  public GoogleShoppingSerpMerchantSerpElementItem() {
    this.type = this.getClass().getSimpleName();
  }

  public GoogleShoppingSerpMerchantSerpElementItem rankGroup(Integer rankGroup) {
    this.rankGroup = rankGroup;
    return this;
  }

   /**
   * position within a group of elements with identical type values positions of elements with different type values are omitted from rank_group
   * @return rankGroup
  **/
  @javax.annotation.Nullable
  public Integer getRankGroup() {
    return rankGroup;
  }

  public void setRankGroup(Integer rankGroup) {
    this.rankGroup = rankGroup;
  }


  public GoogleShoppingSerpMerchantSerpElementItem rankAbsolute(Integer rankAbsolute) {
    this.rankAbsolute = rankAbsolute;
    return this;
  }

   /**
   * absolute rank in SERP absolute position among all the elements found in Google Shopping SERP
   * @return rankAbsolute
  **/
  @javax.annotation.Nullable
  public Integer getRankAbsolute() {
    return rankAbsolute;
  }

  public void setRankAbsolute(Integer rankAbsolute) {
    this.rankAbsolute = rankAbsolute;
  }


  public GoogleShoppingSerpMerchantSerpElementItem position(String position) {
    this.position = position;
    return this;
  }

   /**
   * alignment of the element in SERP can take the following values: left, right
   * @return position
  **/
  @javax.annotation.Nullable
  public String getPosition() {
    return position;
  }

  public void setPosition(String position) {
    this.position = position;
  }


  public GoogleShoppingSerpMerchantSerpElementItem xpath(String xpath) {
    this.xpath = xpath;
    return this;
  }

   /**
   * XPath of the element
   * @return xpath
  **/
  @javax.annotation.Nullable
  public String getXpath() {
    return xpath;
  }

  public void setXpath(String xpath) {
    this.xpath = xpath;
  }


  public GoogleShoppingSerpMerchantSerpElementItem domain(String domain) {
    this.domain = domain;
    return this;
  }

   /**
   * domain in SERP
   * @return domain
  **/
  @javax.annotation.Nullable
  public String getDomain() {
    return domain;
  }

  public void setDomain(String domain) {
    this.domain = domain;
  }


  public GoogleShoppingSerpMerchantSerpElementItem title(String title) {
    this.title = title;
    return this;
  }

   /**
   * title of the element
   * @return title
  **/
  @javax.annotation.Nullable
  public String getTitle() {
    return title;
  }

  public void setTitle(String title) {
    this.title = title;
  }


  public GoogleShoppingSerpMerchantSerpElementItem description(String description) {
    this.description = description;
    return this;
  }

   /**
   * description of the product in Google Shopping SERP
   * @return description
  **/
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public GoogleShoppingSerpMerchantSerpElementItem url(String url) {
    this.url = url;
    return this;
  }

   /**
   * URL to the product page on the seller’s website
   * @return url
  **/
  @javax.annotation.Nullable
  public String getUrl() {
    return url;
  }

  public void setUrl(String url) {
    this.url = url;
  }


  public GoogleShoppingSerpMerchantSerpElementItem shoppingUrl(String shoppingUrl) {
    this.shoppingUrl = shoppingUrl;
    return this;
  }

   /**
   * URL to the product page on Google Shopping
   * @return shoppingUrl
  **/
  @javax.annotation.Nullable
  public String getShoppingUrl() {
    return shoppingUrl;
  }

  public void setShoppingUrl(String shoppingUrl) {
    this.shoppingUrl = shoppingUrl;
  }


  public GoogleShoppingSerpMerchantSerpElementItem tags(List<String> tags) {
    this.tags = tags;
    return this;
  }

  public GoogleShoppingSerpMerchantSerpElementItem addTagsItem(String tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<>();
    }
    this.tags.add(tagsItem);
    return this;
  }

   /**
   * tags assigned to the product
   * @return tags
  **/
  @javax.annotation.Nullable
  public List<String> getTags() {
    return tags;
  }

  public void setTags(List<String> tags) {
    this.tags = tags;
  }


  public GoogleShoppingSerpMerchantSerpElementItem price(Float price) {
    this.price = price;
    return this;
  }

   /**
   * product price example: 384.99
   * @return price
  **/
  @javax.annotation.Nullable
  public Float getPrice() {
    return price;
  }

  public void setPrice(Float price) {
    this.price = price;
  }


  public GoogleShoppingSerpMerchantSerpElementItem oldPrice(Float oldPrice) {
    this.oldPrice = oldPrice;
    return this;
  }

   /**
   * product old price displayed if the product price has been changed example: 499
   * @return oldPrice
  **/
  @javax.annotation.Nullable
  public Float getOldPrice() {
    return oldPrice;
  }

  public void setOldPrice(Float oldPrice) {
    this.oldPrice = oldPrice;
  }


  public GoogleShoppingSerpMerchantSerpElementItem currency(String currency) {
    this.currency = currency;
    return this;
  }

   /**
   * currency in the ISO format example: USD
   * @return currency
  **/
  @javax.annotation.Nullable
  public String getCurrency() {
    return currency;
  }

  public void setCurrency(String currency) {
    this.currency = currency;
  }


  public GoogleShoppingSerpMerchantSerpElementItem productId(String productId) {
    this.productId = productId;
    return this;
  }

   /**
   * unique product identifier on Google Shopping note that there is no full list of possible values as the product_id is a dynamic value assigned by Google if there are no values, you will get null example: 4485466949985702538 learn more about the parameter in this help center guide
   * @return productId
  **/
  @javax.annotation.Nullable
  public String getProductId() {
    return productId;
  }

  public void setProductId(String productId) {
    this.productId = productId;
  }


  public GoogleShoppingSerpMerchantSerpElementItem dataDocid(String dataDocid) {
    this.dataDocid = dataDocid;
    return this;
  }

   /**
   * unique identifier of the SERP data element note that there is no full list of possible values as the data_docid is a dynamic value assigned by Google example: 17363035694596624076
   * @return dataDocid
  **/
  @javax.annotation.Nullable
  public String getDataDocid() {
    return dataDocid;
  }

  public void setDataDocid(String dataDocid) {
    this.dataDocid = dataDocid;
  }


  public GoogleShoppingSerpMerchantSerpElementItem seller(String seller) {
    this.seller = seller;
    return this;
  }

   /**
   * name of the seller the name of the company that placed a corresponding product on Google Shopping
   * @return seller
  **/
  @javax.annotation.Nullable
  public String getSeller() {
    return seller;
  }

  public void setSeller(String seller) {
    this.seller = seller;
  }


  public GoogleShoppingSerpMerchantSerpElementItem additionalSpecifications(Map<String, String> additionalSpecifications) {
    this.additionalSpecifications = additionalSpecifications;
    return this;
  }

  public GoogleShoppingSerpMerchantSerpElementItem putAdditionalSpecificationsItem(String key, String additionalSpecificationsItem) {
    if (this.additionalSpecifications == null) {
      this.additionalSpecifications = new HashMap<>();
    }
    this.additionalSpecifications.put(key, additionalSpecificationsItem);
    return this;
  }

   /**
   * object containing additional url parameters you can get more details about the product by using this object in the POST request to the Google Shopping Product Specification and Google Shopping Sellers endpoint
   * @return additionalSpecifications
  **/
  @javax.annotation.Nullable
  public Map<String, String> getAdditionalSpecifications() {
    return additionalSpecifications;
  }

  public void setAdditionalSpecifications(Map<String, String> additionalSpecifications) {
    this.additionalSpecifications = additionalSpecifications;
  }


  public GoogleShoppingSerpMerchantSerpElementItem reviewsCount(Long reviewsCount) {
    this.reviewsCount = reviewsCount;
    return this;
  }

   /**
   * number of product reviews indicates the number of reviews left by users on Google Shopping if there are no values, you will get null
   * @return reviewsCount
  **/
  @javax.annotation.Nullable
  public Long getReviewsCount() {
    return reviewsCount;
  }

  public void setReviewsCount(Long reviewsCount) {
    this.reviewsCount = reviewsCount;
  }


  public GoogleShoppingSerpMerchantSerpElementItem isBestMatch(Boolean isBestMatch) {
    this.isBestMatch = isBestMatch;
    return this;
  }

   /**
   * “best match” label if the value is true, the product is marked with the “best match” label if there are no values, you will get null
   * @return isBestMatch
  **/
  @javax.annotation.Nullable
  public Boolean getIsBestMatch() {
    return isBestMatch;
  }

  public void setIsBestMatch(Boolean isBestMatch) {
    this.isBestMatch = isBestMatch;
  }


  public GoogleShoppingSerpMerchantSerpElementItem productRating(RatingElement productRating) {
    this.productRating = productRating;
    return this;
  }

   /**
   * Get productRating
   * @return productRating
  **/
  @javax.annotation.Nullable
  public RatingElement getProductRating() {
    return productRating;
  }

  public void setProductRating(RatingElement productRating) {
    this.productRating = productRating;
  }


  public GoogleShoppingSerpMerchantSerpElementItem shopRating(RatingElement shopRating) {
    this.shopRating = shopRating;
    return this;
  }

   /**
   * Get shopRating
   * @return shopRating
  **/
  @javax.annotation.Nullable
  public RatingElement getShopRating() {
    return shopRating;
  }

  public void setShopRating(RatingElement shopRating) {
    this.shopRating = shopRating;
  }


  public GoogleShoppingSerpMerchantSerpElementItem productImages(List<String> productImages) {
    this.productImages = productImages;
    return this;
  }

  public GoogleShoppingSerpMerchantSerpElementItem addProductImagesItem(String productImagesItem) {
    if (this.productImages == null) {
      this.productImages = new ArrayList<>();
    }
    this.productImages.add(productImagesItem);
    return this;
  }

   /**
   * URLs to the images of the product the first URL in the array is the featured image of the product
   * @return productImages
  **/
  @javax.annotation.Nullable
  public List<String> getProductImages() {
    return productImages;
  }

  public void setProductImages(List<String> productImages) {
    this.productImages = productImages;
  }


  public GoogleShoppingSerpMerchantSerpElementItem shopAdAclk(String shopAdAclk) {
    this.shopAdAclk = shopAdAclk;
    return this;
  }

   /**
   * unique ad click referral parameter using this parameter you can get a URL of the advertisement in Google Shopping Sellers Ad URL
   * @return shopAdAclk
  **/
  @javax.annotation.Nullable
  public String getShopAdAclk() {
    return shopAdAclk;
  }

  public void setShopAdAclk(String shopAdAclk) {
    this.shopAdAclk = shopAdAclk;
  }


  public GoogleShoppingSerpMerchantSerpElementItem deliveryInfo(DeliveryInfo deliveryInfo) {
    this.deliveryInfo = deliveryInfo;
    return this;
  }

   /**
   * Get deliveryInfo
   * @return deliveryInfo
  **/
  @javax.annotation.Nullable
  public DeliveryInfo getDeliveryInfo() {
    return deliveryInfo;
  }

  public void setDeliveryInfo(DeliveryInfo deliveryInfo) {
    this.deliveryInfo = deliveryInfo;
  }


  public GoogleShoppingSerpMerchantSerpElementItem storesCountInfo(StoresCountInfo storesCountInfo) {
    this.storesCountInfo = storesCountInfo;
    return this;
  }

   /**
   * Get storesCountInfo
   * @return storesCountInfo
  **/
  @javax.annotation.Nullable
  public StoresCountInfo getStoresCountInfo() {
    return storesCountInfo;
  }

  public void setStoresCountInfo(StoresCountInfo storesCountInfo) {
    this.storesCountInfo = storesCountInfo;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleShoppingSerpMerchantSerpElementItem googleShoppingSerpMerchantSerpElementItem = (GoogleShoppingSerpMerchantSerpElementItem) o;
    return Objects.equals(this.rankGroup, googleShoppingSerpMerchantSerpElementItem.rankGroup) &&
        Objects.equals(this.rankAbsolute, googleShoppingSerpMerchantSerpElementItem.rankAbsolute) &&
        Objects.equals(this.position, googleShoppingSerpMerchantSerpElementItem.position) &&
        Objects.equals(this.xpath, googleShoppingSerpMerchantSerpElementItem.xpath) &&
        Objects.equals(this.domain, googleShoppingSerpMerchantSerpElementItem.domain) &&
        Objects.equals(this.title, googleShoppingSerpMerchantSerpElementItem.title) &&
        Objects.equals(this.description, googleShoppingSerpMerchantSerpElementItem.description) &&
        Objects.equals(this.url, googleShoppingSerpMerchantSerpElementItem.url) &&
        Objects.equals(this.shoppingUrl, googleShoppingSerpMerchantSerpElementItem.shoppingUrl) &&
        Objects.equals(this.tags, googleShoppingSerpMerchantSerpElementItem.tags) &&
        Objects.equals(this.price, googleShoppingSerpMerchantSerpElementItem.price) &&
        Objects.equals(this.oldPrice, googleShoppingSerpMerchantSerpElementItem.oldPrice) &&
        Objects.equals(this.currency, googleShoppingSerpMerchantSerpElementItem.currency) &&
        Objects.equals(this.productId, googleShoppingSerpMerchantSerpElementItem.productId) &&
        Objects.equals(this.dataDocid, googleShoppingSerpMerchantSerpElementItem.dataDocid) &&
        Objects.equals(this.seller, googleShoppingSerpMerchantSerpElementItem.seller) &&
        Objects.equals(this.additionalSpecifications, googleShoppingSerpMerchantSerpElementItem.additionalSpecifications) &&
        Objects.equals(this.reviewsCount, googleShoppingSerpMerchantSerpElementItem.reviewsCount) &&
        Objects.equals(this.isBestMatch, googleShoppingSerpMerchantSerpElementItem.isBestMatch) &&
        Objects.equals(this.productRating, googleShoppingSerpMerchantSerpElementItem.productRating) &&
        Objects.equals(this.shopRating, googleShoppingSerpMerchantSerpElementItem.shopRating) &&
        Objects.equals(this.productImages, googleShoppingSerpMerchantSerpElementItem.productImages) &&
        Objects.equals(this.shopAdAclk, googleShoppingSerpMerchantSerpElementItem.shopAdAclk) &&
        Objects.equals(this.deliveryInfo, googleShoppingSerpMerchantSerpElementItem.deliveryInfo) &&
        Objects.equals(this.storesCountInfo, googleShoppingSerpMerchantSerpElementItem.storesCountInfo) &&
        super.equals(o);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(rankGroup, rankAbsolute, position, xpath, domain, title, description, url, shoppingUrl, tags, price, oldPrice, currency, productId, dataDocid, seller, additionalSpecifications, reviewsCount, isBestMatch, productRating, shopRating, productImages, shopAdAclk, deliveryInfo, storesCountInfo, super.hashCode());
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleShoppingSerpMerchantSerpElementItem {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    rankGroup: ").append(toIndentedString(rankGroup)).append("\n");
    sb.append("    rankAbsolute: ").append(toIndentedString(rankAbsolute)).append("\n");
    sb.append("    position: ").append(toIndentedString(position)).append("\n");
    sb.append("    xpath: ").append(toIndentedString(xpath)).append("\n");
    sb.append("    domain: ").append(toIndentedString(domain)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    shoppingUrl: ").append(toIndentedString(shoppingUrl)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    price: ").append(toIndentedString(price)).append("\n");
    sb.append("    oldPrice: ").append(toIndentedString(oldPrice)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    productId: ").append(toIndentedString(productId)).append("\n");
    sb.append("    dataDocid: ").append(toIndentedString(dataDocid)).append("\n");
    sb.append("    seller: ").append(toIndentedString(seller)).append("\n");
    sb.append("    additionalSpecifications: ").append(toIndentedString(additionalSpecifications)).append("\n");
    sb.append("    reviewsCount: ").append(toIndentedString(reviewsCount)).append("\n");
    sb.append("    isBestMatch: ").append(toIndentedString(isBestMatch)).append("\n");
    sb.append("    productRating: ").append(toIndentedString(productRating)).append("\n");
    sb.append("    shopRating: ").append(toIndentedString(shopRating)).append("\n");
    sb.append("    productImages: ").append(toIndentedString(productImages)).append("\n");
    sb.append("    shopAdAclk: ").append(toIndentedString(shopAdAclk)).append("\n");
    sb.append("    deliveryInfo: ").append(toIndentedString(deliveryInfo)).append("\n");
    sb.append("    storesCountInfo: ").append(toIndentedString(storesCountInfo)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("type");
    openapiFields.add("rank_group");
    openapiFields.add("rank_absolute");
    openapiFields.add("position");
    openapiFields.add("xpath");
    openapiFields.add("domain");
    openapiFields.add("title");
    openapiFields.add("description");
    openapiFields.add("url");
    openapiFields.add("shopping_url");
    openapiFields.add("tags");
    openapiFields.add("price");
    openapiFields.add("old_price");
    openapiFields.add("currency");
    openapiFields.add("product_id");
    openapiFields.add("data_docid");
    openapiFields.add("seller");
    openapiFields.add("additional_specifications");
    openapiFields.add("reviews_count");
    openapiFields.add("is_best_match");
    openapiFields.add("product_rating");
    openapiFields.add("shop_rating");
    openapiFields.add("product_images");
    openapiFields.add("shop_ad_aclk");
    openapiFields.add("delivery_info");
    openapiFields.add("stores_count_info");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to GoogleShoppingSerpMerchantSerpElementItem
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleShoppingSerpMerchantSerpElementItem.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleShoppingSerpMerchantSerpElementItem is not found in the empty JSON string", GoogleShoppingSerpMerchantSerpElementItem.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleShoppingSerpMerchantSerpElementItem.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleShoppingSerpMerchantSerpElementItem` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleShoppingSerpMerchantSerpElementItem.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleShoppingSerpMerchantSerpElementItem' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleShoppingSerpMerchantSerpElementItem> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleShoppingSerpMerchantSerpElementItem.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleShoppingSerpMerchantSerpElementItem>() {
           @Override
           public void write(JsonWriter out, GoogleShoppingSerpMerchantSerpElementItem value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleShoppingSerpMerchantSerpElementItem read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of GoogleShoppingSerpMerchantSerpElementItem given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of GoogleShoppingSerpMerchantSerpElementItem
  * @throws IOException if the JSON string is invalid with respect to GoogleShoppingSerpMerchantSerpElementItem
  */
  public static GoogleShoppingSerpMerchantSerpElementItem fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleShoppingSerpMerchantSerpElementItem.class);
  }

 /**
  * Convert an instance of GoogleShoppingSerpMerchantSerpElementItem to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

