/*
 * DataForSEO API documentation
 * DataForSEO API is the starting point on your journey towards building powerful SEO software. With DataForSEO you can get all the data you need to build an efficient application while also saving your time and budget. DataForSEO API is using the REST technology for interchanging data between your application and our service. The data exchange is made through the widely used HTTP protocol, which allows applying our API to almost all programming languages.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.dataforseo.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.dataforseo.client.model.PriceInfo;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.dataforseo.client.JSON;

/**
 * AmazonDeliveryInfo
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-06-02T18:32:56.856102800+03:00[Europe/Kiev]")
public class AmazonDeliveryInfo {
  public static final String SERIALIZED_NAME_DELIVERY_MESSAGE = "delivery_message";
  @SerializedName(SERIALIZED_NAME_DELIVERY_MESSAGE)
  private String deliveryMessage;

  public static final String SERIALIZED_NAME_DELIVERY_DATE_FROM = "delivery_date_from";
  @SerializedName(SERIALIZED_NAME_DELIVERY_DATE_FROM)
  private String deliveryDateFrom;

  public static final String SERIALIZED_NAME_DELIVERY_DATE_TO = "delivery_date_to";
  @SerializedName(SERIALIZED_NAME_DELIVERY_DATE_TO)
  private String deliveryDateTo;

  public static final String SERIALIZED_NAME_FASTEST_DELIVERY_DATE_FROM = "fastest_delivery_date_from";
  @SerializedName(SERIALIZED_NAME_FASTEST_DELIVERY_DATE_FROM)
  private String fastestDeliveryDateFrom;

  public static final String SERIALIZED_NAME_FASTEST_DELIVERY_DATE_TO = "fastest_delivery_date_to";
  @SerializedName(SERIALIZED_NAME_FASTEST_DELIVERY_DATE_TO)
  private String fastestDeliveryDateTo;

  public static final String SERIALIZED_NAME_DELIVERY_PRICE = "delivery_price";
  @SerializedName(SERIALIZED_NAME_DELIVERY_PRICE)
  private PriceInfo deliveryPrice;

  public AmazonDeliveryInfo() {
  }

  public AmazonDeliveryInfo deliveryMessage(String deliveryMessage) {
    this.deliveryMessage = deliveryMessage;
    return this;
  }

   /**
   * message accompanying the delivery information as posted by the seller
   * @return deliveryMessage
  **/
  @javax.annotation.Nullable
  public String getDeliveryMessage() {
    return deliveryMessage;
  }

  public void setDeliveryMessage(String deliveryMessage) {
    this.deliveryMessage = deliveryMessage;
  }


  public AmazonDeliveryInfo deliveryDateFrom(String deliveryDateFrom) {
    this.deliveryDateFrom = deliveryDateFrom;
    return this;
  }

   /**
   * the earliest date when the product can be shipped
   * @return deliveryDateFrom
  **/
  @javax.annotation.Nullable
  public String getDeliveryDateFrom() {
    return deliveryDateFrom;
  }

  public void setDeliveryDateFrom(String deliveryDateFrom) {
    this.deliveryDateFrom = deliveryDateFrom;
  }


  public AmazonDeliveryInfo deliveryDateTo(String deliveryDateTo) {
    this.deliveryDateTo = deliveryDateTo;
    return this;
  }

   /**
   * the latest date when the product can be delivered
   * @return deliveryDateTo
  **/
  @javax.annotation.Nullable
  public String getDeliveryDateTo() {
    return deliveryDateTo;
  }

  public void setDeliveryDateTo(String deliveryDateTo) {
    this.deliveryDateTo = deliveryDateTo;
  }


  public AmazonDeliveryInfo fastestDeliveryDateFrom(String fastestDeliveryDateFrom) {
    this.fastestDeliveryDateFrom = fastestDeliveryDateFrom;
    return this;
  }

   /**
   * the earliest date when the product can be delivered with a fast delivery option
   * @return fastestDeliveryDateFrom
  **/
  @javax.annotation.Nullable
  public String getFastestDeliveryDateFrom() {
    return fastestDeliveryDateFrom;
  }

  public void setFastestDeliveryDateFrom(String fastestDeliveryDateFrom) {
    this.fastestDeliveryDateFrom = fastestDeliveryDateFrom;
  }


  public AmazonDeliveryInfo fastestDeliveryDateTo(String fastestDeliveryDateTo) {
    this.fastestDeliveryDateTo = fastestDeliveryDateTo;
    return this;
  }

   /**
   * the latest date when the product can be delivered with a fast delivery option
   * @return fastestDeliveryDateTo
  **/
  @javax.annotation.Nullable
  public String getFastestDeliveryDateTo() {
    return fastestDeliveryDateTo;
  }

  public void setFastestDeliveryDateTo(String fastestDeliveryDateTo) {
    this.fastestDeliveryDateTo = fastestDeliveryDateTo;
  }


  public AmazonDeliveryInfo deliveryPrice(PriceInfo deliveryPrice) {
    this.deliveryPrice = deliveryPrice;
    return this;
  }

   /**
   * Get deliveryPrice
   * @return deliveryPrice
  **/
  @javax.annotation.Nullable
  public PriceInfo getDeliveryPrice() {
    return deliveryPrice;
  }

  public void setDeliveryPrice(PriceInfo deliveryPrice) {
    this.deliveryPrice = deliveryPrice;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AmazonDeliveryInfo amazonDeliveryInfo = (AmazonDeliveryInfo) o;
    return Objects.equals(this.deliveryMessage, amazonDeliveryInfo.deliveryMessage) &&
        Objects.equals(this.deliveryDateFrom, amazonDeliveryInfo.deliveryDateFrom) &&
        Objects.equals(this.deliveryDateTo, amazonDeliveryInfo.deliveryDateTo) &&
        Objects.equals(this.fastestDeliveryDateFrom, amazonDeliveryInfo.fastestDeliveryDateFrom) &&
        Objects.equals(this.fastestDeliveryDateTo, amazonDeliveryInfo.fastestDeliveryDateTo) &&
        Objects.equals(this.deliveryPrice, amazonDeliveryInfo.deliveryPrice);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(deliveryMessage, deliveryDateFrom, deliveryDateTo, fastestDeliveryDateFrom, fastestDeliveryDateTo, deliveryPrice);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AmazonDeliveryInfo {\n");
    sb.append("    deliveryMessage: ").append(toIndentedString(deliveryMessage)).append("\n");
    sb.append("    deliveryDateFrom: ").append(toIndentedString(deliveryDateFrom)).append("\n");
    sb.append("    deliveryDateTo: ").append(toIndentedString(deliveryDateTo)).append("\n");
    sb.append("    fastestDeliveryDateFrom: ").append(toIndentedString(fastestDeliveryDateFrom)).append("\n");
    sb.append("    fastestDeliveryDateTo: ").append(toIndentedString(fastestDeliveryDateTo)).append("\n");
    sb.append("    deliveryPrice: ").append(toIndentedString(deliveryPrice)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("delivery_message");
    openapiFields.add("delivery_date_from");
    openapiFields.add("delivery_date_to");
    openapiFields.add("fastest_delivery_date_from");
    openapiFields.add("fastest_delivery_date_to");
    openapiFields.add("delivery_price");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to AmazonDeliveryInfo
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!AmazonDeliveryInfo.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AmazonDeliveryInfo is not found in the empty JSON string", AmazonDeliveryInfo.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!AmazonDeliveryInfo.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AmazonDeliveryInfo` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("delivery_message") != null && !jsonObj.get("delivery_message").isJsonNull()) && !jsonObj.get("delivery_message").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `delivery_message` to be a primitive type in the JSON string but got `%s`", jsonObj.get("delivery_message").toString()));
      }
      if ((jsonObj.get("delivery_date_from") != null && !jsonObj.get("delivery_date_from").isJsonNull()) && !jsonObj.get("delivery_date_from").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `delivery_date_from` to be a primitive type in the JSON string but got `%s`", jsonObj.get("delivery_date_from").toString()));
      }
      if ((jsonObj.get("delivery_date_to") != null && !jsonObj.get("delivery_date_to").isJsonNull()) && !jsonObj.get("delivery_date_to").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `delivery_date_to` to be a primitive type in the JSON string but got `%s`", jsonObj.get("delivery_date_to").toString()));
      }
      if ((jsonObj.get("fastest_delivery_date_from") != null && !jsonObj.get("fastest_delivery_date_from").isJsonNull()) && !jsonObj.get("fastest_delivery_date_from").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `fastest_delivery_date_from` to be a primitive type in the JSON string but got `%s`", jsonObj.get("fastest_delivery_date_from").toString()));
      }
      if ((jsonObj.get("fastest_delivery_date_to") != null && !jsonObj.get("fastest_delivery_date_to").isJsonNull()) && !jsonObj.get("fastest_delivery_date_to").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `fastest_delivery_date_to` to be a primitive type in the JSON string but got `%s`", jsonObj.get("fastest_delivery_date_to").toString()));
      }
      // validate the optional field `delivery_price`
      if (jsonObj.get("delivery_price") != null && !jsonObj.get("delivery_price").isJsonNull()) {
        PriceInfo.validateJsonElement(jsonObj.get("delivery_price"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AmazonDeliveryInfo.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AmazonDeliveryInfo' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AmazonDeliveryInfo> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AmazonDeliveryInfo.class));

       return (TypeAdapter<T>) new TypeAdapter<AmazonDeliveryInfo>() {
           @Override
           public void write(JsonWriter out, AmazonDeliveryInfo value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AmazonDeliveryInfo read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of AmazonDeliveryInfo given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of AmazonDeliveryInfo
  * @throws IOException if the JSON string is invalid with respect to AmazonDeliveryInfo
  */
  public static AmazonDeliveryInfo fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AmazonDeliveryInfo.class);
  }

 /**
  * Convert an instance of AmazonDeliveryInfo to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

