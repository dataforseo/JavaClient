/*
 * DataForSEO API documentation
 * DataForSEO API is the starting point on your journey towards building powerful SEO software. With DataForSEO you can get all the data you need to build an efficient application while also saving your time and budget. DataForSEO API is using the REST technology for interchanging data between your application and our service. The data exchange is made through the widely used HTTP protocol, which allows applying our API to almost all programming languages.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.dataforseo.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.dataforseo.client.model.KeywordDataKeywordDataInfo;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.dataforseo.client.JSON;

/**
 * DataforseoLabsGoogleKeywordSuggestionsLiveResultInfo
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-07-02T09:14:36.455142500+03:00[Europe/Kiev]")
public class DataforseoLabsGoogleKeywordSuggestionsLiveResultInfo {
  public static final String SERIALIZED_NAME_SE_TYPE = "se_type";
  @SerializedName(SERIALIZED_NAME_SE_TYPE)
  private String seType;

  public static final String SERIALIZED_NAME_SEED_KEYWORD = "seed_keyword";
  @SerializedName(SERIALIZED_NAME_SEED_KEYWORD)
  private String seedKeyword;

  public static final String SERIALIZED_NAME_SEED_KEYWORD_DATA = "seed_keyword_data";
  @SerializedName(SERIALIZED_NAME_SEED_KEYWORD_DATA)
  private Map<String, String> seedKeywordData;

  public static final String SERIALIZED_NAME_LOCATION_CODE = "location_code";
  @SerializedName(SERIALIZED_NAME_LOCATION_CODE)
  private Integer locationCode;

  public static final String SERIALIZED_NAME_LANGUAGE_CODE = "language_code";
  @SerializedName(SERIALIZED_NAME_LANGUAGE_CODE)
  private String languageCode;

  public static final String SERIALIZED_NAME_TOTAL_COUNT = "total_count";
  @SerializedName(SERIALIZED_NAME_TOTAL_COUNT)
  private Long totalCount;

  public static final String SERIALIZED_NAME_ITEMS_COUNT = "items_count";
  @SerializedName(SERIALIZED_NAME_ITEMS_COUNT)
  private Long itemsCount;

  public static final String SERIALIZED_NAME_OFFSET = "offset";
  @SerializedName(SERIALIZED_NAME_OFFSET)
  private Integer offset;

  public static final String SERIALIZED_NAME_OFFSET_TOKEN = "offset_token";
  @SerializedName(SERIALIZED_NAME_OFFSET_TOKEN)
  private String offsetToken;

  public static final String SERIALIZED_NAME_ITEMS = "items";
  @SerializedName(SERIALIZED_NAME_ITEMS)
  private List<KeywordDataKeywordDataInfo> items;

  public DataforseoLabsGoogleKeywordSuggestionsLiveResultInfo() {
  }

  public DataforseoLabsGoogleKeywordSuggestionsLiveResultInfo seType(String seType) {
    this.seType = seType;
    return this;
  }

   /**
   * search engine type
   * @return seType
  **/
  @javax.annotation.Nullable
  public String getSeType() {
    return seType;
  }

  public void setSeType(String seType) {
    this.seType = seType;
  }


  public DataforseoLabsGoogleKeywordSuggestionsLiveResultInfo seedKeyword(String seedKeyword) {
    this.seedKeyword = seedKeyword;
    return this;
  }

   /**
   * keyword in a POST array
   * @return seedKeyword
  **/
  @javax.annotation.Nullable
  public String getSeedKeyword() {
    return seedKeyword;
  }

  public void setSeedKeyword(String seedKeyword) {
    this.seedKeyword = seedKeyword;
  }


  public DataforseoLabsGoogleKeywordSuggestionsLiveResultInfo seedKeywordData(Map<String, String> seedKeywordData) {
    this.seedKeywordData = seedKeywordData;
    return this;
  }

  public DataforseoLabsGoogleKeywordSuggestionsLiveResultInfo putSeedKeywordDataItem(String key, String seedKeywordDataItem) {
    if (this.seedKeywordData == null) {
      this.seedKeywordData = new HashMap<>();
    }
    this.seedKeywordData.put(key, seedKeywordDataItem);
    return this;
  }

   /**
   * keyword data for the seed keyword fields in this object are identical to those of the items array
   * @return seedKeywordData
  **/
  @javax.annotation.Nullable
  public Map<String, String> getSeedKeywordData() {
    return seedKeywordData;
  }

  public void setSeedKeywordData(Map<String, String> seedKeywordData) {
    this.seedKeywordData = seedKeywordData;
  }


  public DataforseoLabsGoogleKeywordSuggestionsLiveResultInfo locationCode(Integer locationCode) {
    this.locationCode = locationCode;
    return this;
  }

   /**
   * location code in a POST array if there is no data, then the value is null
   * @return locationCode
  **/
  @javax.annotation.Nullable
  public Integer getLocationCode() {
    return locationCode;
  }

  public void setLocationCode(Integer locationCode) {
    this.locationCode = locationCode;
  }


  public DataforseoLabsGoogleKeywordSuggestionsLiveResultInfo languageCode(String languageCode) {
    this.languageCode = languageCode;
    return this;
  }

   /**
   * language code in a POST array if there is no data, then the value is null
   * @return languageCode
  **/
  @javax.annotation.Nullable
  public String getLanguageCode() {
    return languageCode;
  }

  public void setLanguageCode(String languageCode) {
    this.languageCode = languageCode;
  }


  public DataforseoLabsGoogleKeywordSuggestionsLiveResultInfo totalCount(Long totalCount) {
    this.totalCount = totalCount;
    return this;
  }

   /**
   * total amount of results in our database relevant to your request
   * @return totalCount
  **/
  @javax.annotation.Nullable
  public Long getTotalCount() {
    return totalCount;
  }

  public void setTotalCount(Long totalCount) {
    this.totalCount = totalCount;
  }


  public DataforseoLabsGoogleKeywordSuggestionsLiveResultInfo itemsCount(Long itemsCount) {
    this.itemsCount = itemsCount;
    return this;
  }

   /**
   * the number of results returned in the items array
   * @return itemsCount
  **/
  @javax.annotation.Nullable
  public Long getItemsCount() {
    return itemsCount;
  }

  public void setItemsCount(Long itemsCount) {
    this.itemsCount = itemsCount;
  }


  public DataforseoLabsGoogleKeywordSuggestionsLiveResultInfo offset(Integer offset) {
    this.offset = offset;
    return this;
  }

   /**
   * current offset value
   * @return offset
  **/
  @javax.annotation.Nullable
  public Integer getOffset() {
    return offset;
  }

  public void setOffset(Integer offset) {
    this.offset = offset;
  }


  public DataforseoLabsGoogleKeywordSuggestionsLiveResultInfo offsetToken(String offsetToken) {
    this.offsetToken = offsetToken;
    return this;
  }

   /**
   * offset token for subsequent requests you can use the string provided in this field to get the subsequent results of the initial task; note: offset_token values are unique for each subsequent task
   * @return offsetToken
  **/
  @javax.annotation.Nullable
  public String getOffsetToken() {
    return offsetToken;
  }

  public void setOffsetToken(String offsetToken) {
    this.offsetToken = offsetToken;
  }


  public DataforseoLabsGoogleKeywordSuggestionsLiveResultInfo items(List<KeywordDataKeywordDataInfo> items) {
    this.items = items;
    return this;
  }

  public DataforseoLabsGoogleKeywordSuggestionsLiveResultInfo addItemsItem(KeywordDataKeywordDataInfo itemsItem) {
    if (this.items == null) {
      this.items = new ArrayList<>();
    }
    this.items.add(itemsItem);
    return this;
  }

   /**
   * contains keywords and related data
   * @return items
  **/
  @javax.annotation.Nullable
  public List<KeywordDataKeywordDataInfo> getItems() {
    return items;
  }

  public void setItems(List<KeywordDataKeywordDataInfo> items) {
    this.items = items;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DataforseoLabsGoogleKeywordSuggestionsLiveResultInfo dataforseoLabsGoogleKeywordSuggestionsLiveResultInfo = (DataforseoLabsGoogleKeywordSuggestionsLiveResultInfo) o;
    return Objects.equals(this.seType, dataforseoLabsGoogleKeywordSuggestionsLiveResultInfo.seType) &&
        Objects.equals(this.seedKeyword, dataforseoLabsGoogleKeywordSuggestionsLiveResultInfo.seedKeyword) &&
        Objects.equals(this.seedKeywordData, dataforseoLabsGoogleKeywordSuggestionsLiveResultInfo.seedKeywordData) &&
        Objects.equals(this.locationCode, dataforseoLabsGoogleKeywordSuggestionsLiveResultInfo.locationCode) &&
        Objects.equals(this.languageCode, dataforseoLabsGoogleKeywordSuggestionsLiveResultInfo.languageCode) &&
        Objects.equals(this.totalCount, dataforseoLabsGoogleKeywordSuggestionsLiveResultInfo.totalCount) &&
        Objects.equals(this.itemsCount, dataforseoLabsGoogleKeywordSuggestionsLiveResultInfo.itemsCount) &&
        Objects.equals(this.offset, dataforseoLabsGoogleKeywordSuggestionsLiveResultInfo.offset) &&
        Objects.equals(this.offsetToken, dataforseoLabsGoogleKeywordSuggestionsLiveResultInfo.offsetToken) &&
        Objects.equals(this.items, dataforseoLabsGoogleKeywordSuggestionsLiveResultInfo.items);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(seType, seedKeyword, seedKeywordData, locationCode, languageCode, totalCount, itemsCount, offset, offsetToken, items);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DataforseoLabsGoogleKeywordSuggestionsLiveResultInfo {\n");
    sb.append("    seType: ").append(toIndentedString(seType)).append("\n");
    sb.append("    seedKeyword: ").append(toIndentedString(seedKeyword)).append("\n");
    sb.append("    seedKeywordData: ").append(toIndentedString(seedKeywordData)).append("\n");
    sb.append("    locationCode: ").append(toIndentedString(locationCode)).append("\n");
    sb.append("    languageCode: ").append(toIndentedString(languageCode)).append("\n");
    sb.append("    totalCount: ").append(toIndentedString(totalCount)).append("\n");
    sb.append("    itemsCount: ").append(toIndentedString(itemsCount)).append("\n");
    sb.append("    offset: ").append(toIndentedString(offset)).append("\n");
    sb.append("    offsetToken: ").append(toIndentedString(offsetToken)).append("\n");
    sb.append("    items: ").append(toIndentedString(items)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("se_type");
    openapiFields.add("seed_keyword");
    openapiFields.add("seed_keyword_data");
    openapiFields.add("location_code");
    openapiFields.add("language_code");
    openapiFields.add("total_count");
    openapiFields.add("items_count");
    openapiFields.add("offset");
    openapiFields.add("offset_token");
    openapiFields.add("items");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to DataforseoLabsGoogleKeywordSuggestionsLiveResultInfo
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!DataforseoLabsGoogleKeywordSuggestionsLiveResultInfo.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in DataforseoLabsGoogleKeywordSuggestionsLiveResultInfo is not found in the empty JSON string", DataforseoLabsGoogleKeywordSuggestionsLiveResultInfo.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!DataforseoLabsGoogleKeywordSuggestionsLiveResultInfo.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `DataforseoLabsGoogleKeywordSuggestionsLiveResultInfo` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("se_type") != null && !jsonObj.get("se_type").isJsonNull()) && !jsonObj.get("se_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `se_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("se_type").toString()));
      }
      if ((jsonObj.get("seed_keyword") != null && !jsonObj.get("seed_keyword").isJsonNull()) && !jsonObj.get("seed_keyword").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `seed_keyword` to be a primitive type in the JSON string but got `%s`", jsonObj.get("seed_keyword").toString()));
      }
      if ((jsonObj.get("language_code") != null && !jsonObj.get("language_code").isJsonNull()) && !jsonObj.get("language_code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `language_code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("language_code").toString()));
      }
      if ((jsonObj.get("offset_token") != null && !jsonObj.get("offset_token").isJsonNull()) && !jsonObj.get("offset_token").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `offset_token` to be a primitive type in the JSON string but got `%s`", jsonObj.get("offset_token").toString()));
      }
      if (jsonObj.get("items") != null && !jsonObj.get("items").isJsonNull()) {
        JsonArray jsonArrayitems = jsonObj.getAsJsonArray("items");
        if (jsonArrayitems != null) {
          // ensure the json data is an array
          if (!jsonObj.get("items").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `items` to be an array in the JSON string but got `%s`", jsonObj.get("items").toString()));
          }

          // validate the optional field `items` (array)
          for (int i = 0; i < jsonArrayitems.size(); i++) {
            KeywordDataKeywordDataInfo.validateJsonElement(jsonArrayitems.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!DataforseoLabsGoogleKeywordSuggestionsLiveResultInfo.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'DataforseoLabsGoogleKeywordSuggestionsLiveResultInfo' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<DataforseoLabsGoogleKeywordSuggestionsLiveResultInfo> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(DataforseoLabsGoogleKeywordSuggestionsLiveResultInfo.class));

       return (TypeAdapter<T>) new TypeAdapter<DataforseoLabsGoogleKeywordSuggestionsLiveResultInfo>() {
           @Override
           public void write(JsonWriter out, DataforseoLabsGoogleKeywordSuggestionsLiveResultInfo value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public DataforseoLabsGoogleKeywordSuggestionsLiveResultInfo read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of DataforseoLabsGoogleKeywordSuggestionsLiveResultInfo given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of DataforseoLabsGoogleKeywordSuggestionsLiveResultInfo
  * @throws IOException if the JSON string is invalid with respect to DataforseoLabsGoogleKeywordSuggestionsLiveResultInfo
  */
  public static DataforseoLabsGoogleKeywordSuggestionsLiveResultInfo fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, DataforseoLabsGoogleKeywordSuggestionsLiveResultInfo.class);
  }

 /**
  * Convert an instance of DataforseoLabsGoogleKeywordSuggestionsLiveResultInfo to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

