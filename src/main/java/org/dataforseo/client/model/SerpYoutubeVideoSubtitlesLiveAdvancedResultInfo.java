/*
 * DataForSEO API documentation
 * DataForSEO API is the starting point on your journey towards building powerful SEO software. With DataForSEO you can get all the data you need to build an efficient application while also saving your time and budget. DataForSEO API is using the REST technology for interchanging data between your application and our service. The data exchange is made through the widely used HTTP protocol, which allows applying our API to almost all programming languages.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.dataforseo.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.dataforseo.client.model.BaseSerpElementItem;
import org.dataforseo.client.model.SpellInfo;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.dataforseo.client.JSON;

/**
 * SerpYoutubeVideoSubtitlesLiveAdvancedResultInfo
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-04-26T17:31:56.777561200+03:00[Europe/Kiev]")
public class SerpYoutubeVideoSubtitlesLiveAdvancedResultInfo {
  public static final String SERIALIZED_NAME_VIDEO_ID = "video_id";
  @SerializedName(SERIALIZED_NAME_VIDEO_ID)
  private String videoId;

  public static final String SERIALIZED_NAME_SE_DOMAIN = "se_domain";
  @SerializedName(SERIALIZED_NAME_SE_DOMAIN)
  private String seDomain;

  public static final String SERIALIZED_NAME_LOCATION_CODE = "location_code";
  @SerializedName(SERIALIZED_NAME_LOCATION_CODE)
  private Integer locationCode;

  public static final String SERIALIZED_NAME_LANGUAGE_CODE = "language_code";
  @SerializedName(SERIALIZED_NAME_LANGUAGE_CODE)
  private String languageCode;

  public static final String SERIALIZED_NAME_CHECK_URL = "check_url";
  @SerializedName(SERIALIZED_NAME_CHECK_URL)
  private String checkUrl;

  public static final String SERIALIZED_NAME_DATETIME = "datetime";
  @SerializedName(SERIALIZED_NAME_DATETIME)
  private String datetime;

  public static final String SERIALIZED_NAME_SPELL = "spell";
  @SerializedName(SERIALIZED_NAME_SPELL)
  private SpellInfo spell;

  public static final String SERIALIZED_NAME_ITEM_TYPES = "item_types";
  @SerializedName(SERIALIZED_NAME_ITEM_TYPES)
  private List<String> itemTypes;

  public static final String SERIALIZED_NAME_UNSUPPORTED_LANGUAGE = "unsupported_language";
  @SerializedName(SERIALIZED_NAME_UNSUPPORTED_LANGUAGE)
  private Boolean unsupportedLanguage;

  public static final String SERIALIZED_NAME_TRANSLATE_LANGUAGE = "translate_language";
  @SerializedName(SERIALIZED_NAME_TRANSLATE_LANGUAGE)
  private String translateLanguage;

  public static final String SERIALIZED_NAME_ORIGIN_LANGUAGE = "origin_language";
  @SerializedName(SERIALIZED_NAME_ORIGIN_LANGUAGE)
  private String originLanguage;

  public static final String SERIALIZED_NAME_CATEGORY = "category";
  @SerializedName(SERIALIZED_NAME_CATEGORY)
  private String category;

  public static final String SERIALIZED_NAME_SUBTITLES_COUNT = "subtitles_count";
  @SerializedName(SERIALIZED_NAME_SUBTITLES_COUNT)
  private Long subtitlesCount;

  public static final String SERIALIZED_NAME_TITLE = "title";
  @SerializedName(SERIALIZED_NAME_TITLE)
  private String title;

  public static final String SERIALIZED_NAME_ITEMS_COUNT = "items_count";
  @SerializedName(SERIALIZED_NAME_ITEMS_COUNT)
  private Long itemsCount;

  public static final String SERIALIZED_NAME_ITEMS = "items";
  @SerializedName(SERIALIZED_NAME_ITEMS)
  private List<BaseSerpElementItem> items;

  public SerpYoutubeVideoSubtitlesLiveAdvancedResultInfo() {
  }

  public SerpYoutubeVideoSubtitlesLiveAdvancedResultInfo videoId(String videoId) {
    this.videoId = videoId;
    return this;
  }

   /**
   * ID of the video received in a POST array
   * @return videoId
  **/
  @javax.annotation.Nullable
  public String getVideoId() {
    return videoId;
  }

  public void setVideoId(String videoId) {
    this.videoId = videoId;
  }


  public SerpYoutubeVideoSubtitlesLiveAdvancedResultInfo seDomain(String seDomain) {
    this.seDomain = seDomain;
    return this;
  }

   /**
   * search engine domain in a POST array
   * @return seDomain
  **/
  @javax.annotation.Nullable
  public String getSeDomain() {
    return seDomain;
  }

  public void setSeDomain(String seDomain) {
    this.seDomain = seDomain;
  }


  public SerpYoutubeVideoSubtitlesLiveAdvancedResultInfo locationCode(Integer locationCode) {
    this.locationCode = locationCode;
    return this;
  }

   /**
   * location code in a POST array
   * @return locationCode
  **/
  @javax.annotation.Nullable
  public Integer getLocationCode() {
    return locationCode;
  }

  public void setLocationCode(Integer locationCode) {
    this.locationCode = locationCode;
  }


  public SerpYoutubeVideoSubtitlesLiveAdvancedResultInfo languageCode(String languageCode) {
    this.languageCode = languageCode;
    return this;
  }

   /**
   * language code in a POST array
   * @return languageCode
  **/
  @javax.annotation.Nullable
  public String getLanguageCode() {
    return languageCode;
  }

  public void setLanguageCode(String languageCode) {
    this.languageCode = languageCode;
  }


  public SerpYoutubeVideoSubtitlesLiveAdvancedResultInfo checkUrl(String checkUrl) {
    this.checkUrl = checkUrl;
    return this;
  }

   /**
   * direct URL to search engine results you can use it to make sure that we provided accurate results
   * @return checkUrl
  **/
  @javax.annotation.Nullable
  public String getCheckUrl() {
    return checkUrl;
  }

  public void setCheckUrl(String checkUrl) {
    this.checkUrl = checkUrl;
  }


  public SerpYoutubeVideoSubtitlesLiveAdvancedResultInfo datetime(String datetime) {
    this.datetime = datetime;
    return this;
  }

   /**
   * date and time when the result was received in the UTC format: “yyyy-mm-dd hh-mm-ss +00:00” example: 2019-11-15 12:57:46 +00:00
   * @return datetime
  **/
  @javax.annotation.Nullable
  public String getDatetime() {
    return datetime;
  }

  public void setDatetime(String datetime) {
    this.datetime = datetime;
  }


  public SerpYoutubeVideoSubtitlesLiveAdvancedResultInfo spell(SpellInfo spell) {
    this.spell = spell;
    return this;
  }

   /**
   * Get spell
   * @return spell
  **/
  @javax.annotation.Nullable
  public SpellInfo getSpell() {
    return spell;
  }

  public void setSpell(SpellInfo spell) {
    this.spell = spell;
  }


  public SerpYoutubeVideoSubtitlesLiveAdvancedResultInfo itemTypes(List<String> itemTypes) {
    this.itemTypes = itemTypes;
    return this;
  }

  public SerpYoutubeVideoSubtitlesLiveAdvancedResultInfo addItemTypesItem(String itemTypesItem) {
    if (this.itemTypes == null) {
      this.itemTypes = new ArrayList<>();
    }
    this.itemTypes.add(itemTypesItem);
    return this;
  }

   /**
   * types of search results in SERP contains types of search results (items) found in SERP. possible item: youtube_subtitles
   * @return itemTypes
  **/
  @javax.annotation.Nullable
  public List<String> getItemTypes() {
    return itemTypes;
  }

  public void setItemTypes(List<String> itemTypes) {
    this.itemTypes = itemTypes;
  }


  public SerpYoutubeVideoSubtitlesLiveAdvancedResultInfo unsupportedLanguage(Boolean unsupportedLanguage) {
    this.unsupportedLanguage = unsupportedLanguage;
    return this;
  }

   /**
   * indicates whether the language is unsupported by the system
   * @return unsupportedLanguage
  **/
  @javax.annotation.Nullable
  public Boolean getUnsupportedLanguage() {
    return unsupportedLanguage;
  }

  public void setUnsupportedLanguage(Boolean unsupportedLanguage) {
    this.unsupportedLanguage = unsupportedLanguage;
  }


  public SerpYoutubeVideoSubtitlesLiveAdvancedResultInfo translateLanguage(String translateLanguage) {
    this.translateLanguage = translateLanguage;
    return this;
  }

   /**
   * language code of translated text
   * @return translateLanguage
  **/
  @javax.annotation.Nullable
  public String getTranslateLanguage() {
    return translateLanguage;
  }

  public void setTranslateLanguage(String translateLanguage) {
    this.translateLanguage = translateLanguage;
  }


  public SerpYoutubeVideoSubtitlesLiveAdvancedResultInfo originLanguage(String originLanguage) {
    this.originLanguage = originLanguage;
    return this;
  }

   /**
   * language code of original text
   * @return originLanguage
  **/
  @javax.annotation.Nullable
  public String getOriginLanguage() {
    return originLanguage;
  }

  public void setOriginLanguage(String originLanguage) {
    this.originLanguage = originLanguage;
  }


  public SerpYoutubeVideoSubtitlesLiveAdvancedResultInfo category(String category) {
    this.category = category;
    return this;
  }

   /**
   * the category the video belongs to
   * @return category
  **/
  @javax.annotation.Nullable
  public String getCategory() {
    return category;
  }

  public void setCategory(String category) {
    this.category = category;
  }


  public SerpYoutubeVideoSubtitlesLiveAdvancedResultInfo subtitlesCount(Long subtitlesCount) {
    this.subtitlesCount = subtitlesCount;
    return this;
  }

   /**
   * number of subtitles in the video
   * @return subtitlesCount
  **/
  @javax.annotation.Nullable
  public Long getSubtitlesCount() {
    return subtitlesCount;
  }

  public void setSubtitlesCount(Long subtitlesCount) {
    this.subtitlesCount = subtitlesCount;
  }


  public SerpYoutubeVideoSubtitlesLiveAdvancedResultInfo title(String title) {
    this.title = title;
    return this;
  }

   /**
   * title of the video
   * @return title
  **/
  @javax.annotation.Nullable
  public String getTitle() {
    return title;
  }

  public void setTitle(String title) {
    this.title = title;
  }


  public SerpYoutubeVideoSubtitlesLiveAdvancedResultInfo itemsCount(Long itemsCount) {
    this.itemsCount = itemsCount;
    return this;
  }

   /**
   * the number of results returned in the items array
   * @return itemsCount
  **/
  @javax.annotation.Nullable
  public Long getItemsCount() {
    return itemsCount;
  }

  public void setItemsCount(Long itemsCount) {
    this.itemsCount = itemsCount;
  }


  public SerpYoutubeVideoSubtitlesLiveAdvancedResultInfo items(List<BaseSerpElementItem> items) {
    this.items = items;
    return this;
  }

  public SerpYoutubeVideoSubtitlesLiveAdvancedResultInfo addItemsItem(BaseSerpElementItem itemsItem) {
    if (this.items == null) {
      this.items = new ArrayList<>();
    }
    this.items.add(itemsItem);
    return this;
  }

   /**
   * elements of search results found in SERP
   * @return items
  **/
  @javax.annotation.Nullable
  public List<BaseSerpElementItem> getItems() {
    return items;
  }

  public void setItems(List<BaseSerpElementItem> items) {
    this.items = items;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SerpYoutubeVideoSubtitlesLiveAdvancedResultInfo serpYoutubeVideoSubtitlesLiveAdvancedResultInfo = (SerpYoutubeVideoSubtitlesLiveAdvancedResultInfo) o;
    return Objects.equals(this.videoId, serpYoutubeVideoSubtitlesLiveAdvancedResultInfo.videoId) &&
        Objects.equals(this.seDomain, serpYoutubeVideoSubtitlesLiveAdvancedResultInfo.seDomain) &&
        Objects.equals(this.locationCode, serpYoutubeVideoSubtitlesLiveAdvancedResultInfo.locationCode) &&
        Objects.equals(this.languageCode, serpYoutubeVideoSubtitlesLiveAdvancedResultInfo.languageCode) &&
        Objects.equals(this.checkUrl, serpYoutubeVideoSubtitlesLiveAdvancedResultInfo.checkUrl) &&
        Objects.equals(this.datetime, serpYoutubeVideoSubtitlesLiveAdvancedResultInfo.datetime) &&
        Objects.equals(this.spell, serpYoutubeVideoSubtitlesLiveAdvancedResultInfo.spell) &&
        Objects.equals(this.itemTypes, serpYoutubeVideoSubtitlesLiveAdvancedResultInfo.itemTypes) &&
        Objects.equals(this.unsupportedLanguage, serpYoutubeVideoSubtitlesLiveAdvancedResultInfo.unsupportedLanguage) &&
        Objects.equals(this.translateLanguage, serpYoutubeVideoSubtitlesLiveAdvancedResultInfo.translateLanguage) &&
        Objects.equals(this.originLanguage, serpYoutubeVideoSubtitlesLiveAdvancedResultInfo.originLanguage) &&
        Objects.equals(this.category, serpYoutubeVideoSubtitlesLiveAdvancedResultInfo.category) &&
        Objects.equals(this.subtitlesCount, serpYoutubeVideoSubtitlesLiveAdvancedResultInfo.subtitlesCount) &&
        Objects.equals(this.title, serpYoutubeVideoSubtitlesLiveAdvancedResultInfo.title) &&
        Objects.equals(this.itemsCount, serpYoutubeVideoSubtitlesLiveAdvancedResultInfo.itemsCount) &&
        Objects.equals(this.items, serpYoutubeVideoSubtitlesLiveAdvancedResultInfo.items);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(videoId, seDomain, locationCode, languageCode, checkUrl, datetime, spell, itemTypes, unsupportedLanguage, translateLanguage, originLanguage, category, subtitlesCount, title, itemsCount, items);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SerpYoutubeVideoSubtitlesLiveAdvancedResultInfo {\n");
    sb.append("    videoId: ").append(toIndentedString(videoId)).append("\n");
    sb.append("    seDomain: ").append(toIndentedString(seDomain)).append("\n");
    sb.append("    locationCode: ").append(toIndentedString(locationCode)).append("\n");
    sb.append("    languageCode: ").append(toIndentedString(languageCode)).append("\n");
    sb.append("    checkUrl: ").append(toIndentedString(checkUrl)).append("\n");
    sb.append("    datetime: ").append(toIndentedString(datetime)).append("\n");
    sb.append("    spell: ").append(toIndentedString(spell)).append("\n");
    sb.append("    itemTypes: ").append(toIndentedString(itemTypes)).append("\n");
    sb.append("    unsupportedLanguage: ").append(toIndentedString(unsupportedLanguage)).append("\n");
    sb.append("    translateLanguage: ").append(toIndentedString(translateLanguage)).append("\n");
    sb.append("    originLanguage: ").append(toIndentedString(originLanguage)).append("\n");
    sb.append("    category: ").append(toIndentedString(category)).append("\n");
    sb.append("    subtitlesCount: ").append(toIndentedString(subtitlesCount)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    itemsCount: ").append(toIndentedString(itemsCount)).append("\n");
    sb.append("    items: ").append(toIndentedString(items)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("video_id");
    openapiFields.add("se_domain");
    openapiFields.add("location_code");
    openapiFields.add("language_code");
    openapiFields.add("check_url");
    openapiFields.add("datetime");
    openapiFields.add("spell");
    openapiFields.add("item_types");
    openapiFields.add("unsupported_language");
    openapiFields.add("translate_language");
    openapiFields.add("origin_language");
    openapiFields.add("category");
    openapiFields.add("subtitles_count");
    openapiFields.add("title");
    openapiFields.add("items_count");
    openapiFields.add("items");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to SerpYoutubeVideoSubtitlesLiveAdvancedResultInfo
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!SerpYoutubeVideoSubtitlesLiveAdvancedResultInfo.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in SerpYoutubeVideoSubtitlesLiveAdvancedResultInfo is not found in the empty JSON string", SerpYoutubeVideoSubtitlesLiveAdvancedResultInfo.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!SerpYoutubeVideoSubtitlesLiveAdvancedResultInfo.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `SerpYoutubeVideoSubtitlesLiveAdvancedResultInfo` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("video_id") != null && !jsonObj.get("video_id").isJsonNull()) && !jsonObj.get("video_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `video_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("video_id").toString()));
      }
      if ((jsonObj.get("se_domain") != null && !jsonObj.get("se_domain").isJsonNull()) && !jsonObj.get("se_domain").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `se_domain` to be a primitive type in the JSON string but got `%s`", jsonObj.get("se_domain").toString()));
      }
      if ((jsonObj.get("language_code") != null && !jsonObj.get("language_code").isJsonNull()) && !jsonObj.get("language_code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `language_code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("language_code").toString()));
      }
      if ((jsonObj.get("check_url") != null && !jsonObj.get("check_url").isJsonNull()) && !jsonObj.get("check_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `check_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("check_url").toString()));
      }
      if ((jsonObj.get("datetime") != null && !jsonObj.get("datetime").isJsonNull()) && !jsonObj.get("datetime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `datetime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("datetime").toString()));
      }
      // validate the optional field `spell`
      if (jsonObj.get("spell") != null && !jsonObj.get("spell").isJsonNull()) {
        SpellInfo.validateJsonElement(jsonObj.get("spell"));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("item_types") != null && !jsonObj.get("item_types").isJsonNull() && !jsonObj.get("item_types").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `item_types` to be an array in the JSON string but got `%s`", jsonObj.get("item_types").toString()));
      }
      if ((jsonObj.get("translate_language") != null && !jsonObj.get("translate_language").isJsonNull()) && !jsonObj.get("translate_language").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `translate_language` to be a primitive type in the JSON string but got `%s`", jsonObj.get("translate_language").toString()));
      }
      if ((jsonObj.get("origin_language") != null && !jsonObj.get("origin_language").isJsonNull()) && !jsonObj.get("origin_language").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `origin_language` to be a primitive type in the JSON string but got `%s`", jsonObj.get("origin_language").toString()));
      }
      if ((jsonObj.get("category") != null && !jsonObj.get("category").isJsonNull()) && !jsonObj.get("category").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `category` to be a primitive type in the JSON string but got `%s`", jsonObj.get("category").toString()));
      }
      if ((jsonObj.get("title") != null && !jsonObj.get("title").isJsonNull()) && !jsonObj.get("title").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `title` to be a primitive type in the JSON string but got `%s`", jsonObj.get("title").toString()));
      }
      if (jsonObj.get("items") != null && !jsonObj.get("items").isJsonNull()) {
        JsonArray jsonArrayitems = jsonObj.getAsJsonArray("items");
        if (jsonArrayitems != null) {
          // ensure the json data is an array
          if (!jsonObj.get("items").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `items` to be an array in the JSON string but got `%s`", jsonObj.get("items").toString()));
          }

          // validate the optional field `items` (array)
          for (int i = 0; i < jsonArrayitems.size(); i++) {
            BaseSerpElementItem.validateJsonElement(jsonArrayitems.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!SerpYoutubeVideoSubtitlesLiveAdvancedResultInfo.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'SerpYoutubeVideoSubtitlesLiveAdvancedResultInfo' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<SerpYoutubeVideoSubtitlesLiveAdvancedResultInfo> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(SerpYoutubeVideoSubtitlesLiveAdvancedResultInfo.class));

       return (TypeAdapter<T>) new TypeAdapter<SerpYoutubeVideoSubtitlesLiveAdvancedResultInfo>() {
           @Override
           public void write(JsonWriter out, SerpYoutubeVideoSubtitlesLiveAdvancedResultInfo value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public SerpYoutubeVideoSubtitlesLiveAdvancedResultInfo read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of SerpYoutubeVideoSubtitlesLiveAdvancedResultInfo given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of SerpYoutubeVideoSubtitlesLiveAdvancedResultInfo
  * @throws IOException if the JSON string is invalid with respect to SerpYoutubeVideoSubtitlesLiveAdvancedResultInfo
  */
  public static SerpYoutubeVideoSubtitlesLiveAdvancedResultInfo fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, SerpYoutubeVideoSubtitlesLiveAdvancedResultInfo.class);
  }

 /**
  * Convert an instance of SerpYoutubeVideoSubtitlesLiveAdvancedResultInfo to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

