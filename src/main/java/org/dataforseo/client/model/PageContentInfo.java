/*
 * DataForSEO API documentation
 * DataForSEO API is the starting point on your journey towards building powerful SEO software. With DataForSEO you can get all the data you need to build an efficient application while also saving your time and budget. DataForSEO API is using the REST technology for interchanging data between your application and our service. The data exchange is made through the widely used HTTP protocol, which allows applying our API to almost all programming languages.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.dataforseo.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.dataforseo.client.model.PageSectionContentInfo;
import org.dataforseo.client.model.TopicInfo;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.dataforseo.client.JSON;

/**
 * PageContentInfo
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-08-28T19:49:11.515676700+03:00[Europe/Kiev]")
public class PageContentInfo {
  public static final String SERIALIZED_NAME_HEADER = "header";
  @SerializedName(SERIALIZED_NAME_HEADER)
  private PageSectionContentInfo header;

  public static final String SERIALIZED_NAME_FOOTER = "footer";
  @SerializedName(SERIALIZED_NAME_FOOTER)
  private PageSectionContentInfo footer;

  public static final String SERIALIZED_NAME_MAIN_TOPIC = "main_topic";
  @SerializedName(SERIALIZED_NAME_MAIN_TOPIC)
  private List<TopicInfo> mainTopic;

  public static final String SERIALIZED_NAME_SECONDARY_TOPIC = "secondary_topic";
  @SerializedName(SERIALIZED_NAME_SECONDARY_TOPIC)
  private List<TopicInfo> secondaryTopic;

  public PageContentInfo() {
  }

  public PageContentInfo header(PageSectionContentInfo header) {
    this.header = header;
    return this;
  }

   /**
   * Get header
   * @return header
  **/
  @javax.annotation.Nullable
  public PageSectionContentInfo getHeader() {
    return header;
  }

  public void setHeader(PageSectionContentInfo header) {
    this.header = header;
  }


  public PageContentInfo footer(PageSectionContentInfo footer) {
    this.footer = footer;
    return this;
  }

   /**
   * Get footer
   * @return footer
  **/
  @javax.annotation.Nullable
  public PageSectionContentInfo getFooter() {
    return footer;
  }

  public void setFooter(PageSectionContentInfo footer) {
    this.footer = footer;
  }


  public PageContentInfo mainTopic(List<TopicInfo> mainTopic) {
    this.mainTopic = mainTopic;
    return this;
  }

  public PageContentInfo addMainTopicItem(TopicInfo mainTopicItem) {
    if (this.mainTopic == null) {
      this.mainTopic = new ArrayList<>();
    }
    this.mainTopic.add(mainTopicItem);
    return this;
  }

   /**
   * main topic on the page you can find more information about topic priority calculation in this help center article
   * @return mainTopic
  **/
  @javax.annotation.Nullable
  public List<TopicInfo> getMainTopic() {
    return mainTopic;
  }

  public void setMainTopic(List<TopicInfo> mainTopic) {
    this.mainTopic = mainTopic;
  }


  public PageContentInfo secondaryTopic(List<TopicInfo> secondaryTopic) {
    this.secondaryTopic = secondaryTopic;
    return this;
  }

  public PageContentInfo addSecondaryTopicItem(TopicInfo secondaryTopicItem) {
    if (this.secondaryTopic == null) {
      this.secondaryTopic = new ArrayList<>();
    }
    this.secondaryTopic.add(secondaryTopicItem);
    return this;
  }

   /**
   * secondary topic on the page you can find more information about topic priority calculation in this help center article
   * @return secondaryTopic
  **/
  @javax.annotation.Nullable
  public List<TopicInfo> getSecondaryTopic() {
    return secondaryTopic;
  }

  public void setSecondaryTopic(List<TopicInfo> secondaryTopic) {
    this.secondaryTopic = secondaryTopic;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PageContentInfo pageContentInfo = (PageContentInfo) o;
    return Objects.equals(this.header, pageContentInfo.header) &&
        Objects.equals(this.footer, pageContentInfo.footer) &&
        Objects.equals(this.mainTopic, pageContentInfo.mainTopic) &&
        Objects.equals(this.secondaryTopic, pageContentInfo.secondaryTopic);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(header, footer, mainTopic, secondaryTopic);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PageContentInfo {\n");
    sb.append("    header: ").append(toIndentedString(header)).append("\n");
    sb.append("    footer: ").append(toIndentedString(footer)).append("\n");
    sb.append("    mainTopic: ").append(toIndentedString(mainTopic)).append("\n");
    sb.append("    secondaryTopic: ").append(toIndentedString(secondaryTopic)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("header");
    openapiFields.add("footer");
    openapiFields.add("main_topic");
    openapiFields.add("secondary_topic");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to PageContentInfo
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!PageContentInfo.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in PageContentInfo is not found in the empty JSON string", PageContentInfo.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!PageContentInfo.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `PageContentInfo` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `header`
      if (jsonObj.get("header") != null && !jsonObj.get("header").isJsonNull()) {
        PageSectionContentInfo.validateJsonElement(jsonObj.get("header"));
      }
      // validate the optional field `footer`
      if (jsonObj.get("footer") != null && !jsonObj.get("footer").isJsonNull()) {
        PageSectionContentInfo.validateJsonElement(jsonObj.get("footer"));
      }
      if (jsonObj.get("main_topic") != null && !jsonObj.get("main_topic").isJsonNull()) {
        JsonArray jsonArraymainTopic = jsonObj.getAsJsonArray("main_topic");
        if (jsonArraymainTopic != null) {
          // ensure the json data is an array
          if (!jsonObj.get("main_topic").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `main_topic` to be an array in the JSON string but got `%s`", jsonObj.get("main_topic").toString()));
          }

          // validate the optional field `main_topic` (array)
          for (int i = 0; i < jsonArraymainTopic.size(); i++) {
            TopicInfo.validateJsonElement(jsonArraymainTopic.get(i));
          };
        }
      }
      if (jsonObj.get("secondary_topic") != null && !jsonObj.get("secondary_topic").isJsonNull()) {
        JsonArray jsonArraysecondaryTopic = jsonObj.getAsJsonArray("secondary_topic");
        if (jsonArraysecondaryTopic != null) {
          // ensure the json data is an array
          if (!jsonObj.get("secondary_topic").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `secondary_topic` to be an array in the JSON string but got `%s`", jsonObj.get("secondary_topic").toString()));
          }

          // validate the optional field `secondary_topic` (array)
          for (int i = 0; i < jsonArraysecondaryTopic.size(); i++) {
            TopicInfo.validateJsonElement(jsonArraysecondaryTopic.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!PageContentInfo.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'PageContentInfo' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<PageContentInfo> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(PageContentInfo.class));

       return (TypeAdapter<T>) new TypeAdapter<PageContentInfo>() {
           @Override
           public void write(JsonWriter out, PageContentInfo value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public PageContentInfo read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of PageContentInfo given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of PageContentInfo
  * @throws IOException if the JSON string is invalid with respect to PageContentInfo
  */
  public static PageContentInfo fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, PageContentInfo.class);
  }

 /**
  * Convert an instance of PageContentInfo to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

