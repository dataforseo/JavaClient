/*
 * DataForSEO API documentation
 * DataForSEO API is the starting point on your journey towards building powerful SEO software. With DataForSEO you can get all the data you need to build an efficient application while also saving your time and budget. DataForSEO API is using the REST technology for interchanging data between your application and our service. The data exchange is made through the widely used HTTP protocol, which allows applying our API to almost all programming languages.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.dataforseo.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.dataforseo.client.JSON;

/**
 * MerchantAmazonProductsTaskPostRequestInfo
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-04-01T20:18:33.613150200+03:00[Europe/Kiev]", comments = "Generator version: 7.4.0")
public class MerchantAmazonProductsTaskPostRequestInfo {
  public static final String SERIALIZED_NAME_KEYWORD = "keyword";
  @SerializedName(SERIALIZED_NAME_KEYWORD)
  private String keyword;

  public static final String SERIALIZED_NAME_URL = "url";
  @SerializedName(SERIALIZED_NAME_URL)
  private String url;

  public static final String SERIALIZED_NAME_PRIORITY = "priority";
  @SerializedName(SERIALIZED_NAME_PRIORITY)
  private Integer priority;

  public static final String SERIALIZED_NAME_LOCATION_NAME = "location_name";
  @SerializedName(SERIALIZED_NAME_LOCATION_NAME)
  private String locationName;

  public static final String SERIALIZED_NAME_LOCATION_CODE = "location_code";
  @SerializedName(SERIALIZED_NAME_LOCATION_CODE)
  private Integer locationCode;

  public static final String SERIALIZED_NAME_LOCATION_COORDINATE = "location_coordinate";
  @SerializedName(SERIALIZED_NAME_LOCATION_COORDINATE)
  private String locationCoordinate;

  public static final String SERIALIZED_NAME_LANGUAGE_NAME = "language_name";
  @SerializedName(SERIALIZED_NAME_LANGUAGE_NAME)
  private String languageName;

  public static final String SERIALIZED_NAME_LANGUAGE_CODE = "language_code";
  @SerializedName(SERIALIZED_NAME_LANGUAGE_CODE)
  private String languageCode;

  public static final String SERIALIZED_NAME_SE_DOMAIN = "se_domain";
  @SerializedName(SERIALIZED_NAME_SE_DOMAIN)
  private String seDomain;

  public static final String SERIALIZED_NAME_DEPTH = "depth";
  @SerializedName(SERIALIZED_NAME_DEPTH)
  private Integer depth;

  public static final String SERIALIZED_NAME_MAX_CRAWL_PAGES = "max_crawl_pages";
  @SerializedName(SERIALIZED_NAME_MAX_CRAWL_PAGES)
  private Integer maxCrawlPages;

  public static final String SERIALIZED_NAME_SEARCH_PARAM = "search_param";
  @SerializedName(SERIALIZED_NAME_SEARCH_PARAM)
  private String searchParam;

  public static final String SERIALIZED_NAME_PRICE_MIN = "price_min";
  @SerializedName(SERIALIZED_NAME_PRICE_MIN)
  private Integer priceMin;

  public static final String SERIALIZED_NAME_PRICE_MAX = "price_max";
  @SerializedName(SERIALIZED_NAME_PRICE_MAX)
  private Integer priceMax;

  public static final String SERIALIZED_NAME_SORT_BY = "sort_by";
  @SerializedName(SERIALIZED_NAME_SORT_BY)
  private String sortBy;

  public static final String SERIALIZED_NAME_TAG = "tag";
  @SerializedName(SERIALIZED_NAME_TAG)
  private String tag;

  public static final String SERIALIZED_NAME_POSTBACK_URL = "postback_url";
  @SerializedName(SERIALIZED_NAME_POSTBACK_URL)
  private String postbackUrl;

  public static final String SERIALIZED_NAME_POSTBACK_DATA = "postback_data";
  @SerializedName(SERIALIZED_NAME_POSTBACK_DATA)
  private String postbackData;

  public static final String SERIALIZED_NAME_PINGBACK_URL = "pingback_url";
  @SerializedName(SERIALIZED_NAME_PINGBACK_URL)
  private String pingbackUrl;

  public static final String SERIALIZED_NAME_DEPARTMENT = "department";
  @SerializedName(SERIALIZED_NAME_DEPARTMENT)
  private String department;

  public MerchantAmazonProductsTaskPostRequestInfo() {
  }

  public MerchantAmazonProductsTaskPostRequestInfo keyword(String keyword) {
    this.keyword = keyword;
    return this;
  }

   /**
   * keyword required field you can also specify UPC/EAN in this field and we will return the results Google Shopping provides for the specified barcode number; you can specify up to 700 symbols in the keyword filed all %## will be decoded (plus symbol ‘+’ will be decoded to a space character) if you need to use the “%” symbol for your keyword, please specify it as “%25”;
   * @return keyword
  **/
  @javax.annotation.Nullable
  public String getKeyword() {
    return keyword;
  }

  public void setKeyword(String keyword) {
    this.keyword = keyword;
  }


  public MerchantAmazonProductsTaskPostRequestInfo url(String url) {
    this.url = url;
    return this;
  }

   /**
   * direct URL of the search query optional field you can specify a direct URL and we will sort it out to the necessary fields. Note that this method is the most difficult for our API to process and also requires you to specify the exact language and location in the URL. In most cases, we wouldn’t recommend using this method. example: https://www.google.com/search?q&#x3D;iphone&amp;num&#x3D;100&amp;tbm&#x3D;shop&amp;ie&#x3D;UTF-8&amp;oe&#x3D;UTF-8&amp;tbs&#x3D;vw%3A1%2Cmr%3A1%2Cprice%3A1%2Cppr_min%3A5&amp;hl&#x3D;en&amp;gl&#x3D;US&amp;gws_rd&#x3D;cr&amp;uule&#x3D;w+CAIQIFISCQs2MuSEtepUEUK33kOSuTsc
   * @return url
  **/
  @javax.annotation.Nullable
  public String getUrl() {
    return url;
  }

  public void setUrl(String url) {
    this.url = url;
  }


  public MerchantAmazonProductsTaskPostRequestInfo priority(Integer priority) {
    this.priority = priority;
    return this;
  }

   /**
   * task priority optional field can take the following values: 1 – normal execution priority (set by default) 2 – high execution priority You will be additionally charged for the tasks with high execution priority. The cost can be calculated on the Pricing page.
   * @return priority
  **/
  @javax.annotation.Nullable
  public Integer getPriority() {
    return priority;
  }

  public void setPriority(Integer priority) {
    this.priority = priority;
  }


  public MerchantAmazonProductsTaskPostRequestInfo locationName(String locationName) {
    this.locationName = locationName;
    return this;
  }

   /**
   * full name of the location required field if you don’t specify location_code or location_coordinate if you use this field, you don’t need to specify location_code or location_coordinate you can receive the list of available Google Shopping locations with their location_name by making a separate request to the https://api.dataforseo.com/v3/merchant/google/locations example: London,England,United Kingdom
   * @return locationName
  **/
  @javax.annotation.Nullable
  public String getLocationName() {
    return locationName;
  }

  public void setLocationName(String locationName) {
    this.locationName = locationName;
  }


  public MerchantAmazonProductsTaskPostRequestInfo locationCode(Integer locationCode) {
    this.locationCode = locationCode;
    return this;
  }

   /**
   * location code required field if you don’t specify location_name or location_coordinate if you use this field, you don’t need to specify location_name or location_coordinate you can receive the list of available Google Shopping locations with their location_code by making a separate request to the https://api.dataforseo.com/v3/merchant/google/locations example: 2840
   * @return locationCode
  **/
  @javax.annotation.Nullable
  public Integer getLocationCode() {
    return locationCode;
  }

  public void setLocationCode(Integer locationCode) {
    this.locationCode = locationCode;
  }


  public MerchantAmazonProductsTaskPostRequestInfo locationCoordinate(String locationCoordinate) {
    this.locationCoordinate = locationCoordinate;
    return this;
  }

   /**
   * GPS coordinates of a location required field if you don’t specify location_name or location_code if you use this field, you don’t need to specify location_name or location_code location_coordinate parameter should be specified in the “latitude,longitude,radius” format the maximum number of decimal digits for “latitude” and “longitude”: 7 the minimum value for “radius”: 199.9 example: 53.476225,-2.243572,200
   * @return locationCoordinate
  **/
  @javax.annotation.Nullable
  public String getLocationCoordinate() {
    return locationCoordinate;
  }

  public void setLocationCoordinate(String locationCoordinate) {
    this.locationCoordinate = locationCoordinate;
  }


  public MerchantAmazonProductsTaskPostRequestInfo languageName(String languageName) {
    this.languageName = languageName;
    return this;
  }

   /**
   * full name of the language required field if you don’t specify language_code if you use this field, you don’t need to specify language_code you can receive the list of available Google Shopping languages with their language_name by making a separate request to the https://api.dataforseo.com/v3/merchant/google/languages example: English
   * @return languageName
  **/
  @javax.annotation.Nullable
  public String getLanguageName() {
    return languageName;
  }

  public void setLanguageName(String languageName) {
    this.languageName = languageName;
  }


  public MerchantAmazonProductsTaskPostRequestInfo languageCode(String languageCode) {
    this.languageCode = languageCode;
    return this;
  }

   /**
   * language code required field if you don’t specify language_name if you use this field, you don’t need to specify language_name you can receive the list of available Google Shopping languages with their language_code by making a separate request to the https://api.dataforseo.com/v3/merchant/google/languages example: en
   * @return languageCode
  **/
  @javax.annotation.Nullable
  public String getLanguageCode() {
    return languageCode;
  }

  public void setLanguageCode(String languageCode) {
    this.languageCode = languageCode;
  }


  public MerchantAmazonProductsTaskPostRequestInfo seDomain(String seDomain) {
    this.seDomain = seDomain;
    return this;
  }

   /**
   * search engine domain optional field we choose the relevant search engine domain automatically according to the location and language you specify however, you can set a custom search engine domain in this field example: google.co.uk, google.com.au, google.de, etc.
   * @return seDomain
  **/
  @javax.annotation.Nullable
  public String getSeDomain() {
    return seDomain;
  }

  public void setSeDomain(String seDomain) {
    this.seDomain = seDomain;
  }


  public MerchantAmazonProductsTaskPostRequestInfo depth(Integer depth) {
    this.depth = depth;
    return this;
  }

   /**
   * parsing depth optional field number of results to be retrieved from the Google Shopping results page default value: 100 max value: 700 Note: your account will be billed per each results page containing up to 100 results; thus, setting a depth above 100 may result in additional charges if the search engine returns more than 100 results; if the specified depth is higher than the number of results in the response, the difference will be refunded automatically to your account balance
   * @return depth
  **/
  @javax.annotation.Nullable
  public Integer getDepth() {
    return depth;
  }

  public void setDepth(Integer depth) {
    this.depth = depth;
  }


  public MerchantAmazonProductsTaskPostRequestInfo maxCrawlPages(Integer maxCrawlPages) {
    this.maxCrawlPages = maxCrawlPages;
    return this;
  }

   /**
   * page crawl limit optional field number of search results pages to crawl max value: 7 Note: the max_crawl_pages and depth parameters complement each other; learn more at our help center
   * @return maxCrawlPages
  **/
  @javax.annotation.Nullable
  public Integer getMaxCrawlPages() {
    return maxCrawlPages;
  }

  public void setMaxCrawlPages(Integer maxCrawlPages) {
    this.maxCrawlPages = maxCrawlPages;
  }


  public MerchantAmazonProductsTaskPostRequestInfo searchParam(String searchParam) {
    this.searchParam = searchParam;
    return this;
  }

   /**
   * additional parameters of the search query optional field you can use the following search URL parameters for customizing the search example: &amp;tbs&#x3D;ppr_min:45 – search for products that cost more than 45 USD; &amp;tbs&#x3D;ppr_max:50 – search for products that cost less than 50 USD; &amp;tbs&#x3D;p_ord:p – sort by ascending price; &amp;tbs&#x3D;p_ord:pd – sort by descending price; &amp;tbs&#x3D;p_ord:rv – sort by review score; &amp;tbs&#x3D;ppr_max:50,p_ord:rv – sort by review score with the maximum price of 50 USD
   * @return searchParam
  **/
  @javax.annotation.Nullable
  public String getSearchParam() {
    return searchParam;
  }

  public void setSearchParam(String searchParam) {
    this.searchParam = searchParam;
  }


  public MerchantAmazonProductsTaskPostRequestInfo priceMin(Integer priceMin) {
    this.priceMin = priceMin;
    return this;
  }

   /**
   * minimum product price optional field minimum price of the returned products listed on Google Shopping for the specified query example: 5
   * @return priceMin
  **/
  @javax.annotation.Nullable
  public Integer getPriceMin() {
    return priceMin;
  }

  public void setPriceMin(Integer priceMin) {
    this.priceMin = priceMin;
  }


  public MerchantAmazonProductsTaskPostRequestInfo priceMax(Integer priceMax) {
    this.priceMax = priceMax;
    return this;
  }

   /**
   * maximum product price optional field maximum price of the returned products listed on Google Shopping for the specified query example: 100
   * @return priceMax
  **/
  @javax.annotation.Nullable
  public Integer getPriceMax() {
    return priceMax;
  }

  public void setPriceMax(Integer priceMax) {
    this.priceMax = priceMax;
  }


  public MerchantAmazonProductsTaskPostRequestInfo sortBy(String sortBy) {
    this.sortBy = sortBy;
    return this;
  }

   /**
   * results sorting rules optional field the following sorting rules are supported: review_score, price_low_to_high, price_high_to_low example: sort_by:\&quot;review_score\&quot;
   * @return sortBy
  **/
  @javax.annotation.Nullable
  public String getSortBy() {
    return sortBy;
  }

  public void setSortBy(String sortBy) {
    this.sortBy = sortBy;
  }


  public MerchantAmazonProductsTaskPostRequestInfo tag(String tag) {
    this.tag = tag;
    return this;
  }

   /**
   * user-defined task identifier optional field the character limit is 255 you can use this parameter to identify the task and match it with the result you will find the specified tag value in the data object of the response
   * @return tag
  **/
  @javax.annotation.Nullable
  public String getTag() {
    return tag;
  }

  public void setTag(String tag) {
    this.tag = tag;
  }


  public MerchantAmazonProductsTaskPostRequestInfo postbackUrl(String postbackUrl) {
    this.postbackUrl = postbackUrl;
    return this;
  }

   /**
   * return URL for sending task results optional field once the task is completed, we will send a POST request with its results compressed in the gzip format to the postback_url you specified you can use the ‘$id’ string as a $id variable and ‘$tag’ as urlencoded $tag variable. We will set the necessary values before sending the request. example: http://your-server.com/postbackscript?id&#x3D;$id http://your-server.com/postbackscript?id&#x3D;$id&amp;tag&#x3D;$tag Note: special symbols in postback_url will be urlencoded; i.a., the # symbol will be encoded into %23
   * @return postbackUrl
  **/
  @javax.annotation.Nullable
  public String getPostbackUrl() {
    return postbackUrl;
  }

  public void setPostbackUrl(String postbackUrl) {
    this.postbackUrl = postbackUrl;
  }


  public MerchantAmazonProductsTaskPostRequestInfo postbackData(String postbackData) {
    this.postbackData = postbackData;
    return this;
  }

   /**
   * postback_url datatype required field if you specify postback_url corresponds to the datatype that will be sent to your server possible values: advanced, html
   * @return postbackData
  **/
  @javax.annotation.Nullable
  public String getPostbackData() {
    return postbackData;
  }

  public void setPostbackData(String postbackData) {
    this.postbackData = postbackData;
  }


  public MerchantAmazonProductsTaskPostRequestInfo pingbackUrl(String pingbackUrl) {
    this.pingbackUrl = pingbackUrl;
    return this;
  }

   /**
   * notification URL of a completed task optional field when a task is completed we will notify you by GET request sent to the URL you have specified you can use the ‘$id’ string as a $id variable and ‘$tag’ as urlencoded $tag variable. We will set the necessary values before sending the request. example: http://your-server.com/pingscript?id&#x3D;$id http://your-server.com/pingscript?id&#x3D;$id&amp;tag&#x3D;$tag Note: special symbols in pingback_url will be urlencoded; i.a., the # symbol will be encoded into %23
   * @return pingbackUrl
  **/
  @javax.annotation.Nullable
  public String getPingbackUrl() {
    return pingbackUrl;
  }

  public void setPingbackUrl(String pingbackUrl) {
    this.pingbackUrl = pingbackUrl;
  }


  public MerchantAmazonProductsTaskPostRequestInfo department(String department) {
    this.department = department;
    return this;
  }

   /**
   * amazon product department optional field specify one of the following amazon departments for extracting product listings: \&quot;Arts &amp; Crafts\&quot;, \&quot;Automotive\&quot;, \&quot;Baby\&quot;, \&quot;Beauty &amp; Personal Care\&quot;, \&quot;Books\&quot;, \&quot;Computers\&quot;, \&quot;Digital Music\&quot;, \&quot;Electronics\&quot;, \&quot;Kindle Store\&quot;, \&quot;Prime Video\&quot;, \&quot;Women&#39;s Fashion\&quot;, \&quot;Men&#39;s Fashion\&quot;, \&quot;Girls&#39; Fashion\&quot;, \&quot;Boys&#39; Fashion\&quot;, \&quot;Deals\&quot;, \&quot;Health &amp; Household\&quot;, \&quot;Home &amp; Kitchen\&quot;, \&quot;Industrial &amp; Scientific\&quot;, \&quot;Luggage\&quot;, \&quot;Movies &amp; TV\&quot;, \&quot;Music, CDs &amp; Vinyl\&quot;, \&quot;Pet Supplies\&quot;, \&quot;Software\&quot;, \&quot;Sports &amp; Outdoors\&quot;, \&quot;Tools &amp; Home Improvement\&quot;, \&quot;Toys &amp; Games\&quot;, \&quot;Video Games\&quot;
   * @return department
  **/
  @javax.annotation.Nullable
  public String getDepartment() {
    return department;
  }

  public void setDepartment(String department) {
    this.department = department;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MerchantAmazonProductsTaskPostRequestInfo merchantAmazonProductsTaskPostRequestInfo = (MerchantAmazonProductsTaskPostRequestInfo) o;
    return Objects.equals(this.keyword, merchantAmazonProductsTaskPostRequestInfo.keyword) &&
        Objects.equals(this.url, merchantAmazonProductsTaskPostRequestInfo.url) &&
        Objects.equals(this.priority, merchantAmazonProductsTaskPostRequestInfo.priority) &&
        Objects.equals(this.locationName, merchantAmazonProductsTaskPostRequestInfo.locationName) &&
        Objects.equals(this.locationCode, merchantAmazonProductsTaskPostRequestInfo.locationCode) &&
        Objects.equals(this.locationCoordinate, merchantAmazonProductsTaskPostRequestInfo.locationCoordinate) &&
        Objects.equals(this.languageName, merchantAmazonProductsTaskPostRequestInfo.languageName) &&
        Objects.equals(this.languageCode, merchantAmazonProductsTaskPostRequestInfo.languageCode) &&
        Objects.equals(this.seDomain, merchantAmazonProductsTaskPostRequestInfo.seDomain) &&
        Objects.equals(this.depth, merchantAmazonProductsTaskPostRequestInfo.depth) &&
        Objects.equals(this.maxCrawlPages, merchantAmazonProductsTaskPostRequestInfo.maxCrawlPages) &&
        Objects.equals(this.searchParam, merchantAmazonProductsTaskPostRequestInfo.searchParam) &&
        Objects.equals(this.priceMin, merchantAmazonProductsTaskPostRequestInfo.priceMin) &&
        Objects.equals(this.priceMax, merchantAmazonProductsTaskPostRequestInfo.priceMax) &&
        Objects.equals(this.sortBy, merchantAmazonProductsTaskPostRequestInfo.sortBy) &&
        Objects.equals(this.tag, merchantAmazonProductsTaskPostRequestInfo.tag) &&
        Objects.equals(this.postbackUrl, merchantAmazonProductsTaskPostRequestInfo.postbackUrl) &&
        Objects.equals(this.postbackData, merchantAmazonProductsTaskPostRequestInfo.postbackData) &&
        Objects.equals(this.pingbackUrl, merchantAmazonProductsTaskPostRequestInfo.pingbackUrl) &&
        Objects.equals(this.department, merchantAmazonProductsTaskPostRequestInfo.department);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(keyword, url, priority, locationName, locationCode, locationCoordinate, languageName, languageCode, seDomain, depth, maxCrawlPages, searchParam, priceMin, priceMax, sortBy, tag, postbackUrl, postbackData, pingbackUrl, department);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MerchantAmazonProductsTaskPostRequestInfo {\n");
    sb.append("    keyword: ").append(toIndentedString(keyword)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    priority: ").append(toIndentedString(priority)).append("\n");
    sb.append("    locationName: ").append(toIndentedString(locationName)).append("\n");
    sb.append("    locationCode: ").append(toIndentedString(locationCode)).append("\n");
    sb.append("    locationCoordinate: ").append(toIndentedString(locationCoordinate)).append("\n");
    sb.append("    languageName: ").append(toIndentedString(languageName)).append("\n");
    sb.append("    languageCode: ").append(toIndentedString(languageCode)).append("\n");
    sb.append("    seDomain: ").append(toIndentedString(seDomain)).append("\n");
    sb.append("    depth: ").append(toIndentedString(depth)).append("\n");
    sb.append("    maxCrawlPages: ").append(toIndentedString(maxCrawlPages)).append("\n");
    sb.append("    searchParam: ").append(toIndentedString(searchParam)).append("\n");
    sb.append("    priceMin: ").append(toIndentedString(priceMin)).append("\n");
    sb.append("    priceMax: ").append(toIndentedString(priceMax)).append("\n");
    sb.append("    sortBy: ").append(toIndentedString(sortBy)).append("\n");
    sb.append("    tag: ").append(toIndentedString(tag)).append("\n");
    sb.append("    postbackUrl: ").append(toIndentedString(postbackUrl)).append("\n");
    sb.append("    postbackData: ").append(toIndentedString(postbackData)).append("\n");
    sb.append("    pingbackUrl: ").append(toIndentedString(pingbackUrl)).append("\n");
    sb.append("    department: ").append(toIndentedString(department)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("keyword");
    openapiFields.add("url");
    openapiFields.add("priority");
    openapiFields.add("location_name");
    openapiFields.add("location_code");
    openapiFields.add("location_coordinate");
    openapiFields.add("language_name");
    openapiFields.add("language_code");
    openapiFields.add("se_domain");
    openapiFields.add("depth");
    openapiFields.add("max_crawl_pages");
    openapiFields.add("search_param");
    openapiFields.add("price_min");
    openapiFields.add("price_max");
    openapiFields.add("sort_by");
    openapiFields.add("tag");
    openapiFields.add("postback_url");
    openapiFields.add("postback_data");
    openapiFields.add("pingback_url");
    openapiFields.add("department");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to MerchantAmazonProductsTaskPostRequestInfo
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!MerchantAmazonProductsTaskPostRequestInfo.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in MerchantAmazonProductsTaskPostRequestInfo is not found in the empty JSON string", MerchantAmazonProductsTaskPostRequestInfo.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!MerchantAmazonProductsTaskPostRequestInfo.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `MerchantAmazonProductsTaskPostRequestInfo` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("keyword") != null && !jsonObj.get("keyword").isJsonNull()) && !jsonObj.get("keyword").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `keyword` to be a primitive type in the JSON string but got `%s`", jsonObj.get("keyword").toString()));
      }
      if ((jsonObj.get("url") != null && !jsonObj.get("url").isJsonNull()) && !jsonObj.get("url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("url").toString()));
      }
      if ((jsonObj.get("location_name") != null && !jsonObj.get("location_name").isJsonNull()) && !jsonObj.get("location_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `location_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("location_name").toString()));
      }
      if ((jsonObj.get("location_coordinate") != null && !jsonObj.get("location_coordinate").isJsonNull()) && !jsonObj.get("location_coordinate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `location_coordinate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("location_coordinate").toString()));
      }
      if ((jsonObj.get("language_name") != null && !jsonObj.get("language_name").isJsonNull()) && !jsonObj.get("language_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `language_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("language_name").toString()));
      }
      if ((jsonObj.get("language_code") != null && !jsonObj.get("language_code").isJsonNull()) && !jsonObj.get("language_code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `language_code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("language_code").toString()));
      }
      if ((jsonObj.get("se_domain") != null && !jsonObj.get("se_domain").isJsonNull()) && !jsonObj.get("se_domain").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `se_domain` to be a primitive type in the JSON string but got `%s`", jsonObj.get("se_domain").toString()));
      }
      if ((jsonObj.get("search_param") != null && !jsonObj.get("search_param").isJsonNull()) && !jsonObj.get("search_param").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `search_param` to be a primitive type in the JSON string but got `%s`", jsonObj.get("search_param").toString()));
      }
      if ((jsonObj.get("sort_by") != null && !jsonObj.get("sort_by").isJsonNull()) && !jsonObj.get("sort_by").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sort_by` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sort_by").toString()));
      }
      if ((jsonObj.get("tag") != null && !jsonObj.get("tag").isJsonNull()) && !jsonObj.get("tag").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `tag` to be a primitive type in the JSON string but got `%s`", jsonObj.get("tag").toString()));
      }
      if ((jsonObj.get("postback_url") != null && !jsonObj.get("postback_url").isJsonNull()) && !jsonObj.get("postback_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `postback_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("postback_url").toString()));
      }
      if ((jsonObj.get("postback_data") != null && !jsonObj.get("postback_data").isJsonNull()) && !jsonObj.get("postback_data").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `postback_data` to be a primitive type in the JSON string but got `%s`", jsonObj.get("postback_data").toString()));
      }
      if ((jsonObj.get("pingback_url") != null && !jsonObj.get("pingback_url").isJsonNull()) && !jsonObj.get("pingback_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pingback_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pingback_url").toString()));
      }
      if ((jsonObj.get("department") != null && !jsonObj.get("department").isJsonNull()) && !jsonObj.get("department").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `department` to be a primitive type in the JSON string but got `%s`", jsonObj.get("department").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!MerchantAmazonProductsTaskPostRequestInfo.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'MerchantAmazonProductsTaskPostRequestInfo' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<MerchantAmazonProductsTaskPostRequestInfo> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(MerchantAmazonProductsTaskPostRequestInfo.class));

       return (TypeAdapter<T>) new TypeAdapter<MerchantAmazonProductsTaskPostRequestInfo>() {
           @Override
           public void write(JsonWriter out, MerchantAmazonProductsTaskPostRequestInfo value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public MerchantAmazonProductsTaskPostRequestInfo read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of MerchantAmazonProductsTaskPostRequestInfo given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of MerchantAmazonProductsTaskPostRequestInfo
  * @throws IOException if the JSON string is invalid with respect to MerchantAmazonProductsTaskPostRequestInfo
  */
  public static MerchantAmazonProductsTaskPostRequestInfo fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, MerchantAmazonProductsTaskPostRequestInfo.class);
  }

 /**
  * Convert an instance of MerchantAmazonProductsTaskPostRequestInfo to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

