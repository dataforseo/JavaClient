/*
 * DataForSEO API documentation
 * DataForSEO API is the starting point on your journey towards building powerful SEO software. With DataForSEO you can get all the data you need to build an efficient application while also saving your time and budget. DataForSEO API is using the REST technology for interchanging data between your application and our service. The data exchange is made through the widely used HTTP protocol, which allows applying our API to almost all programming languages.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.dataforseo.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.dataforseo.client.JSON;

/**
 * KeywordsDataGoogleAdsAdTrafficByKeywordsLiveResultInfo
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-06-02T20:51:42.343286900+03:00[Europe/Kiev]")
public class KeywordsDataGoogleAdsAdTrafficByKeywordsLiveResultInfo {
  public static final String SERIALIZED_NAME_KEYWORD = "keyword";
  @SerializedName(SERIALIZED_NAME_KEYWORD)
  private String keyword;

  public static final String SERIALIZED_NAME_LOCATION_CODE = "location_code";
  @SerializedName(SERIALIZED_NAME_LOCATION_CODE)
  private Integer locationCode;

  public static final String SERIALIZED_NAME_LANGUAGE_CODE = "language_code";
  @SerializedName(SERIALIZED_NAME_LANGUAGE_CODE)
  private String languageCode;

  public static final String SERIALIZED_NAME_DATE_INTERVAL = "date_interval";
  @SerializedName(SERIALIZED_NAME_DATE_INTERVAL)
  private String dateInterval;

  public static final String SERIALIZED_NAME_SEARCH_PARTNERS = "search_partners";
  @SerializedName(SERIALIZED_NAME_SEARCH_PARTNERS)
  private Boolean searchPartners;

  public static final String SERIALIZED_NAME_BID = "bid";
  @SerializedName(SERIALIZED_NAME_BID)
  private Long bid;

  public static final String SERIALIZED_NAME_MATCH = "match";
  @SerializedName(SERIALIZED_NAME_MATCH)
  private String match;

  public static final String SERIALIZED_NAME_IMPRESSIONS = "impressions";
  @SerializedName(SERIALIZED_NAME_IMPRESSIONS)
  private Float impressions;

  public static final String SERIALIZED_NAME_CTR = "ctr";
  @SerializedName(SERIALIZED_NAME_CTR)
  private Double ctr;

  public static final String SERIALIZED_NAME_AVERAGE_CPC = "average_cpc";
  @SerializedName(SERIALIZED_NAME_AVERAGE_CPC)
  private Double averageCpc;

  public static final String SERIALIZED_NAME_COST = "cost";
  @SerializedName(SERIALIZED_NAME_COST)
  private Float cost;

  public static final String SERIALIZED_NAME_CLICKS = "clicks";
  @SerializedName(SERIALIZED_NAME_CLICKS)
  private Float clicks;

  public KeywordsDataGoogleAdsAdTrafficByKeywordsLiveResultInfo() {
  }

  public KeywordsDataGoogleAdsAdTrafficByKeywordsLiveResultInfo keyword(String keyword) {
    this.keyword = keyword;
    return this;
  }

   /**
   * keyword in a POST array
   * @return keyword
  **/
  @javax.annotation.Nullable
  public String getKeyword() {
    return keyword;
  }

  public void setKeyword(String keyword) {
    this.keyword = keyword;
  }


  public KeywordsDataGoogleAdsAdTrafficByKeywordsLiveResultInfo locationCode(Integer locationCode) {
    this.locationCode = locationCode;
    return this;
  }

   /**
   * location code in a POST array if there is no data, then the value is null
   * @return locationCode
  **/
  @javax.annotation.Nullable
  public Integer getLocationCode() {
    return locationCode;
  }

  public void setLocationCode(Integer locationCode) {
    this.locationCode = locationCode;
  }


  public KeywordsDataGoogleAdsAdTrafficByKeywordsLiveResultInfo languageCode(String languageCode) {
    this.languageCode = languageCode;
    return this;
  }

   /**
   * language code in a POST array if there is no data, then the value is null
   * @return languageCode
  **/
  @javax.annotation.Nullable
  public String getLanguageCode() {
    return languageCode;
  }

  public void setLanguageCode(String languageCode) {
    this.languageCode = languageCode;
  }


  public KeywordsDataGoogleAdsAdTrafficByKeywordsLiveResultInfo dateInterval(String dateInterval) {
    this.dateInterval = dateInterval;
    return this;
  }

   /**
   * forecasting date interval in a POST array
   * @return dateInterval
  **/
  @javax.annotation.Nullable
  public String getDateInterval() {
    return dateInterval;
  }

  public void setDateInterval(String dateInterval) {
    this.dateInterval = dateInterval;
  }


  public KeywordsDataGoogleAdsAdTrafficByKeywordsLiveResultInfo searchPartners(Boolean searchPartners) {
    this.searchPartners = searchPartners;
    return this;
  }

   /**
   * include Google search partners the value you specified when setting the task if true, the results are returned for owned, operated, and syndicated networks across Google and partner sites that host Google search; if false, the results are returned for Google search sites only
   * @return searchPartners
  **/
  @javax.annotation.Nullable
  public Boolean getSearchPartners() {
    return searchPartners;
  }

  public void setSearchPartners(Boolean searchPartners) {
    this.searchPartners = searchPartners;
  }


  public KeywordsDataGoogleAdsAdTrafficByKeywordsLiveResultInfo bid(Long bid) {
    this.bid = bid;
    return this;
  }

   /**
   * the maximum custom bid the bid you have specified when setting the task represents the price you are willing to pay for an ad the higher value you have specified, the higher metrics and cost you receive in response learn more in this help center article
   * @return bid
  **/
  @javax.annotation.Nullable
  public Long getBid() {
    return bid;
  }

  public void setBid(Long bid) {
    this.bid = bid;
  }


  public KeywordsDataGoogleAdsAdTrafficByKeywordsLiveResultInfo match(String match) {
    this.match = match;
    return this;
  }

   /**
   * keywords match-type can take the following values: exact, broad, phrase
   * @return match
  **/
  @javax.annotation.Nullable
  public String getMatch() {
    return match;
  }

  public void setMatch(String match) {
    this.match = match;
  }


  public KeywordsDataGoogleAdsAdTrafficByKeywordsLiveResultInfo impressions(Float impressions) {
    this.impressions = impressions;
    return this;
  }

   /**
   * projected number of ad impressions number of impressions an ad is projected to get within the specified time period if there is no data, then the value is null learn more about impressions in this help center article
   * @return impressions
  **/
  @javax.annotation.Nullable
  public Float getImpressions() {
    return impressions;
  }

  public void setImpressions(Float impressions) {
    this.impressions = impressions;
  }


  public KeywordsDataGoogleAdsAdTrafficByKeywordsLiveResultInfo ctr(Double ctr) {
    this.ctr = ctr;
    return this;
  }

   /**
   * projected click through rate (CTR) of the advertisement number of clicks an ad is projected to receive divided by the number of ad impressions; the CTR is projected for the specified time period if there is no data, then the value is null
   * @return ctr
  **/
  @javax.annotation.Nullable
  public Double getCtr() {
    return ctr;
  }

  public void setCtr(Double ctr) {
    this.ctr = ctr;
  }


  public KeywordsDataGoogleAdsAdTrafficByKeywordsLiveResultInfo averageCpc(Double averageCpc) {
    this.averageCpc = averageCpc;
    return this;
  }

   /**
   * the average cost-per-click value represents the cost-per-click (USD) estimated for a keyword based on the specified time period and historical data; if there is no data, then the value is null
   * @return averageCpc
  **/
  @javax.annotation.Nullable
  public Double getAverageCpc() {
    return averageCpc;
  }

  public void setAverageCpc(Double averageCpc) {
    this.averageCpc = averageCpc;
  }


  public KeywordsDataGoogleAdsAdTrafficByKeywordsLiveResultInfo cost(Float cost) {
    this.cost = cost;
    return this;
  }

   /**
   * charge for an ad amount that will be charged for running an ad within the specified time period if there is no data, then the value is null
   * @return cost
  **/
  @javax.annotation.Nullable
  public Float getCost() {
    return cost;
  }

  public void setCost(Float cost) {
    this.cost = cost;
  }


  public KeywordsDataGoogleAdsAdTrafficByKeywordsLiveResultInfo clicks(Float clicks) {
    this.clicks = clicks;
    return this;
  }

   /**
   * number of clicks on an ad number of clicks an ad is projected to get within the specified time period if there is no data, then the value is null
   * @return clicks
  **/
  @javax.annotation.Nullable
  public Float getClicks() {
    return clicks;
  }

  public void setClicks(Float clicks) {
    this.clicks = clicks;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    KeywordsDataGoogleAdsAdTrafficByKeywordsLiveResultInfo keywordsDataGoogleAdsAdTrafficByKeywordsLiveResultInfo = (KeywordsDataGoogleAdsAdTrafficByKeywordsLiveResultInfo) o;
    return Objects.equals(this.keyword, keywordsDataGoogleAdsAdTrafficByKeywordsLiveResultInfo.keyword) &&
        Objects.equals(this.locationCode, keywordsDataGoogleAdsAdTrafficByKeywordsLiveResultInfo.locationCode) &&
        Objects.equals(this.languageCode, keywordsDataGoogleAdsAdTrafficByKeywordsLiveResultInfo.languageCode) &&
        Objects.equals(this.dateInterval, keywordsDataGoogleAdsAdTrafficByKeywordsLiveResultInfo.dateInterval) &&
        Objects.equals(this.searchPartners, keywordsDataGoogleAdsAdTrafficByKeywordsLiveResultInfo.searchPartners) &&
        Objects.equals(this.bid, keywordsDataGoogleAdsAdTrafficByKeywordsLiveResultInfo.bid) &&
        Objects.equals(this.match, keywordsDataGoogleAdsAdTrafficByKeywordsLiveResultInfo.match) &&
        Objects.equals(this.impressions, keywordsDataGoogleAdsAdTrafficByKeywordsLiveResultInfo.impressions) &&
        Objects.equals(this.ctr, keywordsDataGoogleAdsAdTrafficByKeywordsLiveResultInfo.ctr) &&
        Objects.equals(this.averageCpc, keywordsDataGoogleAdsAdTrafficByKeywordsLiveResultInfo.averageCpc) &&
        Objects.equals(this.cost, keywordsDataGoogleAdsAdTrafficByKeywordsLiveResultInfo.cost) &&
        Objects.equals(this.clicks, keywordsDataGoogleAdsAdTrafficByKeywordsLiveResultInfo.clicks);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(keyword, locationCode, languageCode, dateInterval, searchPartners, bid, match, impressions, ctr, averageCpc, cost, clicks);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class KeywordsDataGoogleAdsAdTrafficByKeywordsLiveResultInfo {\n");
    sb.append("    keyword: ").append(toIndentedString(keyword)).append("\n");
    sb.append("    locationCode: ").append(toIndentedString(locationCode)).append("\n");
    sb.append("    languageCode: ").append(toIndentedString(languageCode)).append("\n");
    sb.append("    dateInterval: ").append(toIndentedString(dateInterval)).append("\n");
    sb.append("    searchPartners: ").append(toIndentedString(searchPartners)).append("\n");
    sb.append("    bid: ").append(toIndentedString(bid)).append("\n");
    sb.append("    match: ").append(toIndentedString(match)).append("\n");
    sb.append("    impressions: ").append(toIndentedString(impressions)).append("\n");
    sb.append("    ctr: ").append(toIndentedString(ctr)).append("\n");
    sb.append("    averageCpc: ").append(toIndentedString(averageCpc)).append("\n");
    sb.append("    cost: ").append(toIndentedString(cost)).append("\n");
    sb.append("    clicks: ").append(toIndentedString(clicks)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("keyword");
    openapiFields.add("location_code");
    openapiFields.add("language_code");
    openapiFields.add("date_interval");
    openapiFields.add("search_partners");
    openapiFields.add("bid");
    openapiFields.add("match");
    openapiFields.add("impressions");
    openapiFields.add("ctr");
    openapiFields.add("average_cpc");
    openapiFields.add("cost");
    openapiFields.add("clicks");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to KeywordsDataGoogleAdsAdTrafficByKeywordsLiveResultInfo
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!KeywordsDataGoogleAdsAdTrafficByKeywordsLiveResultInfo.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in KeywordsDataGoogleAdsAdTrafficByKeywordsLiveResultInfo is not found in the empty JSON string", KeywordsDataGoogleAdsAdTrafficByKeywordsLiveResultInfo.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!KeywordsDataGoogleAdsAdTrafficByKeywordsLiveResultInfo.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `KeywordsDataGoogleAdsAdTrafficByKeywordsLiveResultInfo` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("keyword") != null && !jsonObj.get("keyword").isJsonNull()) && !jsonObj.get("keyword").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `keyword` to be a primitive type in the JSON string but got `%s`", jsonObj.get("keyword").toString()));
      }
      if ((jsonObj.get("language_code") != null && !jsonObj.get("language_code").isJsonNull()) && !jsonObj.get("language_code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `language_code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("language_code").toString()));
      }
      if ((jsonObj.get("date_interval") != null && !jsonObj.get("date_interval").isJsonNull()) && !jsonObj.get("date_interval").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `date_interval` to be a primitive type in the JSON string but got `%s`", jsonObj.get("date_interval").toString()));
      }
      if ((jsonObj.get("match") != null && !jsonObj.get("match").isJsonNull()) && !jsonObj.get("match").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `match` to be a primitive type in the JSON string but got `%s`", jsonObj.get("match").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!KeywordsDataGoogleAdsAdTrafficByKeywordsLiveResultInfo.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'KeywordsDataGoogleAdsAdTrafficByKeywordsLiveResultInfo' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<KeywordsDataGoogleAdsAdTrafficByKeywordsLiveResultInfo> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(KeywordsDataGoogleAdsAdTrafficByKeywordsLiveResultInfo.class));

       return (TypeAdapter<T>) new TypeAdapter<KeywordsDataGoogleAdsAdTrafficByKeywordsLiveResultInfo>() {
           @Override
           public void write(JsonWriter out, KeywordsDataGoogleAdsAdTrafficByKeywordsLiveResultInfo value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public KeywordsDataGoogleAdsAdTrafficByKeywordsLiveResultInfo read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of KeywordsDataGoogleAdsAdTrafficByKeywordsLiveResultInfo given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of KeywordsDataGoogleAdsAdTrafficByKeywordsLiveResultInfo
  * @throws IOException if the JSON string is invalid with respect to KeywordsDataGoogleAdsAdTrafficByKeywordsLiveResultInfo
  */
  public static KeywordsDataGoogleAdsAdTrafficByKeywordsLiveResultInfo fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, KeywordsDataGoogleAdsAdTrafficByKeywordsLiveResultInfo.class);
  }

 /**
  * Convert an instance of KeywordsDataGoogleAdsAdTrafficByKeywordsLiveResultInfo to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

