/*
 * DataForSEO API documentation
 * DataForSEO API is the starting point on your journey towards building powerful SEO software. With DataForSEO you can get all the data you need to build an efficient application while also saving your time and budget. DataForSEO API is using the REST technology for interchanging data between your application and our service. The data exchange is made through the widely used HTTP protocol, which allows applying our API to almost all programming languages.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.dataforseo.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.dataforseo.client.JSON;

/**
 * BusinessListingAggregationInfo
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-06-21T10:44:48.237213300+03:00[Europe/Kiev]")
public class BusinessListingAggregationInfo {
  public static final String SERIALIZED_NAME_TOP_CATEGORIES = "top_categories";
  @SerializedName(SERIALIZED_NAME_TOP_CATEGORIES)
  private Map<String, Long> topCategories;

  public static final String SERIALIZED_NAME_TOP_COUNTRIES = "top_countries";
  @SerializedName(SERIALIZED_NAME_TOP_COUNTRIES)
  private Map<String, Long> topCountries;

  public static final String SERIALIZED_NAME_WEBSITES_COUNT = "websites_count";
  @SerializedName(SERIALIZED_NAME_WEBSITES_COUNT)
  private Long websitesCount;

  public static final String SERIALIZED_NAME_COUNT = "count";
  @SerializedName(SERIALIZED_NAME_COUNT)
  private Long count;

  public static final String SERIALIZED_NAME_TOP_ATTRIBUTES = "top_attributes";
  @SerializedName(SERIALIZED_NAME_TOP_ATTRIBUTES)
  private Map<String, Long> topAttributes;

  public static final String SERIALIZED_NAME_TOP_PLACE_TOPICS = "top_place_topics";
  @SerializedName(SERIALIZED_NAME_TOP_PLACE_TOPICS)
  private Map<String, Long> topPlaceTopics;

  public BusinessListingAggregationInfo() {
  }

  public BusinessListingAggregationInfo topCategories(Map<String, Long> topCategories) {
    this.topCategories = topCategories;
    return this;
  }

  public BusinessListingAggregationInfo putTopCategoriesItem(String key, Long topCategoriesItem) {
    if (this.topCategories == null) {
      this.topCategories = new HashMap<>();
    }
    this.topCategories.put(key, topCategoriesItem);
    return this;
  }

   /**
   * the most mentioned related categories top categories displayed with the number of businesses in each category
   * @return topCategories
  **/
  @javax.annotation.Nullable
  public Map<String, Long> getTopCategories() {
    return topCategories;
  }

  public void setTopCategories(Map<String, Long> topCategories) {
    this.topCategories = topCategories;
  }


  public BusinessListingAggregationInfo topCountries(Map<String, Long> topCountries) {
    this.topCountries = topCountries;
    return this;
  }

  public BusinessListingAggregationInfo putTopCountriesItem(String key, Long topCountriesItem) {
    if (this.topCountries == null) {
      this.topCountries = new HashMap<>();
    }
    this.topCountries.put(key, topCountriesItem);
    return this;
  }

   /**
   * the most mentioned counties country codes with the biggest number of businesses in the category
   * @return topCountries
  **/
  @javax.annotation.Nullable
  public Map<String, Long> getTopCountries() {
    return topCountries;
  }

  public void setTopCountries(Map<String, Long> topCountries) {
    this.topCountries = topCountries;
  }


  public BusinessListingAggregationInfo websitesCount(Long websitesCount) {
    this.websitesCount = websitesCount;
    return this;
  }

   /**
   * number of unique websites
   * @return websitesCount
  **/
  @javax.annotation.Nullable
  public Long getWebsitesCount() {
    return websitesCount;
  }

  public void setWebsitesCount(Long websitesCount) {
    this.websitesCount = websitesCount;
  }


  public BusinessListingAggregationInfo count(Long count) {
    this.count = count;
    return this;
  }

   /**
   * number of unique entities
   * @return count
  **/
  @javax.annotation.Nullable
  public Long getCount() {
    return count;
  }

  public void setCount(Long count) {
    this.count = count;
  }


  public BusinessListingAggregationInfo topAttributes(Map<String, Long> topAttributes) {
    this.topAttributes = topAttributes;
    return this;
  }

  public BusinessListingAggregationInfo putTopAttributesItem(String key, Long topAttributesItem) {
    if (this.topAttributes == null) {
      this.topAttributes = new HashMap<>();
    }
    this.topAttributes.put(key, topAttributesItem);
    return this;
  }

   /**
   * the most mentioned service details service details of a business entity displayed in a form of checks and the number of entities mentioning each attribute
   * @return topAttributes
  **/
  @javax.annotation.Nullable
  public Map<String, Long> getTopAttributes() {
    return topAttributes;
  }

  public void setTopAttributes(Map<String, Long> topAttributes) {
    this.topAttributes = topAttributes;
  }


  public BusinessListingAggregationInfo topPlaceTopics(Map<String, Long> topPlaceTopics) {
    this.topPlaceTopics = topPlaceTopics;
    return this;
  }

  public BusinessListingAggregationInfo putTopPlaceTopicsItem(String key, Long topPlaceTopicsItem) {
    if (this.topPlaceTopics == null) {
      this.topPlaceTopics = new HashMap<>();
    }
    this.topPlaceTopics.put(key, topPlaceTopicsItem);
    return this;
  }

   /**
   * top keywords mentioned in customer reviews contains most popular keywords related to products/services mentioned in customer reviews of a business entity and the number of reviews mentioning each keyword
   * @return topPlaceTopics
  **/
  @javax.annotation.Nullable
  public Map<String, Long> getTopPlaceTopics() {
    return topPlaceTopics;
  }

  public void setTopPlaceTopics(Map<String, Long> topPlaceTopics) {
    this.topPlaceTopics = topPlaceTopics;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BusinessListingAggregationInfo businessListingAggregationInfo = (BusinessListingAggregationInfo) o;
    return Objects.equals(this.topCategories, businessListingAggregationInfo.topCategories) &&
        Objects.equals(this.topCountries, businessListingAggregationInfo.topCountries) &&
        Objects.equals(this.websitesCount, businessListingAggregationInfo.websitesCount) &&
        Objects.equals(this.count, businessListingAggregationInfo.count) &&
        Objects.equals(this.topAttributes, businessListingAggregationInfo.topAttributes) &&
        Objects.equals(this.topPlaceTopics, businessListingAggregationInfo.topPlaceTopics);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(topCategories, topCountries, websitesCount, count, topAttributes, topPlaceTopics);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BusinessListingAggregationInfo {\n");
    sb.append("    topCategories: ").append(toIndentedString(topCategories)).append("\n");
    sb.append("    topCountries: ").append(toIndentedString(topCountries)).append("\n");
    sb.append("    websitesCount: ").append(toIndentedString(websitesCount)).append("\n");
    sb.append("    count: ").append(toIndentedString(count)).append("\n");
    sb.append("    topAttributes: ").append(toIndentedString(topAttributes)).append("\n");
    sb.append("    topPlaceTopics: ").append(toIndentedString(topPlaceTopics)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("top_categories");
    openapiFields.add("top_countries");
    openapiFields.add("websites_count");
    openapiFields.add("count");
    openapiFields.add("top_attributes");
    openapiFields.add("top_place_topics");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to BusinessListingAggregationInfo
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!BusinessListingAggregationInfo.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in BusinessListingAggregationInfo is not found in the empty JSON string", BusinessListingAggregationInfo.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!BusinessListingAggregationInfo.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `BusinessListingAggregationInfo` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!BusinessListingAggregationInfo.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'BusinessListingAggregationInfo' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<BusinessListingAggregationInfo> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(BusinessListingAggregationInfo.class));

       return (TypeAdapter<T>) new TypeAdapter<BusinessListingAggregationInfo>() {
           @Override
           public void write(JsonWriter out, BusinessListingAggregationInfo value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public BusinessListingAggregationInfo read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of BusinessListingAggregationInfo given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of BusinessListingAggregationInfo
  * @throws IOException if the JSON string is invalid with respect to BusinessListingAggregationInfo
  */
  public static BusinessListingAggregationInfo fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, BusinessListingAggregationInfo.class);
  }

 /**
  * Convert an instance of BusinessListingAggregationInfo to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

