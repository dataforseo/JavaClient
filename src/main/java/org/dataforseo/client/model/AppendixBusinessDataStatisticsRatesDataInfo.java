/*
 * DataForSEO API documentation
 * DataForSEO API is the starting point on your journey towards building powerful SEO software. With DataForSEO you can get all the data you need to build an efficient application while also saving your time and budget. DataForSEO API is using the REST technology for interchanging data between your application and our service. The data exchange is made through the widely used HTTP protocol, which allows applying our API to almost all programming languages.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.dataforseo.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.dataforseo.client.model.AppendixBusinessDataDayLimitsRatesDataInfo;
import org.dataforseo.client.model.AppendixBusinessDataGoogleInfo;
import org.dataforseo.client.model.AppendixBusinessListingsBusinessDataLimitsRatesDataInfo;
import org.dataforseo.client.model.AppendixSocialMediaBusinessDataLimitsRatesDataInfo;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.dataforseo.client.JSON;

/**
 * AppendixBusinessDataStatisticsRatesDataInfo
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-08-28T19:49:11.515676700+03:00[Europe/Kiev]")
public class AppendixBusinessDataStatisticsRatesDataInfo {
  public static final String SERIALIZED_NAME_GOOGLE = "google";
  @SerializedName(SERIALIZED_NAME_GOOGLE)
  private AppendixBusinessDataGoogleInfo google;

  public static final String SERIALIZED_NAME_LOCATIONS = "locations";
  @SerializedName(SERIALIZED_NAME_LOCATIONS)
  private Double locations;

  public static final String SERIALIZED_NAME_LANGUAGES = "languages";
  @SerializedName(SERIALIZED_NAME_LANGUAGES)
  private Double languages;

  public static final String SERIALIZED_NAME_ERRORS = "errors";
  @SerializedName(SERIALIZED_NAME_ERRORS)
  private Double errors;

  public static final String SERIALIZED_NAME_YELP = "yelp";
  @SerializedName(SERIALIZED_NAME_YELP)
  private AppendixBusinessDataDayLimitsRatesDataInfo yelp;

  public static final String SERIALIZED_NAME_SOCIAL_MEDIA = "social_media";
  @SerializedName(SERIALIZED_NAME_SOCIAL_MEDIA)
  private AppendixSocialMediaBusinessDataLimitsRatesDataInfo socialMedia;

  public static final String SERIALIZED_NAME_TRIPADVISOR = "tripadvisor";
  @SerializedName(SERIALIZED_NAME_TRIPADVISOR)
  private AppendixBusinessDataDayLimitsRatesDataInfo tripadvisor;

  public static final String SERIALIZED_NAME_TRUSTPILOT = "trustpilot";
  @SerializedName(SERIALIZED_NAME_TRUSTPILOT)
  private AppendixBusinessDataDayLimitsRatesDataInfo trustpilot;

  public static final String SERIALIZED_NAME_BUSINESS_LISTINGS = "business_listings";
  @SerializedName(SERIALIZED_NAME_BUSINESS_LISTINGS)
  private AppendixBusinessListingsBusinessDataLimitsRatesDataInfo businessListings;

  public static final String SERIALIZED_NAME_TASKS_READY = "tasks_ready";
  @SerializedName(SERIALIZED_NAME_TASKS_READY)
  private Double tasksReady;

  public static final String SERIALIZED_NAME_ID_LIST = "id_list";
  @SerializedName(SERIALIZED_NAME_ID_LIST)
  private Double idList;

  public static final String SERIALIZED_NAME_AVAILABLE_FILTERS = "available_filters";
  @SerializedName(SERIALIZED_NAME_AVAILABLE_FILTERS)
  private Double availableFilters;

  public AppendixBusinessDataStatisticsRatesDataInfo() {
  }

  public AppendixBusinessDataStatisticsRatesDataInfo google(AppendixBusinessDataGoogleInfo google) {
    this.google = google;
    return this;
  }

   /**
   * Get google
   * @return google
  **/
  @javax.annotation.Nullable
  public AppendixBusinessDataGoogleInfo getGoogle() {
    return google;
  }

  public void setGoogle(AppendixBusinessDataGoogleInfo google) {
    this.google = google;
  }


  public AppendixBusinessDataStatisticsRatesDataInfo locations(Double locations) {
    this.locations = locations;
    return this;
  }

   /**
   * Get locations
   * @return locations
  **/
  @javax.annotation.Nullable
  public Double getLocations() {
    return locations;
  }

  public void setLocations(Double locations) {
    this.locations = locations;
  }


  public AppendixBusinessDataStatisticsRatesDataInfo languages(Double languages) {
    this.languages = languages;
    return this;
  }

   /**
   * Get languages
   * @return languages
  **/
  @javax.annotation.Nullable
  public Double getLanguages() {
    return languages;
  }

  public void setLanguages(Double languages) {
    this.languages = languages;
  }


  public AppendixBusinessDataStatisticsRatesDataInfo errors(Double errors) {
    this.errors = errors;
    return this;
  }

   /**
   * Get errors
   * @return errors
  **/
  @javax.annotation.Nullable
  public Double getErrors() {
    return errors;
  }

  public void setErrors(Double errors) {
    this.errors = errors;
  }


  public AppendixBusinessDataStatisticsRatesDataInfo yelp(AppendixBusinessDataDayLimitsRatesDataInfo yelp) {
    this.yelp = yelp;
    return this;
  }

   /**
   * Get yelp
   * @return yelp
  **/
  @javax.annotation.Nullable
  public AppendixBusinessDataDayLimitsRatesDataInfo getYelp() {
    return yelp;
  }

  public void setYelp(AppendixBusinessDataDayLimitsRatesDataInfo yelp) {
    this.yelp = yelp;
  }


  public AppendixBusinessDataStatisticsRatesDataInfo socialMedia(AppendixSocialMediaBusinessDataLimitsRatesDataInfo socialMedia) {
    this.socialMedia = socialMedia;
    return this;
  }

   /**
   * Get socialMedia
   * @return socialMedia
  **/
  @javax.annotation.Nullable
  public AppendixSocialMediaBusinessDataLimitsRatesDataInfo getSocialMedia() {
    return socialMedia;
  }

  public void setSocialMedia(AppendixSocialMediaBusinessDataLimitsRatesDataInfo socialMedia) {
    this.socialMedia = socialMedia;
  }


  public AppendixBusinessDataStatisticsRatesDataInfo tripadvisor(AppendixBusinessDataDayLimitsRatesDataInfo tripadvisor) {
    this.tripadvisor = tripadvisor;
    return this;
  }

   /**
   * Get tripadvisor
   * @return tripadvisor
  **/
  @javax.annotation.Nullable
  public AppendixBusinessDataDayLimitsRatesDataInfo getTripadvisor() {
    return tripadvisor;
  }

  public void setTripadvisor(AppendixBusinessDataDayLimitsRatesDataInfo tripadvisor) {
    this.tripadvisor = tripadvisor;
  }


  public AppendixBusinessDataStatisticsRatesDataInfo trustpilot(AppendixBusinessDataDayLimitsRatesDataInfo trustpilot) {
    this.trustpilot = trustpilot;
    return this;
  }

   /**
   * Get trustpilot
   * @return trustpilot
  **/
  @javax.annotation.Nullable
  public AppendixBusinessDataDayLimitsRatesDataInfo getTrustpilot() {
    return trustpilot;
  }

  public void setTrustpilot(AppendixBusinessDataDayLimitsRatesDataInfo trustpilot) {
    this.trustpilot = trustpilot;
  }


  public AppendixBusinessDataStatisticsRatesDataInfo businessListings(AppendixBusinessListingsBusinessDataLimitsRatesDataInfo businessListings) {
    this.businessListings = businessListings;
    return this;
  }

   /**
   * Get businessListings
   * @return businessListings
  **/
  @javax.annotation.Nullable
  public AppendixBusinessListingsBusinessDataLimitsRatesDataInfo getBusinessListings() {
    return businessListings;
  }

  public void setBusinessListings(AppendixBusinessListingsBusinessDataLimitsRatesDataInfo businessListings) {
    this.businessListings = businessListings;
  }


  public AppendixBusinessDataStatisticsRatesDataInfo tasksReady(Double tasksReady) {
    this.tasksReady = tasksReady;
    return this;
  }

   /**
   * Get tasksReady
   * @return tasksReady
  **/
  @javax.annotation.Nullable
  public Double getTasksReady() {
    return tasksReady;
  }

  public void setTasksReady(Double tasksReady) {
    this.tasksReady = tasksReady;
  }


  public AppendixBusinessDataStatisticsRatesDataInfo idList(Double idList) {
    this.idList = idList;
    return this;
  }

   /**
   * Get idList
   * @return idList
  **/
  @javax.annotation.Nullable
  public Double getIdList() {
    return idList;
  }

  public void setIdList(Double idList) {
    this.idList = idList;
  }


  public AppendixBusinessDataStatisticsRatesDataInfo availableFilters(Double availableFilters) {
    this.availableFilters = availableFilters;
    return this;
  }

   /**
   * Get availableFilters
   * @return availableFilters
  **/
  @javax.annotation.Nullable
  public Double getAvailableFilters() {
    return availableFilters;
  }

  public void setAvailableFilters(Double availableFilters) {
    this.availableFilters = availableFilters;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AppendixBusinessDataStatisticsRatesDataInfo appendixBusinessDataStatisticsRatesDataInfo = (AppendixBusinessDataStatisticsRatesDataInfo) o;
    return Objects.equals(this.google, appendixBusinessDataStatisticsRatesDataInfo.google) &&
        Objects.equals(this.locations, appendixBusinessDataStatisticsRatesDataInfo.locations) &&
        Objects.equals(this.languages, appendixBusinessDataStatisticsRatesDataInfo.languages) &&
        Objects.equals(this.errors, appendixBusinessDataStatisticsRatesDataInfo.errors) &&
        Objects.equals(this.yelp, appendixBusinessDataStatisticsRatesDataInfo.yelp) &&
        Objects.equals(this.socialMedia, appendixBusinessDataStatisticsRatesDataInfo.socialMedia) &&
        Objects.equals(this.tripadvisor, appendixBusinessDataStatisticsRatesDataInfo.tripadvisor) &&
        Objects.equals(this.trustpilot, appendixBusinessDataStatisticsRatesDataInfo.trustpilot) &&
        Objects.equals(this.businessListings, appendixBusinessDataStatisticsRatesDataInfo.businessListings) &&
        Objects.equals(this.tasksReady, appendixBusinessDataStatisticsRatesDataInfo.tasksReady) &&
        Objects.equals(this.idList, appendixBusinessDataStatisticsRatesDataInfo.idList) &&
        Objects.equals(this.availableFilters, appendixBusinessDataStatisticsRatesDataInfo.availableFilters);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(google, locations, languages, errors, yelp, socialMedia, tripadvisor, trustpilot, businessListings, tasksReady, idList, availableFilters);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AppendixBusinessDataStatisticsRatesDataInfo {\n");
    sb.append("    google: ").append(toIndentedString(google)).append("\n");
    sb.append("    locations: ").append(toIndentedString(locations)).append("\n");
    sb.append("    languages: ").append(toIndentedString(languages)).append("\n");
    sb.append("    errors: ").append(toIndentedString(errors)).append("\n");
    sb.append("    yelp: ").append(toIndentedString(yelp)).append("\n");
    sb.append("    socialMedia: ").append(toIndentedString(socialMedia)).append("\n");
    sb.append("    tripadvisor: ").append(toIndentedString(tripadvisor)).append("\n");
    sb.append("    trustpilot: ").append(toIndentedString(trustpilot)).append("\n");
    sb.append("    businessListings: ").append(toIndentedString(businessListings)).append("\n");
    sb.append("    tasksReady: ").append(toIndentedString(tasksReady)).append("\n");
    sb.append("    idList: ").append(toIndentedString(idList)).append("\n");
    sb.append("    availableFilters: ").append(toIndentedString(availableFilters)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("google");
    openapiFields.add("locations");
    openapiFields.add("languages");
    openapiFields.add("errors");
    openapiFields.add("yelp");
    openapiFields.add("social_media");
    openapiFields.add("tripadvisor");
    openapiFields.add("trustpilot");
    openapiFields.add("business_listings");
    openapiFields.add("tasks_ready");
    openapiFields.add("id_list");
    openapiFields.add("available_filters");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to AppendixBusinessDataStatisticsRatesDataInfo
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!AppendixBusinessDataStatisticsRatesDataInfo.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AppendixBusinessDataStatisticsRatesDataInfo is not found in the empty JSON string", AppendixBusinessDataStatisticsRatesDataInfo.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!AppendixBusinessDataStatisticsRatesDataInfo.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AppendixBusinessDataStatisticsRatesDataInfo` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `google`
      if (jsonObj.get("google") != null && !jsonObj.get("google").isJsonNull()) {
        AppendixBusinessDataGoogleInfo.validateJsonElement(jsonObj.get("google"));
      }
      // validate the optional field `yelp`
      if (jsonObj.get("yelp") != null && !jsonObj.get("yelp").isJsonNull()) {
        AppendixBusinessDataDayLimitsRatesDataInfo.validateJsonElement(jsonObj.get("yelp"));
      }
      // validate the optional field `social_media`
      if (jsonObj.get("social_media") != null && !jsonObj.get("social_media").isJsonNull()) {
        AppendixSocialMediaBusinessDataLimitsRatesDataInfo.validateJsonElement(jsonObj.get("social_media"));
      }
      // validate the optional field `tripadvisor`
      if (jsonObj.get("tripadvisor") != null && !jsonObj.get("tripadvisor").isJsonNull()) {
        AppendixBusinessDataDayLimitsRatesDataInfo.validateJsonElement(jsonObj.get("tripadvisor"));
      }
      // validate the optional field `trustpilot`
      if (jsonObj.get("trustpilot") != null && !jsonObj.get("trustpilot").isJsonNull()) {
        AppendixBusinessDataDayLimitsRatesDataInfo.validateJsonElement(jsonObj.get("trustpilot"));
      }
      // validate the optional field `business_listings`
      if (jsonObj.get("business_listings") != null && !jsonObj.get("business_listings").isJsonNull()) {
        AppendixBusinessListingsBusinessDataLimitsRatesDataInfo.validateJsonElement(jsonObj.get("business_listings"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AppendixBusinessDataStatisticsRatesDataInfo.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AppendixBusinessDataStatisticsRatesDataInfo' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AppendixBusinessDataStatisticsRatesDataInfo> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AppendixBusinessDataStatisticsRatesDataInfo.class));

       return (TypeAdapter<T>) new TypeAdapter<AppendixBusinessDataStatisticsRatesDataInfo>() {
           @Override
           public void write(JsonWriter out, AppendixBusinessDataStatisticsRatesDataInfo value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AppendixBusinessDataStatisticsRatesDataInfo read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of AppendixBusinessDataStatisticsRatesDataInfo given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of AppendixBusinessDataStatisticsRatesDataInfo
  * @throws IOException if the JSON string is invalid with respect to AppendixBusinessDataStatisticsRatesDataInfo
  */
  public static AppendixBusinessDataStatisticsRatesDataInfo fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AppendixBusinessDataStatisticsRatesDataInfo.class);
  }

 /**
  * Convert an instance of AppendixBusinessDataStatisticsRatesDataInfo to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

