/*
 * DataForSEO API documentation
 * DataForSEO API is the starting point on your journey towards building powerful SEO software. With DataForSEO you can get all the data you need to build an efficient application while also saving your time and budget. DataForSEO API is using the REST technology for interchanging data between your application and our service. The data exchange is made through the widely used HTTP protocol, which allows applying our API to almost all programming languages.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.dataforseo.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.dataforseo.client.JSON;

/**
 * AppDataAppleAppInfoTasksReadyResultInfo
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-06T20:38:17.939082300+03:00[Europe/Kiev]")
public class AppDataAppleAppInfoTasksReadyResultInfo {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_SE = "se";
  @SerializedName(SERIALIZED_NAME_SE)
  private String se;

  public static final String SERIALIZED_NAME_DATE_POSTED = "date_posted";
  @SerializedName(SERIALIZED_NAME_DATE_POSTED)
  private String datePosted;

  public static final String SERIALIZED_NAME_TAG = "tag";
  @SerializedName(SERIALIZED_NAME_TAG)
  private String tag;

  public static final String SERIALIZED_NAME_ENDPOINT_ADVANCED = "endpoint_advanced";
  @SerializedName(SERIALIZED_NAME_ENDPOINT_ADVANCED)
  private String endpointAdvanced;

  public static final String SERIALIZED_NAME_ENDPOINT_HTML = "endpoint_html";
  @SerializedName(SERIALIZED_NAME_ENDPOINT_HTML)
  private String endpointHtml;

  public AppDataAppleAppInfoTasksReadyResultInfo() {
  }

  public AppDataAppleAppInfoTasksReadyResultInfo id(String id) {
    this.id = id;
    return this;
  }

   /**
   * task identifier of the completed task unique task identifier in our system in the UUID format
   * @return id
  **/
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }


  public AppDataAppleAppInfoTasksReadyResultInfo se(String se) {
    this.se = se;
    return this;
  }

   /**
   * search engine specified when setting the task
   * @return se
  **/
  @javax.annotation.Nullable
  public String getSe() {
    return se;
  }

  public void setSe(String se) {
    this.se = se;
  }


  public AppDataAppleAppInfoTasksReadyResultInfo datePosted(String datePosted) {
    this.datePosted = datePosted;
    return this;
  }

   /**
   * date when the task was posted (in the UTC format)
   * @return datePosted
  **/
  @javax.annotation.Nullable
  public String getDatePosted() {
    return datePosted;
  }

  public void setDatePosted(String datePosted) {
    this.datePosted = datePosted;
  }


  public AppDataAppleAppInfoTasksReadyResultInfo tag(String tag) {
    this.tag = tag;
    return this;
  }

   /**
   * user-defined task identifier
   * @return tag
  **/
  @javax.annotation.Nullable
  public String getTag() {
    return tag;
  }

  public void setTag(String tag) {
    this.tag = tag;
  }


  public AppDataAppleAppInfoTasksReadyResultInfo endpointAdvanced(String endpointAdvanced) {
    this.endpointAdvanced = endpointAdvanced;
    return this;
  }

   /**
   * URL for collecting the results of the Apple App Info task
   * @return endpointAdvanced
  **/
  @javax.annotation.Nullable
  public String getEndpointAdvanced() {
    return endpointAdvanced;
  }

  public void setEndpointAdvanced(String endpointAdvanced) {
    this.endpointAdvanced = endpointAdvanced;
  }


  public AppDataAppleAppInfoTasksReadyResultInfo endpointHtml(String endpointHtml) {
    this.endpointHtml = endpointHtml;
    return this;
  }

   /**
   * URL for collecting the results of the Apple App Info HTML task if HTML tasks are not supported in the specified endpoint, the value will be null
   * @return endpointHtml
  **/
  @javax.annotation.Nullable
  public String getEndpointHtml() {
    return endpointHtml;
  }

  public void setEndpointHtml(String endpointHtml) {
    this.endpointHtml = endpointHtml;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AppDataAppleAppInfoTasksReadyResultInfo appDataAppleAppInfoTasksReadyResultInfo = (AppDataAppleAppInfoTasksReadyResultInfo) o;
    return Objects.equals(this.id, appDataAppleAppInfoTasksReadyResultInfo.id) &&
        Objects.equals(this.se, appDataAppleAppInfoTasksReadyResultInfo.se) &&
        Objects.equals(this.datePosted, appDataAppleAppInfoTasksReadyResultInfo.datePosted) &&
        Objects.equals(this.tag, appDataAppleAppInfoTasksReadyResultInfo.tag) &&
        Objects.equals(this.endpointAdvanced, appDataAppleAppInfoTasksReadyResultInfo.endpointAdvanced) &&
        Objects.equals(this.endpointHtml, appDataAppleAppInfoTasksReadyResultInfo.endpointHtml);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, se, datePosted, tag, endpointAdvanced, endpointHtml);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AppDataAppleAppInfoTasksReadyResultInfo {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    se: ").append(toIndentedString(se)).append("\n");
    sb.append("    datePosted: ").append(toIndentedString(datePosted)).append("\n");
    sb.append("    tag: ").append(toIndentedString(tag)).append("\n");
    sb.append("    endpointAdvanced: ").append(toIndentedString(endpointAdvanced)).append("\n");
    sb.append("    endpointHtml: ").append(toIndentedString(endpointHtml)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("id");
    openapiFields.add("se");
    openapiFields.add("date_posted");
    openapiFields.add("tag");
    openapiFields.add("endpoint_advanced");
    openapiFields.add("endpoint_html");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to AppDataAppleAppInfoTasksReadyResultInfo
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!AppDataAppleAppInfoTasksReadyResultInfo.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AppDataAppleAppInfoTasksReadyResultInfo is not found in the empty JSON string", AppDataAppleAppInfoTasksReadyResultInfo.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!AppDataAppleAppInfoTasksReadyResultInfo.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AppDataAppleAppInfoTasksReadyResultInfo` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if ((jsonObj.get("se") != null && !jsonObj.get("se").isJsonNull()) && !jsonObj.get("se").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `se` to be a primitive type in the JSON string but got `%s`", jsonObj.get("se").toString()));
      }
      if ((jsonObj.get("date_posted") != null && !jsonObj.get("date_posted").isJsonNull()) && !jsonObj.get("date_posted").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `date_posted` to be a primitive type in the JSON string but got `%s`", jsonObj.get("date_posted").toString()));
      }
      if ((jsonObj.get("tag") != null && !jsonObj.get("tag").isJsonNull()) && !jsonObj.get("tag").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `tag` to be a primitive type in the JSON string but got `%s`", jsonObj.get("tag").toString()));
      }
      if ((jsonObj.get("endpoint_advanced") != null && !jsonObj.get("endpoint_advanced").isJsonNull()) && !jsonObj.get("endpoint_advanced").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `endpoint_advanced` to be a primitive type in the JSON string but got `%s`", jsonObj.get("endpoint_advanced").toString()));
      }
      if ((jsonObj.get("endpoint_html") != null && !jsonObj.get("endpoint_html").isJsonNull()) && !jsonObj.get("endpoint_html").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `endpoint_html` to be a primitive type in the JSON string but got `%s`", jsonObj.get("endpoint_html").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AppDataAppleAppInfoTasksReadyResultInfo.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AppDataAppleAppInfoTasksReadyResultInfo' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AppDataAppleAppInfoTasksReadyResultInfo> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AppDataAppleAppInfoTasksReadyResultInfo.class));

       return (TypeAdapter<T>) new TypeAdapter<AppDataAppleAppInfoTasksReadyResultInfo>() {
           @Override
           public void write(JsonWriter out, AppDataAppleAppInfoTasksReadyResultInfo value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AppDataAppleAppInfoTasksReadyResultInfo read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of AppDataAppleAppInfoTasksReadyResultInfo given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of AppDataAppleAppInfoTasksReadyResultInfo
  * @throws IOException if the JSON string is invalid with respect to AppDataAppleAppInfoTasksReadyResultInfo
  */
  public static AppDataAppleAppInfoTasksReadyResultInfo fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AppDataAppleAppInfoTasksReadyResultInfo.class);
  }

 /**
  * Convert an instance of AppDataAppleAppInfoTasksReadyResultInfo to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

