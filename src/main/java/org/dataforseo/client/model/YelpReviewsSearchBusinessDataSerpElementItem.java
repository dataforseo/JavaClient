/*
 * DataForSEO API documentation
 * DataForSEO API is the starting point on your journey towards building powerful SEO software. With DataForSEO you can get all the data you need to build an efficient application while also saving your time and budget. DataForSEO API is using the REST technology for interchanging data between your application and our service. The data exchange is made through the widely used HTTP protocol, which allows applying our API to almost all programming languages.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.dataforseo.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.dataforseo.client.model.BaseBusinessDataSerpElementItem;
import org.dataforseo.client.model.BusinessDataUserProfileInfo;
import org.dataforseo.client.model.RatingInfo;
import org.dataforseo.client.model.ReviewResponseItemInfo;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.dataforseo.client.JSON;

/**
 * YelpReviewsSearchBusinessDataSerpElementItem
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-19T23:45:33.338179400+03:00[Europe/Kiev]")
public class YelpReviewsSearchBusinessDataSerpElementItem extends BaseBusinessDataSerpElementItem {
  public static final String SERIALIZED_NAME_RANK_GROUP = "rank_group";
  @SerializedName(SERIALIZED_NAME_RANK_GROUP)
  private Integer rankGroup;

  public static final String SERIALIZED_NAME_RANK_ABSOLUTE = "rank_absolute";
  @SerializedName(SERIALIZED_NAME_RANK_ABSOLUTE)
  private Integer rankAbsolute;

  public static final String SERIALIZED_NAME_POSITION = "position";
  @SerializedName(SERIALIZED_NAME_POSITION)
  private String position;

  public static final String SERIALIZED_NAME_REVIEW_ID = "review_id";
  @SerializedName(SERIALIZED_NAME_REVIEW_ID)
  private String reviewId;

  public static final String SERIALIZED_NAME_RATING = "rating";
  @SerializedName(SERIALIZED_NAME_RATING)
  private RatingInfo rating;

  public static final String SERIALIZED_NAME_TIMESTAMP = "timestamp";
  @SerializedName(SERIALIZED_NAME_TIMESTAMP)
  private String timestamp;

  public static final String SERIALIZED_NAME_REVIEW_TEXT = "review_text";
  @SerializedName(SERIALIZED_NAME_REVIEW_TEXT)
  private String reviewText;

  public static final String SERIALIZED_NAME_REVIEW_IMAGES = "review_images";
  @SerializedName(SERIALIZED_NAME_REVIEW_IMAGES)
  private List<String> reviewImages;

  public static final String SERIALIZED_NAME_USER_PROFILE = "user_profile";
  @SerializedName(SERIALIZED_NAME_USER_PROFILE)
  private BusinessDataUserProfileInfo userProfile;

  public static final String SERIALIZED_NAME_RESPONSES = "responses";
  @SerializedName(SERIALIZED_NAME_RESPONSES)
  private List<ReviewResponseItemInfo> responses;

  public YelpReviewsSearchBusinessDataSerpElementItem() {
    this.type = this.getClass().getSimpleName();
  }

  public YelpReviewsSearchBusinessDataSerpElementItem rankGroup(Integer rankGroup) {
    this.rankGroup = rankGroup;
    return this;
  }

   /**
   * position within a group of elements with identical type values positions of elements with different type values are omitted from rank_group
   * @return rankGroup
  **/
  @javax.annotation.Nullable
  public Integer getRankGroup() {
    return rankGroup;
  }

  public void setRankGroup(Integer rankGroup) {
    this.rankGroup = rankGroup;
  }


  public YelpReviewsSearchBusinessDataSerpElementItem rankAbsolute(Integer rankAbsolute) {
    this.rankAbsolute = rankAbsolute;
    return this;
  }

   /**
   * absolute rank among all the listed reviews absolute position among all reviews on the list
   * @return rankAbsolute
  **/
  @javax.annotation.Nullable
  public Integer getRankAbsolute() {
    return rankAbsolute;
  }

  public void setRankAbsolute(Integer rankAbsolute) {
    this.rankAbsolute = rankAbsolute;
  }


  public YelpReviewsSearchBusinessDataSerpElementItem position(String position) {
    this.position = position;
    return this;
  }

   /**
   * the alignment of the review in SERP can take the following values: left
   * @return position
  **/
  @javax.annotation.Nullable
  public String getPosition() {
    return position;
  }

  public void setPosition(String position) {
    this.position = position;
  }


  public YelpReviewsSearchBusinessDataSerpElementItem reviewId(String reviewId) {
    this.reviewId = reviewId;
    return this;
  }

   /**
   * the unique identifier of a review received from Yelp example: WvjNtncj8PDZytbofWlC5A
   * @return reviewId
  **/
  @javax.annotation.Nullable
  public String getReviewId() {
    return reviewId;
  }

  public void setReviewId(String reviewId) {
    this.reviewId = reviewId;
  }


  public YelpReviewsSearchBusinessDataSerpElementItem rating(RatingInfo rating) {
    this.rating = rating;
    return this;
  }

   /**
   * Get rating
   * @return rating
  **/
  @javax.annotation.Nullable
  public RatingInfo getRating() {
    return rating;
  }

  public void setRating(RatingInfo rating) {
    this.rating = rating;
  }


  public YelpReviewsSearchBusinessDataSerpElementItem timestamp(String timestamp) {
    this.timestamp = timestamp;
    return this;
  }

   /**
   * the time of publication indicates timestamp of when the review was listed
   * @return timestamp
  **/
  @javax.annotation.Nullable
  public String getTimestamp() {
    return timestamp;
  }

  public void setTimestamp(String timestamp) {
    this.timestamp = timestamp;
  }


  public YelpReviewsSearchBusinessDataSerpElementItem reviewText(String reviewText) {
    this.reviewText = reviewText;
    return this;
  }

   /**
   * the content of the review
   * @return reviewText
  **/
  @javax.annotation.Nullable
  public String getReviewText() {
    return reviewText;
  }

  public void setReviewText(String reviewText) {
    this.reviewText = reviewText;
  }


  public YelpReviewsSearchBusinessDataSerpElementItem reviewImages(List<String> reviewImages) {
    this.reviewImages = reviewImages;
    return this;
  }

  public YelpReviewsSearchBusinessDataSerpElementItem addReviewImagesItem(String reviewImagesItem) {
    if (this.reviewImages == null) {
      this.reviewImages = new ArrayList<>();
    }
    this.reviewImages.add(reviewImagesItem);
    return this;
  }

   /**
   * images submitted by the reviewer you will find URLs to the images provided by the author of this review
   * @return reviewImages
  **/
  @javax.annotation.Nullable
  public List<String> getReviewImages() {
    return reviewImages;
  }

  public void setReviewImages(List<String> reviewImages) {
    this.reviewImages = reviewImages;
  }


  public YelpReviewsSearchBusinessDataSerpElementItem userProfile(BusinessDataUserProfileInfo userProfile) {
    this.userProfile = userProfile;
    return this;
  }

   /**
   * Get userProfile
   * @return userProfile
  **/
  @javax.annotation.Nullable
  public BusinessDataUserProfileInfo getUserProfile() {
    return userProfile;
  }

  public void setUserProfile(BusinessDataUserProfileInfo userProfile) {
    this.userProfile = userProfile;
  }


  public YelpReviewsSearchBusinessDataSerpElementItem responses(List<ReviewResponseItemInfo> responses) {
    this.responses = responses;
    return this;
  }

  public YelpReviewsSearchBusinessDataSerpElementItem addResponsesItem(ReviewResponseItemInfo responsesItem) {
    if (this.responses == null) {
      this.responses = new ArrayList<>();
    }
    this.responses.add(responsesItem);
    return this;
  }

   /**
   * text of the ownerâ€™s response
   * @return responses
  **/
  @javax.annotation.Nullable
  public List<ReviewResponseItemInfo> getResponses() {
    return responses;
  }

  public void setResponses(List<ReviewResponseItemInfo> responses) {
    this.responses = responses;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    YelpReviewsSearchBusinessDataSerpElementItem yelpReviewsSearchBusinessDataSerpElementItem = (YelpReviewsSearchBusinessDataSerpElementItem) o;
    return Objects.equals(this.rankGroup, yelpReviewsSearchBusinessDataSerpElementItem.rankGroup) &&
        Objects.equals(this.rankAbsolute, yelpReviewsSearchBusinessDataSerpElementItem.rankAbsolute) &&
        Objects.equals(this.position, yelpReviewsSearchBusinessDataSerpElementItem.position) &&
        Objects.equals(this.reviewId, yelpReviewsSearchBusinessDataSerpElementItem.reviewId) &&
        Objects.equals(this.rating, yelpReviewsSearchBusinessDataSerpElementItem.rating) &&
        Objects.equals(this.timestamp, yelpReviewsSearchBusinessDataSerpElementItem.timestamp) &&
        Objects.equals(this.reviewText, yelpReviewsSearchBusinessDataSerpElementItem.reviewText) &&
        Objects.equals(this.reviewImages, yelpReviewsSearchBusinessDataSerpElementItem.reviewImages) &&
        Objects.equals(this.userProfile, yelpReviewsSearchBusinessDataSerpElementItem.userProfile) &&
        Objects.equals(this.responses, yelpReviewsSearchBusinessDataSerpElementItem.responses) &&
        super.equals(o);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(rankGroup, rankAbsolute, position, reviewId, rating, timestamp, reviewText, reviewImages, userProfile, responses, super.hashCode());
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class YelpReviewsSearchBusinessDataSerpElementItem {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    rankGroup: ").append(toIndentedString(rankGroup)).append("\n");
    sb.append("    rankAbsolute: ").append(toIndentedString(rankAbsolute)).append("\n");
    sb.append("    position: ").append(toIndentedString(position)).append("\n");
    sb.append("    reviewId: ").append(toIndentedString(reviewId)).append("\n");
    sb.append("    rating: ").append(toIndentedString(rating)).append("\n");
    sb.append("    timestamp: ").append(toIndentedString(timestamp)).append("\n");
    sb.append("    reviewText: ").append(toIndentedString(reviewText)).append("\n");
    sb.append("    reviewImages: ").append(toIndentedString(reviewImages)).append("\n");
    sb.append("    userProfile: ").append(toIndentedString(userProfile)).append("\n");
    sb.append("    responses: ").append(toIndentedString(responses)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("type");
    openapiFields.add("rank_group");
    openapiFields.add("rank_absolute");
    openapiFields.add("position");
    openapiFields.add("review_id");
    openapiFields.add("rating");
    openapiFields.add("timestamp");
    openapiFields.add("review_text");
    openapiFields.add("review_images");
    openapiFields.add("user_profile");
    openapiFields.add("responses");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to YelpReviewsSearchBusinessDataSerpElementItem
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!YelpReviewsSearchBusinessDataSerpElementItem.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in YelpReviewsSearchBusinessDataSerpElementItem is not found in the empty JSON string", YelpReviewsSearchBusinessDataSerpElementItem.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!YelpReviewsSearchBusinessDataSerpElementItem.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `YelpReviewsSearchBusinessDataSerpElementItem` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!YelpReviewsSearchBusinessDataSerpElementItem.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'YelpReviewsSearchBusinessDataSerpElementItem' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<YelpReviewsSearchBusinessDataSerpElementItem> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(YelpReviewsSearchBusinessDataSerpElementItem.class));

       return (TypeAdapter<T>) new TypeAdapter<YelpReviewsSearchBusinessDataSerpElementItem>() {
           @Override
           public void write(JsonWriter out, YelpReviewsSearchBusinessDataSerpElementItem value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public YelpReviewsSearchBusinessDataSerpElementItem read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of YelpReviewsSearchBusinessDataSerpElementItem given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of YelpReviewsSearchBusinessDataSerpElementItem
  * @throws IOException if the JSON string is invalid with respect to YelpReviewsSearchBusinessDataSerpElementItem
  */
  public static YelpReviewsSearchBusinessDataSerpElementItem fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, YelpReviewsSearchBusinessDataSerpElementItem.class);
  }

 /**
  * Convert an instance of YelpReviewsSearchBusinessDataSerpElementItem to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

