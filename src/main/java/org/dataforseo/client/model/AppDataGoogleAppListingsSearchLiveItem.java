/*
 * DataForSEO API documentation
 * DataForSEO API is the starting point on your journey towards building powerful SEO software. With DataForSEO you can get all the data you need to build an efficient application while also saving your time and budget. DataForSEO API is using the REST technology for interchanging data between your application and our service. The data exchange is made through the widely used HTTP protocol, which allows applying our API to almost all programming languages.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.dataforseo.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.dataforseo.client.model.AppDataGooglePlayInfoOrganicSerpElementItem;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.dataforseo.client.JSON;

/**
 * AppDataGoogleAppListingsSearchLiveItem
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-07-05T09:46:18.018897200+03:00[Europe/Kiev]")
public class AppDataGoogleAppListingsSearchLiveItem {
  public static final String SERIALIZED_NAME_APP_ID = "app_id";
  @SerializedName(SERIALIZED_NAME_APP_ID)
  private String appId;

  public static final String SERIALIZED_NAME_SE_DOMAIN = "se_domain";
  @SerializedName(SERIALIZED_NAME_SE_DOMAIN)
  private String seDomain;

  public static final String SERIALIZED_NAME_LOCATION_CODE = "location_code";
  @SerializedName(SERIALIZED_NAME_LOCATION_CODE)
  private Integer locationCode;

  public static final String SERIALIZED_NAME_LANGUAGE_CODE = "language_code";
  @SerializedName(SERIALIZED_NAME_LANGUAGE_CODE)
  private String languageCode;

  public static final String SERIALIZED_NAME_CHECK_URL = "check_url";
  @SerializedName(SERIALIZED_NAME_CHECK_URL)
  private String checkUrl;

  public static final String SERIALIZED_NAME_TIME_UPDATE = "time_update";
  @SerializedName(SERIALIZED_NAME_TIME_UPDATE)
  private String timeUpdate;

  public static final String SERIALIZED_NAME_ITEM = "item";
  @SerializedName(SERIALIZED_NAME_ITEM)
  private AppDataGooglePlayInfoOrganicSerpElementItem item;

  public AppDataGoogleAppListingsSearchLiveItem() {
  }

  public AppDataGoogleAppListingsSearchLiveItem appId(String appId) {
    this.appId = appId;
    return this;
  }

   /**
   * ID of the returned app
   * @return appId
  **/
  @javax.annotation.Nullable
  public String getAppId() {
    return appId;
  }

  public void setAppId(String appId) {
    this.appId = appId;
  }


  public AppDataGoogleAppListingsSearchLiveItem seDomain(String seDomain) {
    this.seDomain = seDomain;
    return this;
  }

   /**
   * search engine domain in a POST array
   * @return seDomain
  **/
  @javax.annotation.Nullable
  public String getSeDomain() {
    return seDomain;
  }

  public void setSeDomain(String seDomain) {
    this.seDomain = seDomain;
  }


  public AppDataGoogleAppListingsSearchLiveItem locationCode(Integer locationCode) {
    this.locationCode = locationCode;
    return this;
  }

   /**
   * location code in a POST array
   * @return locationCode
  **/
  @javax.annotation.Nullable
  public Integer getLocationCode() {
    return locationCode;
  }

  public void setLocationCode(Integer locationCode) {
    this.locationCode = locationCode;
  }


  public AppDataGoogleAppListingsSearchLiveItem languageCode(String languageCode) {
    this.languageCode = languageCode;
    return this;
  }

   /**
   * language code in a POST array
   * @return languageCode
  **/
  @javax.annotation.Nullable
  public String getLanguageCode() {
    return languageCode;
  }

  public void setLanguageCode(String languageCode) {
    this.languageCode = languageCode;
  }


  public AppDataGoogleAppListingsSearchLiveItem checkUrl(String checkUrl) {
    this.checkUrl = checkUrl;
    return this;
  }

   /**
   * direct URL to search engine results you can use it to make sure that we provided accurate results
   * @return checkUrl
  **/
  @javax.annotation.Nullable
  public String getCheckUrl() {
    return checkUrl;
  }

  public void setCheckUrl(String checkUrl) {
    this.checkUrl = checkUrl;
  }


  public AppDataGoogleAppListingsSearchLiveItem timeUpdate(String timeUpdate) {
    this.timeUpdate = timeUpdate;
    return this;
  }

   /**
   * date and time when SERP data was last updated in the ISO 8601 format: “YYYY-MM-DDThh:mm:ss.sssssssZ” example: 2023-05-23 10:16:19 +00:00
   * @return timeUpdate
  **/
  @javax.annotation.Nullable
  public String getTimeUpdate() {
    return timeUpdate;
  }

  public void setTimeUpdate(String timeUpdate) {
    this.timeUpdate = timeUpdate;
  }


  public AppDataGoogleAppListingsSearchLiveItem item(AppDataGooglePlayInfoOrganicSerpElementItem item) {
    this.item = item;
    return this;
  }

   /**
   * Get item
   * @return item
  **/
  @javax.annotation.Nullable
  public AppDataGooglePlayInfoOrganicSerpElementItem getItem() {
    return item;
  }

  public void setItem(AppDataGooglePlayInfoOrganicSerpElementItem item) {
    this.item = item;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AppDataGoogleAppListingsSearchLiveItem appDataGoogleAppListingsSearchLiveItem = (AppDataGoogleAppListingsSearchLiveItem) o;
    return Objects.equals(this.appId, appDataGoogleAppListingsSearchLiveItem.appId) &&
        Objects.equals(this.seDomain, appDataGoogleAppListingsSearchLiveItem.seDomain) &&
        Objects.equals(this.locationCode, appDataGoogleAppListingsSearchLiveItem.locationCode) &&
        Objects.equals(this.languageCode, appDataGoogleAppListingsSearchLiveItem.languageCode) &&
        Objects.equals(this.checkUrl, appDataGoogleAppListingsSearchLiveItem.checkUrl) &&
        Objects.equals(this.timeUpdate, appDataGoogleAppListingsSearchLiveItem.timeUpdate) &&
        Objects.equals(this.item, appDataGoogleAppListingsSearchLiveItem.item);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(appId, seDomain, locationCode, languageCode, checkUrl, timeUpdate, item);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AppDataGoogleAppListingsSearchLiveItem {\n");
    sb.append("    appId: ").append(toIndentedString(appId)).append("\n");
    sb.append("    seDomain: ").append(toIndentedString(seDomain)).append("\n");
    sb.append("    locationCode: ").append(toIndentedString(locationCode)).append("\n");
    sb.append("    languageCode: ").append(toIndentedString(languageCode)).append("\n");
    sb.append("    checkUrl: ").append(toIndentedString(checkUrl)).append("\n");
    sb.append("    timeUpdate: ").append(toIndentedString(timeUpdate)).append("\n");
    sb.append("    item: ").append(toIndentedString(item)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("app_id");
    openapiFields.add("se_domain");
    openapiFields.add("location_code");
    openapiFields.add("language_code");
    openapiFields.add("check_url");
    openapiFields.add("time_update");
    openapiFields.add("item");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to AppDataGoogleAppListingsSearchLiveItem
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!AppDataGoogleAppListingsSearchLiveItem.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AppDataGoogleAppListingsSearchLiveItem is not found in the empty JSON string", AppDataGoogleAppListingsSearchLiveItem.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!AppDataGoogleAppListingsSearchLiveItem.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AppDataGoogleAppListingsSearchLiveItem` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("app_id") != null && !jsonObj.get("app_id").isJsonNull()) && !jsonObj.get("app_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `app_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("app_id").toString()));
      }
      if ((jsonObj.get("se_domain") != null && !jsonObj.get("se_domain").isJsonNull()) && !jsonObj.get("se_domain").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `se_domain` to be a primitive type in the JSON string but got `%s`", jsonObj.get("se_domain").toString()));
      }
      if ((jsonObj.get("language_code") != null && !jsonObj.get("language_code").isJsonNull()) && !jsonObj.get("language_code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `language_code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("language_code").toString()));
      }
      if ((jsonObj.get("check_url") != null && !jsonObj.get("check_url").isJsonNull()) && !jsonObj.get("check_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `check_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("check_url").toString()));
      }
      if ((jsonObj.get("time_update") != null && !jsonObj.get("time_update").isJsonNull()) && !jsonObj.get("time_update").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `time_update` to be a primitive type in the JSON string but got `%s`", jsonObj.get("time_update").toString()));
      }
      // validate the optional field `item`
      if (jsonObj.get("item") != null && !jsonObj.get("item").isJsonNull()) {
        AppDataGooglePlayInfoOrganicSerpElementItem.validateJsonElement(jsonObj.get("item"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AppDataGoogleAppListingsSearchLiveItem.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AppDataGoogleAppListingsSearchLiveItem' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AppDataGoogleAppListingsSearchLiveItem> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AppDataGoogleAppListingsSearchLiveItem.class));

       return (TypeAdapter<T>) new TypeAdapter<AppDataGoogleAppListingsSearchLiveItem>() {
           @Override
           public void write(JsonWriter out, AppDataGoogleAppListingsSearchLiveItem value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AppDataGoogleAppListingsSearchLiveItem read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of AppDataGoogleAppListingsSearchLiveItem given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of AppDataGoogleAppListingsSearchLiveItem
  * @throws IOException if the JSON string is invalid with respect to AppDataGoogleAppListingsSearchLiveItem
  */
  public static AppDataGoogleAppListingsSearchLiveItem fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AppDataGoogleAppListingsSearchLiveItem.class);
  }

 /**
  * Convert an instance of AppDataGoogleAppListingsSearchLiveItem to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

