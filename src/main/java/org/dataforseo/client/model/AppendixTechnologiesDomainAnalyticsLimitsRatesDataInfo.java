/*
 * DataForSEO API documentation
 * DataForSEO API is the starting point on your journey towards building powerful SEO software. With DataForSEO you can get all the data you need to build an efficient application while also saving your time and budget. DataForSEO API is using the REST technology for interchanging data between your application and our service. The data exchange is made through the widely used HTTP protocol, which allows applying our API to almost all programming languages.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.dataforseo.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.dataforseo.client.model.AppendixFunctionInfo;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.dataforseo.client.JSON;

/**
 * AppendixTechnologiesDomainAnalyticsLimitsRatesDataInfo
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-06T20:38:17.939082300+03:00[Europe/Kiev]")
public class AppendixTechnologiesDomainAnalyticsLimitsRatesDataInfo {
  public static final String SERIALIZED_NAME_DOMAIN_TECHNOLOGIES = "domain_technologies";
  @SerializedName(SERIALIZED_NAME_DOMAIN_TECHNOLOGIES)
  private AppendixFunctionInfo domainTechnologies;

  public static final String SERIALIZED_NAME_DOMAINS_BY_TECHNOLOGY = "domains_by_technology";
  @SerializedName(SERIALIZED_NAME_DOMAINS_BY_TECHNOLOGY)
  private AppendixFunctionInfo domainsByTechnology;

  public static final String SERIALIZED_NAME_LANGUAGES = "languages";
  @SerializedName(SERIALIZED_NAME_LANGUAGES)
  private Double languages;

  public static final String SERIALIZED_NAME_LOCATIONS = "locations";
  @SerializedName(SERIALIZED_NAME_LOCATIONS)
  private Double locations;

  public static final String SERIALIZED_NAME_TECHNOLOGIES = "technologies";
  @SerializedName(SERIALIZED_NAME_TECHNOLOGIES)
  private Double technologies;

  public static final String SERIALIZED_NAME_AGGREGATION_TECHNOLOGIES = "aggregation_technologies";
  @SerializedName(SERIALIZED_NAME_AGGREGATION_TECHNOLOGIES)
  private AppendixFunctionInfo aggregationTechnologies;

  public static final String SERIALIZED_NAME_TECHNOLOGIES_SUMMARY = "technologies_summary";
  @SerializedName(SERIALIZED_NAME_TECHNOLOGIES_SUMMARY)
  private AppendixFunctionInfo technologiesSummary;

  public static final String SERIALIZED_NAME_DOMAINS_BY_HTML_TERMS = "domains_by_html_terms";
  @SerializedName(SERIALIZED_NAME_DOMAINS_BY_HTML_TERMS)
  private AppendixFunctionInfo domainsByHtmlTerms;

  public static final String SERIALIZED_NAME_TECHNOLOGY_STATS = "technology_stats";
  @SerializedName(SERIALIZED_NAME_TECHNOLOGY_STATS)
  private AppendixFunctionInfo technologyStats;

  public AppendixTechnologiesDomainAnalyticsLimitsRatesDataInfo() {
  }

  public AppendixTechnologiesDomainAnalyticsLimitsRatesDataInfo domainTechnologies(AppendixFunctionInfo domainTechnologies) {
    this.domainTechnologies = domainTechnologies;
    return this;
  }

   /**
   * Get domainTechnologies
   * @return domainTechnologies
  **/
  @javax.annotation.Nullable
  public AppendixFunctionInfo getDomainTechnologies() {
    return domainTechnologies;
  }

  public void setDomainTechnologies(AppendixFunctionInfo domainTechnologies) {
    this.domainTechnologies = domainTechnologies;
  }


  public AppendixTechnologiesDomainAnalyticsLimitsRatesDataInfo domainsByTechnology(AppendixFunctionInfo domainsByTechnology) {
    this.domainsByTechnology = domainsByTechnology;
    return this;
  }

   /**
   * Get domainsByTechnology
   * @return domainsByTechnology
  **/
  @javax.annotation.Nullable
  public AppendixFunctionInfo getDomainsByTechnology() {
    return domainsByTechnology;
  }

  public void setDomainsByTechnology(AppendixFunctionInfo domainsByTechnology) {
    this.domainsByTechnology = domainsByTechnology;
  }


  public AppendixTechnologiesDomainAnalyticsLimitsRatesDataInfo languages(Double languages) {
    this.languages = languages;
    return this;
  }

   /**
   * Get languages
   * @return languages
  **/
  @javax.annotation.Nullable
  public Double getLanguages() {
    return languages;
  }

  public void setLanguages(Double languages) {
    this.languages = languages;
  }


  public AppendixTechnologiesDomainAnalyticsLimitsRatesDataInfo locations(Double locations) {
    this.locations = locations;
    return this;
  }

   /**
   * Get locations
   * @return locations
  **/
  @javax.annotation.Nullable
  public Double getLocations() {
    return locations;
  }

  public void setLocations(Double locations) {
    this.locations = locations;
  }


  public AppendixTechnologiesDomainAnalyticsLimitsRatesDataInfo technologies(Double technologies) {
    this.technologies = technologies;
    return this;
  }

   /**
   * Get technologies
   * @return technologies
  **/
  @javax.annotation.Nullable
  public Double getTechnologies() {
    return technologies;
  }

  public void setTechnologies(Double technologies) {
    this.technologies = technologies;
  }


  public AppendixTechnologiesDomainAnalyticsLimitsRatesDataInfo aggregationTechnologies(AppendixFunctionInfo aggregationTechnologies) {
    this.aggregationTechnologies = aggregationTechnologies;
    return this;
  }

   /**
   * Get aggregationTechnologies
   * @return aggregationTechnologies
  **/
  @javax.annotation.Nullable
  public AppendixFunctionInfo getAggregationTechnologies() {
    return aggregationTechnologies;
  }

  public void setAggregationTechnologies(AppendixFunctionInfo aggregationTechnologies) {
    this.aggregationTechnologies = aggregationTechnologies;
  }


  public AppendixTechnologiesDomainAnalyticsLimitsRatesDataInfo technologiesSummary(AppendixFunctionInfo technologiesSummary) {
    this.technologiesSummary = technologiesSummary;
    return this;
  }

   /**
   * Get technologiesSummary
   * @return technologiesSummary
  **/
  @javax.annotation.Nullable
  public AppendixFunctionInfo getTechnologiesSummary() {
    return technologiesSummary;
  }

  public void setTechnologiesSummary(AppendixFunctionInfo technologiesSummary) {
    this.technologiesSummary = technologiesSummary;
  }


  public AppendixTechnologiesDomainAnalyticsLimitsRatesDataInfo domainsByHtmlTerms(AppendixFunctionInfo domainsByHtmlTerms) {
    this.domainsByHtmlTerms = domainsByHtmlTerms;
    return this;
  }

   /**
   * Get domainsByHtmlTerms
   * @return domainsByHtmlTerms
  **/
  @javax.annotation.Nullable
  public AppendixFunctionInfo getDomainsByHtmlTerms() {
    return domainsByHtmlTerms;
  }

  public void setDomainsByHtmlTerms(AppendixFunctionInfo domainsByHtmlTerms) {
    this.domainsByHtmlTerms = domainsByHtmlTerms;
  }


  public AppendixTechnologiesDomainAnalyticsLimitsRatesDataInfo technologyStats(AppendixFunctionInfo technologyStats) {
    this.technologyStats = technologyStats;
    return this;
  }

   /**
   * Get technologyStats
   * @return technologyStats
  **/
  @javax.annotation.Nullable
  public AppendixFunctionInfo getTechnologyStats() {
    return technologyStats;
  }

  public void setTechnologyStats(AppendixFunctionInfo technologyStats) {
    this.technologyStats = technologyStats;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AppendixTechnologiesDomainAnalyticsLimitsRatesDataInfo appendixTechnologiesDomainAnalyticsLimitsRatesDataInfo = (AppendixTechnologiesDomainAnalyticsLimitsRatesDataInfo) o;
    return Objects.equals(this.domainTechnologies, appendixTechnologiesDomainAnalyticsLimitsRatesDataInfo.domainTechnologies) &&
        Objects.equals(this.domainsByTechnology, appendixTechnologiesDomainAnalyticsLimitsRatesDataInfo.domainsByTechnology) &&
        Objects.equals(this.languages, appendixTechnologiesDomainAnalyticsLimitsRatesDataInfo.languages) &&
        Objects.equals(this.locations, appendixTechnologiesDomainAnalyticsLimitsRatesDataInfo.locations) &&
        Objects.equals(this.technologies, appendixTechnologiesDomainAnalyticsLimitsRatesDataInfo.technologies) &&
        Objects.equals(this.aggregationTechnologies, appendixTechnologiesDomainAnalyticsLimitsRatesDataInfo.aggregationTechnologies) &&
        Objects.equals(this.technologiesSummary, appendixTechnologiesDomainAnalyticsLimitsRatesDataInfo.technologiesSummary) &&
        Objects.equals(this.domainsByHtmlTerms, appendixTechnologiesDomainAnalyticsLimitsRatesDataInfo.domainsByHtmlTerms) &&
        Objects.equals(this.technologyStats, appendixTechnologiesDomainAnalyticsLimitsRatesDataInfo.technologyStats);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(domainTechnologies, domainsByTechnology, languages, locations, technologies, aggregationTechnologies, technologiesSummary, domainsByHtmlTerms, technologyStats);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AppendixTechnologiesDomainAnalyticsLimitsRatesDataInfo {\n");
    sb.append("    domainTechnologies: ").append(toIndentedString(domainTechnologies)).append("\n");
    sb.append("    domainsByTechnology: ").append(toIndentedString(domainsByTechnology)).append("\n");
    sb.append("    languages: ").append(toIndentedString(languages)).append("\n");
    sb.append("    locations: ").append(toIndentedString(locations)).append("\n");
    sb.append("    technologies: ").append(toIndentedString(technologies)).append("\n");
    sb.append("    aggregationTechnologies: ").append(toIndentedString(aggregationTechnologies)).append("\n");
    sb.append("    technologiesSummary: ").append(toIndentedString(technologiesSummary)).append("\n");
    sb.append("    domainsByHtmlTerms: ").append(toIndentedString(domainsByHtmlTerms)).append("\n");
    sb.append("    technologyStats: ").append(toIndentedString(technologyStats)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("domain_technologies");
    openapiFields.add("domains_by_technology");
    openapiFields.add("languages");
    openapiFields.add("locations");
    openapiFields.add("technologies");
    openapiFields.add("aggregation_technologies");
    openapiFields.add("technologies_summary");
    openapiFields.add("domains_by_html_terms");
    openapiFields.add("technology_stats");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to AppendixTechnologiesDomainAnalyticsLimitsRatesDataInfo
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!AppendixTechnologiesDomainAnalyticsLimitsRatesDataInfo.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AppendixTechnologiesDomainAnalyticsLimitsRatesDataInfo is not found in the empty JSON string", AppendixTechnologiesDomainAnalyticsLimitsRatesDataInfo.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!AppendixTechnologiesDomainAnalyticsLimitsRatesDataInfo.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AppendixTechnologiesDomainAnalyticsLimitsRatesDataInfo` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `domain_technologies`
      if (jsonObj.get("domain_technologies") != null && !jsonObj.get("domain_technologies").isJsonNull()) {
        AppendixFunctionInfo.validateJsonElement(jsonObj.get("domain_technologies"));
      }
      // validate the optional field `domains_by_technology`
      if (jsonObj.get("domains_by_technology") != null && !jsonObj.get("domains_by_technology").isJsonNull()) {
        AppendixFunctionInfo.validateJsonElement(jsonObj.get("domains_by_technology"));
      }
      // validate the optional field `aggregation_technologies`
      if (jsonObj.get("aggregation_technologies") != null && !jsonObj.get("aggregation_technologies").isJsonNull()) {
        AppendixFunctionInfo.validateJsonElement(jsonObj.get("aggregation_technologies"));
      }
      // validate the optional field `technologies_summary`
      if (jsonObj.get("technologies_summary") != null && !jsonObj.get("technologies_summary").isJsonNull()) {
        AppendixFunctionInfo.validateJsonElement(jsonObj.get("technologies_summary"));
      }
      // validate the optional field `domains_by_html_terms`
      if (jsonObj.get("domains_by_html_terms") != null && !jsonObj.get("domains_by_html_terms").isJsonNull()) {
        AppendixFunctionInfo.validateJsonElement(jsonObj.get("domains_by_html_terms"));
      }
      // validate the optional field `technology_stats`
      if (jsonObj.get("technology_stats") != null && !jsonObj.get("technology_stats").isJsonNull()) {
        AppendixFunctionInfo.validateJsonElement(jsonObj.get("technology_stats"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AppendixTechnologiesDomainAnalyticsLimitsRatesDataInfo.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AppendixTechnologiesDomainAnalyticsLimitsRatesDataInfo' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AppendixTechnologiesDomainAnalyticsLimitsRatesDataInfo> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AppendixTechnologiesDomainAnalyticsLimitsRatesDataInfo.class));

       return (TypeAdapter<T>) new TypeAdapter<AppendixTechnologiesDomainAnalyticsLimitsRatesDataInfo>() {
           @Override
           public void write(JsonWriter out, AppendixTechnologiesDomainAnalyticsLimitsRatesDataInfo value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AppendixTechnologiesDomainAnalyticsLimitsRatesDataInfo read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of AppendixTechnologiesDomainAnalyticsLimitsRatesDataInfo given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of AppendixTechnologiesDomainAnalyticsLimitsRatesDataInfo
  * @throws IOException if the JSON string is invalid with respect to AppendixTechnologiesDomainAnalyticsLimitsRatesDataInfo
  */
  public static AppendixTechnologiesDomainAnalyticsLimitsRatesDataInfo fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AppendixTechnologiesDomainAnalyticsLimitsRatesDataInfo.class);
  }

 /**
  * Convert an instance of AppendixTechnologiesDomainAnalyticsLimitsRatesDataInfo to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

