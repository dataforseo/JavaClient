/*
 * DataForSEO API documentation
 * DataForSEO API is the starting point on your journey towards building powerful SEO software. With DataForSEO you can get all the data you need to build an efficient application while also saving your time and budget. DataForSEO API is using the REST technology for interchanging data between your application and our service. The data exchange is made through the widely used HTTP protocol, which allows applying our API to almost all programming languages.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.dataforseo.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.dataforseo.client.model.BaseBusinessDataSerpElementItem;
import org.dataforseo.client.model.BusinessAddressLocationInfo;
import org.dataforseo.client.model.RatingInfo;
import org.dataforseo.client.model.ServiceOfferingsElement;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.dataforseo.client.JSON;

/**
 * YelpSearchOrganicBusinessDataSerpElementItem
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-04-15T10:15:18.753898100+03:00[Europe/Kiev]")
public class YelpSearchOrganicBusinessDataSerpElementItem extends BaseBusinessDataSerpElementItem {
  public static final String SERIALIZED_NAME_RANK_GROUP = "rank_group";
  @SerializedName(SERIALIZED_NAME_RANK_GROUP)
  private Integer rankGroup;

  public static final String SERIALIZED_NAME_RANK_ABSOLUTE = "rank_absolute";
  @SerializedName(SERIALIZED_NAME_RANK_ABSOLUTE)
  private Integer rankAbsolute;

  public static final String SERIALIZED_NAME_YELP_BUSINESS_ID = "yelp_business_id";
  @SerializedName(SERIALIZED_NAME_YELP_BUSINESS_ID)
  private String yelpBusinessId;

  public static final String SERIALIZED_NAME_BUSINESS_URL = "business_url";
  @SerializedName(SERIALIZED_NAME_BUSINESS_URL)
  private String businessUrl;

  public static final String SERIALIZED_NAME_ALIAS = "alias";
  @SerializedName(SERIALIZED_NAME_ALIAS)
  private String alias;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_LOCATION = "location";
  @SerializedName(SERIALIZED_NAME_LOCATION)
  private BusinessAddressLocationInfo location;

  public static final String SERIALIZED_NAME_PRICE_RANGE = "price_range";
  @SerializedName(SERIALIZED_NAME_PRICE_RANGE)
  private Integer priceRange;

  public static final String SERIALIZED_NAME_PHONE = "phone";
  @SerializedName(SERIALIZED_NAME_PHONE)
  private String phone;

  public static final String SERIALIZED_NAME_IS_GUARANTEED = "is_guaranteed";
  @SerializedName(SERIALIZED_NAME_IS_GUARANTEED)
  private Boolean isGuaranteed;

  public static final String SERIALIZED_NAME_RATING = "rating";
  @SerializedName(SERIALIZED_NAME_RATING)
  private RatingInfo rating;

  public static final String SERIALIZED_NAME_CATEGORIES = "categories";
  @SerializedName(SERIALIZED_NAME_CATEGORIES)
  private List<String> categories;

  public static final String SERIALIZED_NAME_PHOTOS = "photos";
  @SerializedName(SERIALIZED_NAME_PHOTOS)
  private List<String> photos;

  public static final String SERIALIZED_NAME_TAGS = "tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private List<String> tags;

  public static final String SERIALIZED_NAME_BUSINESS_HIGHLIGHTS = "business_highlights";
  @SerializedName(SERIALIZED_NAME_BUSINESS_HIGHLIGHTS)
  private List<String> businessHighlights;

  public static final String SERIALIZED_NAME_SERVICE_OFFERINGS = "service_offerings";
  @SerializedName(SERIALIZED_NAME_SERVICE_OFFERINGS)
  private List<ServiceOfferingsElement> serviceOfferings;

  public YelpSearchOrganicBusinessDataSerpElementItem() {
    this.type = this.getClass().getSimpleName();
  }

  public YelpSearchOrganicBusinessDataSerpElementItem rankGroup(Integer rankGroup) {
    this.rankGroup = rankGroup;
    return this;
  }

   /**
   * position within a group of elements with identical type values positions of elements with different type values are omitted from rank_group
   * @return rankGroup
  **/
  @javax.annotation.Nullable
  public Integer getRankGroup() {
    return rankGroup;
  }

  public void setRankGroup(Integer rankGroup) {
    this.rankGroup = rankGroup;
  }


  public YelpSearchOrganicBusinessDataSerpElementItem rankAbsolute(Integer rankAbsolute) {
    this.rankAbsolute = rankAbsolute;
    return this;
  }

   /**
   * absolute rank among all the listed results absolute position among all reviews on the list
   * @return rankAbsolute
  **/
  @javax.annotation.Nullable
  public Integer getRankAbsolute() {
    return rankAbsolute;
  }

  public void setRankAbsolute(Integer rankAbsolute) {
    this.rankAbsolute = rankAbsolute;
  }


  public YelpSearchOrganicBusinessDataSerpElementItem yelpBusinessId(String yelpBusinessId) {
    this.yelpBusinessId = yelpBusinessId;
    return this;
  }

   /**
   * the unique identifier of a business identity on Yelp example: 2sWZ17vpEF2vuM_7ic721w
   * @return yelpBusinessId
  **/
  @javax.annotation.Nullable
  public String getYelpBusinessId() {
    return yelpBusinessId;
  }

  public void setYelpBusinessId(String yelpBusinessId) {
    this.yelpBusinessId = yelpBusinessId;
  }


  public YelpSearchOrganicBusinessDataSerpElementItem businessUrl(String businessUrl) {
    this.businessUrl = businessUrl;
    return this;
  }

   /**
   * link to the Yelp profile of the business entity
   * @return businessUrl
  **/
  @javax.annotation.Nullable
  public String getBusinessUrl() {
    return businessUrl;
  }

  public void setBusinessUrl(String businessUrl) {
    this.businessUrl = businessUrl;
  }


  public YelpSearchOrganicBusinessDataSerpElementItem alias(String alias) {
    this.alias = alias;
    return this;
  }

   /**
   * Yelp business identifier displayed only if the request contained the corresponding field
   * @return alias
  **/
  @javax.annotation.Nullable
  public String getAlias() {
    return alias;
  }

  public void setAlias(String alias) {
    this.alias = alias;
  }


  public YelpSearchOrganicBusinessDataSerpElementItem name(String name) {
    this.name = name;
    return this;
  }

   /**
   * name of the business entity
   * @return name
  **/
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public YelpSearchOrganicBusinessDataSerpElementItem description(String description) {
    this.description = description;
    return this;
  }

   /**
   * description containing the featured review
   * @return description
  **/
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public YelpSearchOrganicBusinessDataSerpElementItem location(BusinessAddressLocationInfo location) {
    this.location = location;
    return this;
  }

   /**
   * Get location
   * @return location
  **/
  @javax.annotation.Nullable
  public BusinessAddressLocationInfo getLocation() {
    return location;
  }

  public void setLocation(BusinessAddressLocationInfo location) {
    this.location = location;
  }


  public YelpSearchOrganicBusinessDataSerpElementItem priceRange(Integer priceRange) {
    this.priceRange = priceRange;
    return this;
  }

   /**
   * price range of the business entity indicates the number of currency signs next to the business listing corresponding to its price score
   * @return priceRange
  **/
  @javax.annotation.Nullable
  public Integer getPriceRange() {
    return priceRange;
  }

  public void setPriceRange(Integer priceRange) {
    this.priceRange = priceRange;
  }


  public YelpSearchOrganicBusinessDataSerpElementItem phone(String phone) {
    this.phone = phone;
    return this;
  }

   /**
   * contact phone number example: (804) 342-1981
   * @return phone
  **/
  @javax.annotation.Nullable
  public String getPhone() {
    return phone;
  }

  public void setPhone(String phone) {
    this.phone = phone;
  }


  public YelpSearchOrganicBusinessDataSerpElementItem isGuaranteed(Boolean isGuaranteed) {
    this.isGuaranteed = isGuaranteed;
    return this;
  }

   /**
   * Yelp guaranteed label
   * @return isGuaranteed
  **/
  @javax.annotation.Nullable
  public Boolean getIsGuaranteed() {
    return isGuaranteed;
  }

  public void setIsGuaranteed(Boolean isGuaranteed) {
    this.isGuaranteed = isGuaranteed;
  }


  public YelpSearchOrganicBusinessDataSerpElementItem rating(RatingInfo rating) {
    this.rating = rating;
    return this;
  }

   /**
   * Get rating
   * @return rating
  **/
  @javax.annotation.Nullable
  public RatingInfo getRating() {
    return rating;
  }

  public void setRating(RatingInfo rating) {
    this.rating = rating;
  }


  public YelpSearchOrganicBusinessDataSerpElementItem categories(List<String> categories) {
    this.categories = categories;
    return this;
  }

  public YelpSearchOrganicBusinessDataSerpElementItem addCategoriesItem(String categoriesItem) {
    if (this.categories == null) {
      this.categories = new ArrayList<>();
    }
    this.categories.add(categoriesItem);
    return this;
  }

   /**
   * categories related to the business entity
   * @return categories
  **/
  @javax.annotation.Nullable
  public List<String> getCategories() {
    return categories;
  }

  public void setCategories(List<String> categories) {
    this.categories = categories;
  }


  public YelpSearchOrganicBusinessDataSerpElementItem photos(List<String> photos) {
    this.photos = photos;
    return this;
  }

  public YelpSearchOrganicBusinessDataSerpElementItem addPhotosItem(String photosItem) {
    if (this.photos == null) {
      this.photos = new ArrayList<>();
    }
    this.photos.add(photosItem);
    return this;
  }

   /**
   * links to photos appearing in the result
   * @return photos
  **/
  @javax.annotation.Nullable
  public List<String> getPhotos() {
    return photos;
  }

  public void setPhotos(List<String> photos) {
    this.photos = photos;
  }


  public YelpSearchOrganicBusinessDataSerpElementItem tags(List<String> tags) {
    this.tags = tags;
    return this;
  }

  public YelpSearchOrganicBusinessDataSerpElementItem addTagsItem(String tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<>();
    }
    this.tags.add(tagsItem);
    return this;
  }

   /**
   * tags generated by Yelp example: \&quot;New on Yelp\&quot;
   * @return tags
  **/
  @javax.annotation.Nullable
  public List<String> getTags() {
    return tags;
  }

  public void setTags(List<String> tags) {
    this.tags = tags;
  }


  public YelpSearchOrganicBusinessDataSerpElementItem businessHighlights(List<String> businessHighlights) {
    this.businessHighlights = businessHighlights;
    return this;
  }

  public YelpSearchOrganicBusinessDataSerpElementItem addBusinessHighlightsItem(String businessHighlightsItem) {
    if (this.businessHighlights == null) {
      this.businessHighlights = new ArrayList<>();
    }
    this.businessHighlights.add(businessHighlightsItem);
    return this;
  }

   /**
   * highlights describing business offerings example: \&quot;casual_dining\&quot;
   * @return businessHighlights
  **/
  @javax.annotation.Nullable
  public List<String> getBusinessHighlights() {
    return businessHighlights;
  }

  public void setBusinessHighlights(List<String> businessHighlights) {
    this.businessHighlights = businessHighlights;
  }


  public YelpSearchOrganicBusinessDataSerpElementItem serviceOfferings(List<ServiceOfferingsElement> serviceOfferings) {
    this.serviceOfferings = serviceOfferings;
    return this;
  }

  public YelpSearchOrganicBusinessDataSerpElementItem addServiceOfferingsItem(ServiceOfferingsElement serviceOfferingsItem) {
    if (this.serviceOfferings == null) {
      this.serviceOfferings = new ArrayList<>();
    }
    this.serviceOfferings.add(serviceOfferingsItem);
    return this;
  }

   /**
   * tags corresponding to the availability of certain business offerings
   * @return serviceOfferings
  **/
  @javax.annotation.Nullable
  public List<ServiceOfferingsElement> getServiceOfferings() {
    return serviceOfferings;
  }

  public void setServiceOfferings(List<ServiceOfferingsElement> serviceOfferings) {
    this.serviceOfferings = serviceOfferings;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    YelpSearchOrganicBusinessDataSerpElementItem yelpSearchOrganicBusinessDataSerpElementItem = (YelpSearchOrganicBusinessDataSerpElementItem) o;
    return Objects.equals(this.rankGroup, yelpSearchOrganicBusinessDataSerpElementItem.rankGroup) &&
        Objects.equals(this.rankAbsolute, yelpSearchOrganicBusinessDataSerpElementItem.rankAbsolute) &&
        Objects.equals(this.yelpBusinessId, yelpSearchOrganicBusinessDataSerpElementItem.yelpBusinessId) &&
        Objects.equals(this.businessUrl, yelpSearchOrganicBusinessDataSerpElementItem.businessUrl) &&
        Objects.equals(this.alias, yelpSearchOrganicBusinessDataSerpElementItem.alias) &&
        Objects.equals(this.name, yelpSearchOrganicBusinessDataSerpElementItem.name) &&
        Objects.equals(this.description, yelpSearchOrganicBusinessDataSerpElementItem.description) &&
        Objects.equals(this.location, yelpSearchOrganicBusinessDataSerpElementItem.location) &&
        Objects.equals(this.priceRange, yelpSearchOrganicBusinessDataSerpElementItem.priceRange) &&
        Objects.equals(this.phone, yelpSearchOrganicBusinessDataSerpElementItem.phone) &&
        Objects.equals(this.isGuaranteed, yelpSearchOrganicBusinessDataSerpElementItem.isGuaranteed) &&
        Objects.equals(this.rating, yelpSearchOrganicBusinessDataSerpElementItem.rating) &&
        Objects.equals(this.categories, yelpSearchOrganicBusinessDataSerpElementItem.categories) &&
        Objects.equals(this.photos, yelpSearchOrganicBusinessDataSerpElementItem.photos) &&
        Objects.equals(this.tags, yelpSearchOrganicBusinessDataSerpElementItem.tags) &&
        Objects.equals(this.businessHighlights, yelpSearchOrganicBusinessDataSerpElementItem.businessHighlights) &&
        Objects.equals(this.serviceOfferings, yelpSearchOrganicBusinessDataSerpElementItem.serviceOfferings) &&
        super.equals(o);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(rankGroup, rankAbsolute, yelpBusinessId, businessUrl, alias, name, description, location, priceRange, phone, isGuaranteed, rating, categories, photos, tags, businessHighlights, serviceOfferings, super.hashCode());
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class YelpSearchOrganicBusinessDataSerpElementItem {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    rankGroup: ").append(toIndentedString(rankGroup)).append("\n");
    sb.append("    rankAbsolute: ").append(toIndentedString(rankAbsolute)).append("\n");
    sb.append("    yelpBusinessId: ").append(toIndentedString(yelpBusinessId)).append("\n");
    sb.append("    businessUrl: ").append(toIndentedString(businessUrl)).append("\n");
    sb.append("    alias: ").append(toIndentedString(alias)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    location: ").append(toIndentedString(location)).append("\n");
    sb.append("    priceRange: ").append(toIndentedString(priceRange)).append("\n");
    sb.append("    phone: ").append(toIndentedString(phone)).append("\n");
    sb.append("    isGuaranteed: ").append(toIndentedString(isGuaranteed)).append("\n");
    sb.append("    rating: ").append(toIndentedString(rating)).append("\n");
    sb.append("    categories: ").append(toIndentedString(categories)).append("\n");
    sb.append("    photos: ").append(toIndentedString(photos)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    businessHighlights: ").append(toIndentedString(businessHighlights)).append("\n");
    sb.append("    serviceOfferings: ").append(toIndentedString(serviceOfferings)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("type");
    openapiFields.add("rank_group");
    openapiFields.add("rank_absolute");
    openapiFields.add("yelp_business_id");
    openapiFields.add("business_url");
    openapiFields.add("alias");
    openapiFields.add("name");
    openapiFields.add("description");
    openapiFields.add("location");
    openapiFields.add("price_range");
    openapiFields.add("phone");
    openapiFields.add("is_guaranteed");
    openapiFields.add("rating");
    openapiFields.add("categories");
    openapiFields.add("photos");
    openapiFields.add("tags");
    openapiFields.add("business_highlights");
    openapiFields.add("service_offerings");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to YelpSearchOrganicBusinessDataSerpElementItem
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!YelpSearchOrganicBusinessDataSerpElementItem.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in YelpSearchOrganicBusinessDataSerpElementItem is not found in the empty JSON string", YelpSearchOrganicBusinessDataSerpElementItem.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!YelpSearchOrganicBusinessDataSerpElementItem.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `YelpSearchOrganicBusinessDataSerpElementItem` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!YelpSearchOrganicBusinessDataSerpElementItem.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'YelpSearchOrganicBusinessDataSerpElementItem' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<YelpSearchOrganicBusinessDataSerpElementItem> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(YelpSearchOrganicBusinessDataSerpElementItem.class));

       return (TypeAdapter<T>) new TypeAdapter<YelpSearchOrganicBusinessDataSerpElementItem>() {
           @Override
           public void write(JsonWriter out, YelpSearchOrganicBusinessDataSerpElementItem value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public YelpSearchOrganicBusinessDataSerpElementItem read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of YelpSearchOrganicBusinessDataSerpElementItem given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of YelpSearchOrganicBusinessDataSerpElementItem
  * @throws IOException if the JSON string is invalid with respect to YelpSearchOrganicBusinessDataSerpElementItem
  */
  public static YelpSearchOrganicBusinessDataSerpElementItem fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, YelpSearchOrganicBusinessDataSerpElementItem.class);
  }

 /**
  * Convert an instance of YelpSearchOrganicBusinessDataSerpElementItem to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

