/*
 * DataForSEO API documentation
 * DataForSEO API is the starting point on your journey towards building powerful SEO software. With DataForSEO you can get all the data you need to build an efficient application while also saving your time and budget. DataForSEO API is using the REST technology for interchanging data between your application and our service. The data exchange is made through the widely used HTTP protocol, which allows applying our API to almost all programming languages.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.dataforseo.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.dataforseo.client.JSON;

/**
 * ContentGenerationTextSummaryLiveResultInfo
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-06-02T18:32:56.856102800+03:00[Europe/Kiev]")
public class ContentGenerationTextSummaryLiveResultInfo {
  public static final String SERIALIZED_NAME_SENTENCES = "sentences";
  @SerializedName(SERIALIZED_NAME_SENTENCES)
  private Integer sentences;

  public static final String SERIALIZED_NAME_PARAGRAPHS = "paragraphs";
  @SerializedName(SERIALIZED_NAME_PARAGRAPHS)
  private Integer paragraphs;

  public static final String SERIALIZED_NAME_WORDS = "words";
  @SerializedName(SERIALIZED_NAME_WORDS)
  private Integer words;

  public static final String SERIALIZED_NAME_CHARACTERS_WITHOUT_SPACES = "characters_without_spaces";
  @SerializedName(SERIALIZED_NAME_CHARACTERS_WITHOUT_SPACES)
  private Integer charactersWithoutSpaces;

  public static final String SERIALIZED_NAME_CHARACTERS_WITH_SPACES = "characters_with_spaces";
  @SerializedName(SERIALIZED_NAME_CHARACTERS_WITH_SPACES)
  private Integer charactersWithSpaces;

  public static final String SERIALIZED_NAME_WORDS_PER_SENTENCE = "words_per_sentence";
  @SerializedName(SERIALIZED_NAME_WORDS_PER_SENTENCE)
  private Float wordsPerSentence;

  public static final String SERIALIZED_NAME_CHARACTERS_PER_WORD = "characters_per_word";
  @SerializedName(SERIALIZED_NAME_CHARACTERS_PER_WORD)
  private Float charactersPerWord;

  public static final String SERIALIZED_NAME_VOCABULARY_DENSITY = "vocabulary_density";
  @SerializedName(SERIALIZED_NAME_VOCABULARY_DENSITY)
  private Float vocabularyDensity;

  public static final String SERIALIZED_NAME_KEYWORD_DENSITY = "keyword_density";
  @SerializedName(SERIALIZED_NAME_KEYWORD_DENSITY)
  private Map<String, Long> keywordDensity;

  public static final String SERIALIZED_NAME_AUTOMATED_READABILITY_INDEX = "automated_readability_index";
  @SerializedName(SERIALIZED_NAME_AUTOMATED_READABILITY_INDEX)
  private Float automatedReadabilityIndex;

  public static final String SERIALIZED_NAME_COLEMAN_LIAU_INDEX = "coleman_liau_index";
  @SerializedName(SERIALIZED_NAME_COLEMAN_LIAU_INDEX)
  private Float colemanLiauIndex;

  public static final String SERIALIZED_NAME_FLESCH_KINCAID_GRADE_LEVEL = "flesch_kincaid_grade_level";
  @SerializedName(SERIALIZED_NAME_FLESCH_KINCAID_GRADE_LEVEL)
  private Float fleschKincaidGradeLevel;

  public static final String SERIALIZED_NAME_SMOG_READABILITY_INDEX = "smog_readability_index";
  @SerializedName(SERIALIZED_NAME_SMOG_READABILITY_INDEX)
  private Float smogReadabilityIndex;

  public static final String SERIALIZED_NAME_SPELLING_ERRORS = "spelling_errors";
  @SerializedName(SERIALIZED_NAME_SPELLING_ERRORS)
  private Integer spellingErrors;

  public static final String SERIALIZED_NAME_GRAMMAR_ERRORS = "grammar_errors";
  @SerializedName(SERIALIZED_NAME_GRAMMAR_ERRORS)
  private Integer grammarErrors;

  public ContentGenerationTextSummaryLiveResultInfo() {
  }

  public ContentGenerationTextSummaryLiveResultInfo sentences(Integer sentences) {
    this.sentences = sentences;
    return this;
  }

   /**
   * number of sentences found in the target text
   * @return sentences
  **/
  @javax.annotation.Nullable
  public Integer getSentences() {
    return sentences;
  }

  public void setSentences(Integer sentences) {
    this.sentences = sentences;
  }


  public ContentGenerationTextSummaryLiveResultInfo paragraphs(Integer paragraphs) {
    this.paragraphs = paragraphs;
    return this;
  }

   /**
   * number of paragraphs found in the target text
   * @return paragraphs
  **/
  @javax.annotation.Nullable
  public Integer getParagraphs() {
    return paragraphs;
  }

  public void setParagraphs(Integer paragraphs) {
    this.paragraphs = paragraphs;
  }


  public ContentGenerationTextSummaryLiveResultInfo words(Integer words) {
    this.words = words;
    return this;
  }

   /**
   * number of words found in the target text
   * @return words
  **/
  @javax.annotation.Nullable
  public Integer getWords() {
    return words;
  }

  public void setWords(Integer words) {
    this.words = words;
  }


  public ContentGenerationTextSummaryLiveResultInfo charactersWithoutSpaces(Integer charactersWithoutSpaces) {
    this.charactersWithoutSpaces = charactersWithoutSpaces;
    return this;
  }

   /**
   * number of characters without spaces found in the target text
   * @return charactersWithoutSpaces
  **/
  @javax.annotation.Nullable
  public Integer getCharactersWithoutSpaces() {
    return charactersWithoutSpaces;
  }

  public void setCharactersWithoutSpaces(Integer charactersWithoutSpaces) {
    this.charactersWithoutSpaces = charactersWithoutSpaces;
  }


  public ContentGenerationTextSummaryLiveResultInfo charactersWithSpaces(Integer charactersWithSpaces) {
    this.charactersWithSpaces = charactersWithSpaces;
    return this;
  }

   /**
   * number of characters with spaces found in the target text
   * @return charactersWithSpaces
  **/
  @javax.annotation.Nullable
  public Integer getCharactersWithSpaces() {
    return charactersWithSpaces;
  }

  public void setCharactersWithSpaces(Integer charactersWithSpaces) {
    this.charactersWithSpaces = charactersWithSpaces;
  }


  public ContentGenerationTextSummaryLiveResultInfo wordsPerSentence(Float wordsPerSentence) {
    this.wordsPerSentence = wordsPerSentence;
    return this;
  }

   /**
   * average number of words per sentence in the target text
   * @return wordsPerSentence
  **/
  @javax.annotation.Nullable
  public Float getWordsPerSentence() {
    return wordsPerSentence;
  }

  public void setWordsPerSentence(Float wordsPerSentence) {
    this.wordsPerSentence = wordsPerSentence;
  }


  public ContentGenerationTextSummaryLiveResultInfo charactersPerWord(Float charactersPerWord) {
    this.charactersPerWord = charactersPerWord;
    return this;
  }

   /**
   * average number of characters per word in the target text
   * @return charactersPerWord
  **/
  @javax.annotation.Nullable
  public Float getCharactersPerWord() {
    return charactersPerWord;
  }

  public void setCharactersPerWord(Float charactersPerWord) {
    this.charactersPerWord = charactersPerWord;
  }


  public ContentGenerationTextSummaryLiveResultInfo vocabularyDensity(Float vocabularyDensity) {
    this.vocabularyDensity = vocabularyDensity;
    return this;
  }

   /**
   * vocabulary density of the target text
   * @return vocabularyDensity
  **/
  @javax.annotation.Nullable
  public Float getVocabularyDensity() {
    return vocabularyDensity;
  }

  public void setVocabularyDensity(Float vocabularyDensity) {
    this.vocabularyDensity = vocabularyDensity;
  }


  public ContentGenerationTextSummaryLiveResultInfo keywordDensity(Map<String, Long> keywordDensity) {
    this.keywordDensity = keywordDensity;
    return this;
  }

  public ContentGenerationTextSummaryLiveResultInfo putKeywordDensityItem(String key, Long keywordDensityItem) {
    if (this.keywordDensity == null) {
      this.keywordDensity = new HashMap<>();
    }
    this.keywordDensity.put(key, keywordDensityItem);
    return this;
  }

   /**
   * keyword density of the target text contains most common words and their count
   * @return keywordDensity
  **/
  @javax.annotation.Nullable
  public Map<String, Long> getKeywordDensity() {
    return keywordDensity;
  }

  public void setKeywordDensity(Map<String, Long> keywordDensity) {
    this.keywordDensity = keywordDensity;
  }


  public ContentGenerationTextSummaryLiveResultInfo automatedReadabilityIndex(Float automatedReadabilityIndex) {
    this.automatedReadabilityIndex = automatedReadabilityIndex;
    return this;
  }

   /**
   * Automated Readability Index
   * @return automatedReadabilityIndex
  **/
  @javax.annotation.Nullable
  public Float getAutomatedReadabilityIndex() {
    return automatedReadabilityIndex;
  }

  public void setAutomatedReadabilityIndex(Float automatedReadabilityIndex) {
    this.automatedReadabilityIndex = automatedReadabilityIndex;
  }


  public ContentGenerationTextSummaryLiveResultInfo colemanLiauIndex(Float colemanLiauIndex) {
    this.colemanLiauIndex = colemanLiauIndex;
    return this;
  }

   /**
   * Coleman–Liau Index
   * @return colemanLiauIndex
  **/
  @javax.annotation.Nullable
  public Float getColemanLiauIndex() {
    return colemanLiauIndex;
  }

  public void setColemanLiauIndex(Float colemanLiauIndex) {
    this.colemanLiauIndex = colemanLiauIndex;
  }


  public ContentGenerationTextSummaryLiveResultInfo fleschKincaidGradeLevel(Float fleschKincaidGradeLevel) {
    this.fleschKincaidGradeLevel = fleschKincaidGradeLevel;
    return this;
  }

   /**
   * Flesch–Kincaid Readability Index
   * @return fleschKincaidGradeLevel
  **/
  @javax.annotation.Nullable
  public Float getFleschKincaidGradeLevel() {
    return fleschKincaidGradeLevel;
  }

  public void setFleschKincaidGradeLevel(Float fleschKincaidGradeLevel) {
    this.fleschKincaidGradeLevel = fleschKincaidGradeLevel;
  }


  public ContentGenerationTextSummaryLiveResultInfo smogReadabilityIndex(Float smogReadabilityIndex) {
    this.smogReadabilityIndex = smogReadabilityIndex;
    return this;
  }

   /**
   * SMOG Readability Index
   * @return smogReadabilityIndex
  **/
  @javax.annotation.Nullable
  public Float getSmogReadabilityIndex() {
    return smogReadabilityIndex;
  }

  public void setSmogReadabilityIndex(Float smogReadabilityIndex) {
    this.smogReadabilityIndex = smogReadabilityIndex;
  }


  public ContentGenerationTextSummaryLiveResultInfo spellingErrors(Integer spellingErrors) {
    this.spellingErrors = spellingErrors;
    return this;
  }

   /**
   * number of spelling errors found in the target text
   * @return spellingErrors
  **/
  @javax.annotation.Nullable
  public Integer getSpellingErrors() {
    return spellingErrors;
  }

  public void setSpellingErrors(Integer spellingErrors) {
    this.spellingErrors = spellingErrors;
  }


  public ContentGenerationTextSummaryLiveResultInfo grammarErrors(Integer grammarErrors) {
    this.grammarErrors = grammarErrors;
    return this;
  }

   /**
   * number of grammar errors found in the target text
   * @return grammarErrors
  **/
  @javax.annotation.Nullable
  public Integer getGrammarErrors() {
    return grammarErrors;
  }

  public void setGrammarErrors(Integer grammarErrors) {
    this.grammarErrors = grammarErrors;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ContentGenerationTextSummaryLiveResultInfo contentGenerationTextSummaryLiveResultInfo = (ContentGenerationTextSummaryLiveResultInfo) o;
    return Objects.equals(this.sentences, contentGenerationTextSummaryLiveResultInfo.sentences) &&
        Objects.equals(this.paragraphs, contentGenerationTextSummaryLiveResultInfo.paragraphs) &&
        Objects.equals(this.words, contentGenerationTextSummaryLiveResultInfo.words) &&
        Objects.equals(this.charactersWithoutSpaces, contentGenerationTextSummaryLiveResultInfo.charactersWithoutSpaces) &&
        Objects.equals(this.charactersWithSpaces, contentGenerationTextSummaryLiveResultInfo.charactersWithSpaces) &&
        Objects.equals(this.wordsPerSentence, contentGenerationTextSummaryLiveResultInfo.wordsPerSentence) &&
        Objects.equals(this.charactersPerWord, contentGenerationTextSummaryLiveResultInfo.charactersPerWord) &&
        Objects.equals(this.vocabularyDensity, contentGenerationTextSummaryLiveResultInfo.vocabularyDensity) &&
        Objects.equals(this.keywordDensity, contentGenerationTextSummaryLiveResultInfo.keywordDensity) &&
        Objects.equals(this.automatedReadabilityIndex, contentGenerationTextSummaryLiveResultInfo.automatedReadabilityIndex) &&
        Objects.equals(this.colemanLiauIndex, contentGenerationTextSummaryLiveResultInfo.colemanLiauIndex) &&
        Objects.equals(this.fleschKincaidGradeLevel, contentGenerationTextSummaryLiveResultInfo.fleschKincaidGradeLevel) &&
        Objects.equals(this.smogReadabilityIndex, contentGenerationTextSummaryLiveResultInfo.smogReadabilityIndex) &&
        Objects.equals(this.spellingErrors, contentGenerationTextSummaryLiveResultInfo.spellingErrors) &&
        Objects.equals(this.grammarErrors, contentGenerationTextSummaryLiveResultInfo.grammarErrors);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(sentences, paragraphs, words, charactersWithoutSpaces, charactersWithSpaces, wordsPerSentence, charactersPerWord, vocabularyDensity, keywordDensity, automatedReadabilityIndex, colemanLiauIndex, fleschKincaidGradeLevel, smogReadabilityIndex, spellingErrors, grammarErrors);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ContentGenerationTextSummaryLiveResultInfo {\n");
    sb.append("    sentences: ").append(toIndentedString(sentences)).append("\n");
    sb.append("    paragraphs: ").append(toIndentedString(paragraphs)).append("\n");
    sb.append("    words: ").append(toIndentedString(words)).append("\n");
    sb.append("    charactersWithoutSpaces: ").append(toIndentedString(charactersWithoutSpaces)).append("\n");
    sb.append("    charactersWithSpaces: ").append(toIndentedString(charactersWithSpaces)).append("\n");
    sb.append("    wordsPerSentence: ").append(toIndentedString(wordsPerSentence)).append("\n");
    sb.append("    charactersPerWord: ").append(toIndentedString(charactersPerWord)).append("\n");
    sb.append("    vocabularyDensity: ").append(toIndentedString(vocabularyDensity)).append("\n");
    sb.append("    keywordDensity: ").append(toIndentedString(keywordDensity)).append("\n");
    sb.append("    automatedReadabilityIndex: ").append(toIndentedString(automatedReadabilityIndex)).append("\n");
    sb.append("    colemanLiauIndex: ").append(toIndentedString(colemanLiauIndex)).append("\n");
    sb.append("    fleschKincaidGradeLevel: ").append(toIndentedString(fleschKincaidGradeLevel)).append("\n");
    sb.append("    smogReadabilityIndex: ").append(toIndentedString(smogReadabilityIndex)).append("\n");
    sb.append("    spellingErrors: ").append(toIndentedString(spellingErrors)).append("\n");
    sb.append("    grammarErrors: ").append(toIndentedString(grammarErrors)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("sentences");
    openapiFields.add("paragraphs");
    openapiFields.add("words");
    openapiFields.add("characters_without_spaces");
    openapiFields.add("characters_with_spaces");
    openapiFields.add("words_per_sentence");
    openapiFields.add("characters_per_word");
    openapiFields.add("vocabulary_density");
    openapiFields.add("keyword_density");
    openapiFields.add("automated_readability_index");
    openapiFields.add("coleman_liau_index");
    openapiFields.add("flesch_kincaid_grade_level");
    openapiFields.add("smog_readability_index");
    openapiFields.add("spelling_errors");
    openapiFields.add("grammar_errors");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to ContentGenerationTextSummaryLiveResultInfo
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ContentGenerationTextSummaryLiveResultInfo.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ContentGenerationTextSummaryLiveResultInfo is not found in the empty JSON string", ContentGenerationTextSummaryLiveResultInfo.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ContentGenerationTextSummaryLiveResultInfo.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ContentGenerationTextSummaryLiveResultInfo` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ContentGenerationTextSummaryLiveResultInfo.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ContentGenerationTextSummaryLiveResultInfo' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ContentGenerationTextSummaryLiveResultInfo> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ContentGenerationTextSummaryLiveResultInfo.class));

       return (TypeAdapter<T>) new TypeAdapter<ContentGenerationTextSummaryLiveResultInfo>() {
           @Override
           public void write(JsonWriter out, ContentGenerationTextSummaryLiveResultInfo value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ContentGenerationTextSummaryLiveResultInfo read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of ContentGenerationTextSummaryLiveResultInfo given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of ContentGenerationTextSummaryLiveResultInfo
  * @throws IOException if the JSON string is invalid with respect to ContentGenerationTextSummaryLiveResultInfo
  */
  public static ContentGenerationTextSummaryLiveResultInfo fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ContentGenerationTextSummaryLiveResultInfo.class);
  }

 /**
  * Convert an instance of ContentGenerationTextSummaryLiveResultInfo to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

