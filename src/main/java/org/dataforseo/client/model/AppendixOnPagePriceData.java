/*
 * DataForSEO API documentation
 * DataForSEO API is the starting point on your journey towards building powerful SEO software. With DataForSEO you can get all the data you need to build an efficient application while also saving your time and budget. DataForSEO API is using the REST technology for interchanging data between your application and our service. The data exchange is made through the widely used HTTP protocol, which allows applying our API to almost all programming languages.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.dataforseo.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.dataforseo.client.model.AppendixTaskKeywordsDataPriceDataInfo;
import org.dataforseo.client.model.AppendixsGoogleBusinessDataPriceDataInfo;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.dataforseo.client.JSON;

/**
 * AppendixOnPagePriceData
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-06-02T18:32:56.856102800+03:00[Europe/Kiev]")
public class AppendixOnPagePriceData {
  public static final String SERIALIZED_NAME_ERRORS = "errors";
  @SerializedName(SERIALIZED_NAME_ERRORS)
  private AppendixTaskKeywordsDataPriceDataInfo errors;

  public static final String SERIALIZED_NAME_LIGHTHOUSE = "lighthouse";
  @SerializedName(SERIALIZED_NAME_LIGHTHOUSE)
  private AppendixsGoogleBusinessDataPriceDataInfo lighthouse;

  public static final String SERIALIZED_NAME_CONTENT_PARSING = "content_parsing";
  @SerializedName(SERIALIZED_NAME_CONTENT_PARSING)
  private AppendixTaskKeywordsDataPriceDataInfo contentParsing;

  public static final String SERIALIZED_NAME_CONTENT_PARSING_LIVE = "content_parsing_live";
  @SerializedName(SERIALIZED_NAME_CONTENT_PARSING_LIVE)
  private AppendixTaskKeywordsDataPriceDataInfo contentParsingLive;

  public static final String SERIALIZED_NAME_DUPLICATE_CONTENT = "duplicate_content";
  @SerializedName(SERIALIZED_NAME_DUPLICATE_CONTENT)
  private AppendixTaskKeywordsDataPriceDataInfo duplicateContent;

  public static final String SERIALIZED_NAME_DUPLICATE_TAGS = "duplicate_tags";
  @SerializedName(SERIALIZED_NAME_DUPLICATE_TAGS)
  private AppendixTaskKeywordsDataPriceDataInfo duplicateTags;

  public static final String SERIALIZED_NAME_INSTANT_PAGES = "instant_pages";
  @SerializedName(SERIALIZED_NAME_INSTANT_PAGES)
  private AppendixTaskKeywordsDataPriceDataInfo instantPages;

  public static final String SERIALIZED_NAME_KEYWORD_DENSITY = "keyword_density";
  @SerializedName(SERIALIZED_NAME_KEYWORD_DENSITY)
  private AppendixTaskKeywordsDataPriceDataInfo keywordDensity;

  public static final String SERIALIZED_NAME_LINKS = "links";
  @SerializedName(SERIALIZED_NAME_LINKS)
  private AppendixTaskKeywordsDataPriceDataInfo links;

  public static final String SERIALIZED_NAME_NON_INDEXABLE = "non_indexable";
  @SerializedName(SERIALIZED_NAME_NON_INDEXABLE)
  private AppendixTaskKeywordsDataPriceDataInfo nonIndexable;

  public static final String SERIALIZED_NAME_PAGES = "pages";
  @SerializedName(SERIALIZED_NAME_PAGES)
  private AppendixTaskKeywordsDataPriceDataInfo pages;

  public static final String SERIALIZED_NAME_PAGES_BY_RESOURCE = "pages_by_resource";
  @SerializedName(SERIALIZED_NAME_PAGES_BY_RESOURCE)
  private AppendixTaskKeywordsDataPriceDataInfo pagesByResource;

  public static final String SERIALIZED_NAME_PAGE_SCREENSHOT = "page_screenshot";
  @SerializedName(SERIALIZED_NAME_PAGE_SCREENSHOT)
  private AppendixTaskKeywordsDataPriceDataInfo pageScreenshot;

  public static final String SERIALIZED_NAME_RAW_HTML = "raw_html";
  @SerializedName(SERIALIZED_NAME_RAW_HTML)
  private AppendixTaskKeywordsDataPriceDataInfo rawHtml;

  public static final String SERIALIZED_NAME_REDIRECT_CHAINS = "redirect_chains";
  @SerializedName(SERIALIZED_NAME_REDIRECT_CHAINS)
  private AppendixTaskKeywordsDataPriceDataInfo redirectChains;

  public static final String SERIALIZED_NAME_RESOURCES = "resources";
  @SerializedName(SERIALIZED_NAME_RESOURCES)
  private AppendixTaskKeywordsDataPriceDataInfo resources;

  public static final String SERIALIZED_NAME_SUMMARY = "summary";
  @SerializedName(SERIALIZED_NAME_SUMMARY)
  private AppendixTaskKeywordsDataPriceDataInfo summary;

  public static final String SERIALIZED_NAME_TASK_POST = "task_post";
  @SerializedName(SERIALIZED_NAME_TASK_POST)
  private AppendixTaskKeywordsDataPriceDataInfo taskPost;

  public static final String SERIALIZED_NAME_TASKS_READY = "tasks_ready";
  @SerializedName(SERIALIZED_NAME_TASKS_READY)
  private AppendixTaskKeywordsDataPriceDataInfo tasksReady;

  public static final String SERIALIZED_NAME_WATERFALL = "waterfall";
  @SerializedName(SERIALIZED_NAME_WATERFALL)
  private AppendixTaskKeywordsDataPriceDataInfo waterfall;

  public AppendixOnPagePriceData() {
  }

  public AppendixOnPagePriceData errors(AppendixTaskKeywordsDataPriceDataInfo errors) {
    this.errors = errors;
    return this;
  }

   /**
   * Get errors
   * @return errors
  **/
  @javax.annotation.Nullable
  public AppendixTaskKeywordsDataPriceDataInfo getErrors() {
    return errors;
  }

  public void setErrors(AppendixTaskKeywordsDataPriceDataInfo errors) {
    this.errors = errors;
  }


  public AppendixOnPagePriceData lighthouse(AppendixsGoogleBusinessDataPriceDataInfo lighthouse) {
    this.lighthouse = lighthouse;
    return this;
  }

   /**
   * Get lighthouse
   * @return lighthouse
  **/
  @javax.annotation.Nullable
  public AppendixsGoogleBusinessDataPriceDataInfo getLighthouse() {
    return lighthouse;
  }

  public void setLighthouse(AppendixsGoogleBusinessDataPriceDataInfo lighthouse) {
    this.lighthouse = lighthouse;
  }


  public AppendixOnPagePriceData contentParsing(AppendixTaskKeywordsDataPriceDataInfo contentParsing) {
    this.contentParsing = contentParsing;
    return this;
  }

   /**
   * Get contentParsing
   * @return contentParsing
  **/
  @javax.annotation.Nullable
  public AppendixTaskKeywordsDataPriceDataInfo getContentParsing() {
    return contentParsing;
  }

  public void setContentParsing(AppendixTaskKeywordsDataPriceDataInfo contentParsing) {
    this.contentParsing = contentParsing;
  }


  public AppendixOnPagePriceData contentParsingLive(AppendixTaskKeywordsDataPriceDataInfo contentParsingLive) {
    this.contentParsingLive = contentParsingLive;
    return this;
  }

   /**
   * Get contentParsingLive
   * @return contentParsingLive
  **/
  @javax.annotation.Nullable
  public AppendixTaskKeywordsDataPriceDataInfo getContentParsingLive() {
    return contentParsingLive;
  }

  public void setContentParsingLive(AppendixTaskKeywordsDataPriceDataInfo contentParsingLive) {
    this.contentParsingLive = contentParsingLive;
  }


  public AppendixOnPagePriceData duplicateContent(AppendixTaskKeywordsDataPriceDataInfo duplicateContent) {
    this.duplicateContent = duplicateContent;
    return this;
  }

   /**
   * Get duplicateContent
   * @return duplicateContent
  **/
  @javax.annotation.Nullable
  public AppendixTaskKeywordsDataPriceDataInfo getDuplicateContent() {
    return duplicateContent;
  }

  public void setDuplicateContent(AppendixTaskKeywordsDataPriceDataInfo duplicateContent) {
    this.duplicateContent = duplicateContent;
  }


  public AppendixOnPagePriceData duplicateTags(AppendixTaskKeywordsDataPriceDataInfo duplicateTags) {
    this.duplicateTags = duplicateTags;
    return this;
  }

   /**
   * Get duplicateTags
   * @return duplicateTags
  **/
  @javax.annotation.Nullable
  public AppendixTaskKeywordsDataPriceDataInfo getDuplicateTags() {
    return duplicateTags;
  }

  public void setDuplicateTags(AppendixTaskKeywordsDataPriceDataInfo duplicateTags) {
    this.duplicateTags = duplicateTags;
  }


  public AppendixOnPagePriceData instantPages(AppendixTaskKeywordsDataPriceDataInfo instantPages) {
    this.instantPages = instantPages;
    return this;
  }

   /**
   * Get instantPages
   * @return instantPages
  **/
  @javax.annotation.Nullable
  public AppendixTaskKeywordsDataPriceDataInfo getInstantPages() {
    return instantPages;
  }

  public void setInstantPages(AppendixTaskKeywordsDataPriceDataInfo instantPages) {
    this.instantPages = instantPages;
  }


  public AppendixOnPagePriceData keywordDensity(AppendixTaskKeywordsDataPriceDataInfo keywordDensity) {
    this.keywordDensity = keywordDensity;
    return this;
  }

   /**
   * Get keywordDensity
   * @return keywordDensity
  **/
  @javax.annotation.Nullable
  public AppendixTaskKeywordsDataPriceDataInfo getKeywordDensity() {
    return keywordDensity;
  }

  public void setKeywordDensity(AppendixTaskKeywordsDataPriceDataInfo keywordDensity) {
    this.keywordDensity = keywordDensity;
  }


  public AppendixOnPagePriceData links(AppendixTaskKeywordsDataPriceDataInfo links) {
    this.links = links;
    return this;
  }

   /**
   * Get links
   * @return links
  **/
  @javax.annotation.Nullable
  public AppendixTaskKeywordsDataPriceDataInfo getLinks() {
    return links;
  }

  public void setLinks(AppendixTaskKeywordsDataPriceDataInfo links) {
    this.links = links;
  }


  public AppendixOnPagePriceData nonIndexable(AppendixTaskKeywordsDataPriceDataInfo nonIndexable) {
    this.nonIndexable = nonIndexable;
    return this;
  }

   /**
   * Get nonIndexable
   * @return nonIndexable
  **/
  @javax.annotation.Nullable
  public AppendixTaskKeywordsDataPriceDataInfo getNonIndexable() {
    return nonIndexable;
  }

  public void setNonIndexable(AppendixTaskKeywordsDataPriceDataInfo nonIndexable) {
    this.nonIndexable = nonIndexable;
  }


  public AppendixOnPagePriceData pages(AppendixTaskKeywordsDataPriceDataInfo pages) {
    this.pages = pages;
    return this;
  }

   /**
   * Get pages
   * @return pages
  **/
  @javax.annotation.Nullable
  public AppendixTaskKeywordsDataPriceDataInfo getPages() {
    return pages;
  }

  public void setPages(AppendixTaskKeywordsDataPriceDataInfo pages) {
    this.pages = pages;
  }


  public AppendixOnPagePriceData pagesByResource(AppendixTaskKeywordsDataPriceDataInfo pagesByResource) {
    this.pagesByResource = pagesByResource;
    return this;
  }

   /**
   * Get pagesByResource
   * @return pagesByResource
  **/
  @javax.annotation.Nullable
  public AppendixTaskKeywordsDataPriceDataInfo getPagesByResource() {
    return pagesByResource;
  }

  public void setPagesByResource(AppendixTaskKeywordsDataPriceDataInfo pagesByResource) {
    this.pagesByResource = pagesByResource;
  }


  public AppendixOnPagePriceData pageScreenshot(AppendixTaskKeywordsDataPriceDataInfo pageScreenshot) {
    this.pageScreenshot = pageScreenshot;
    return this;
  }

   /**
   * Get pageScreenshot
   * @return pageScreenshot
  **/
  @javax.annotation.Nullable
  public AppendixTaskKeywordsDataPriceDataInfo getPageScreenshot() {
    return pageScreenshot;
  }

  public void setPageScreenshot(AppendixTaskKeywordsDataPriceDataInfo pageScreenshot) {
    this.pageScreenshot = pageScreenshot;
  }


  public AppendixOnPagePriceData rawHtml(AppendixTaskKeywordsDataPriceDataInfo rawHtml) {
    this.rawHtml = rawHtml;
    return this;
  }

   /**
   * Get rawHtml
   * @return rawHtml
  **/
  @javax.annotation.Nullable
  public AppendixTaskKeywordsDataPriceDataInfo getRawHtml() {
    return rawHtml;
  }

  public void setRawHtml(AppendixTaskKeywordsDataPriceDataInfo rawHtml) {
    this.rawHtml = rawHtml;
  }


  public AppendixOnPagePriceData redirectChains(AppendixTaskKeywordsDataPriceDataInfo redirectChains) {
    this.redirectChains = redirectChains;
    return this;
  }

   /**
   * Get redirectChains
   * @return redirectChains
  **/
  @javax.annotation.Nullable
  public AppendixTaskKeywordsDataPriceDataInfo getRedirectChains() {
    return redirectChains;
  }

  public void setRedirectChains(AppendixTaskKeywordsDataPriceDataInfo redirectChains) {
    this.redirectChains = redirectChains;
  }


  public AppendixOnPagePriceData resources(AppendixTaskKeywordsDataPriceDataInfo resources) {
    this.resources = resources;
    return this;
  }

   /**
   * Get resources
   * @return resources
  **/
  @javax.annotation.Nullable
  public AppendixTaskKeywordsDataPriceDataInfo getResources() {
    return resources;
  }

  public void setResources(AppendixTaskKeywordsDataPriceDataInfo resources) {
    this.resources = resources;
  }


  public AppendixOnPagePriceData summary(AppendixTaskKeywordsDataPriceDataInfo summary) {
    this.summary = summary;
    return this;
  }

   /**
   * Get summary
   * @return summary
  **/
  @javax.annotation.Nullable
  public AppendixTaskKeywordsDataPriceDataInfo getSummary() {
    return summary;
  }

  public void setSummary(AppendixTaskKeywordsDataPriceDataInfo summary) {
    this.summary = summary;
  }


  public AppendixOnPagePriceData taskPost(AppendixTaskKeywordsDataPriceDataInfo taskPost) {
    this.taskPost = taskPost;
    return this;
  }

   /**
   * Get taskPost
   * @return taskPost
  **/
  @javax.annotation.Nullable
  public AppendixTaskKeywordsDataPriceDataInfo getTaskPost() {
    return taskPost;
  }

  public void setTaskPost(AppendixTaskKeywordsDataPriceDataInfo taskPost) {
    this.taskPost = taskPost;
  }


  public AppendixOnPagePriceData tasksReady(AppendixTaskKeywordsDataPriceDataInfo tasksReady) {
    this.tasksReady = tasksReady;
    return this;
  }

   /**
   * Get tasksReady
   * @return tasksReady
  **/
  @javax.annotation.Nullable
  public AppendixTaskKeywordsDataPriceDataInfo getTasksReady() {
    return tasksReady;
  }

  public void setTasksReady(AppendixTaskKeywordsDataPriceDataInfo tasksReady) {
    this.tasksReady = tasksReady;
  }


  public AppendixOnPagePriceData waterfall(AppendixTaskKeywordsDataPriceDataInfo waterfall) {
    this.waterfall = waterfall;
    return this;
  }

   /**
   * Get waterfall
   * @return waterfall
  **/
  @javax.annotation.Nullable
  public AppendixTaskKeywordsDataPriceDataInfo getWaterfall() {
    return waterfall;
  }

  public void setWaterfall(AppendixTaskKeywordsDataPriceDataInfo waterfall) {
    this.waterfall = waterfall;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AppendixOnPagePriceData appendixOnPagePriceData = (AppendixOnPagePriceData) o;
    return Objects.equals(this.errors, appendixOnPagePriceData.errors) &&
        Objects.equals(this.lighthouse, appendixOnPagePriceData.lighthouse) &&
        Objects.equals(this.contentParsing, appendixOnPagePriceData.contentParsing) &&
        Objects.equals(this.contentParsingLive, appendixOnPagePriceData.contentParsingLive) &&
        Objects.equals(this.duplicateContent, appendixOnPagePriceData.duplicateContent) &&
        Objects.equals(this.duplicateTags, appendixOnPagePriceData.duplicateTags) &&
        Objects.equals(this.instantPages, appendixOnPagePriceData.instantPages) &&
        Objects.equals(this.keywordDensity, appendixOnPagePriceData.keywordDensity) &&
        Objects.equals(this.links, appendixOnPagePriceData.links) &&
        Objects.equals(this.nonIndexable, appendixOnPagePriceData.nonIndexable) &&
        Objects.equals(this.pages, appendixOnPagePriceData.pages) &&
        Objects.equals(this.pagesByResource, appendixOnPagePriceData.pagesByResource) &&
        Objects.equals(this.pageScreenshot, appendixOnPagePriceData.pageScreenshot) &&
        Objects.equals(this.rawHtml, appendixOnPagePriceData.rawHtml) &&
        Objects.equals(this.redirectChains, appendixOnPagePriceData.redirectChains) &&
        Objects.equals(this.resources, appendixOnPagePriceData.resources) &&
        Objects.equals(this.summary, appendixOnPagePriceData.summary) &&
        Objects.equals(this.taskPost, appendixOnPagePriceData.taskPost) &&
        Objects.equals(this.tasksReady, appendixOnPagePriceData.tasksReady) &&
        Objects.equals(this.waterfall, appendixOnPagePriceData.waterfall);
  }

  @Override
  public int hashCode() {
    return Objects.hash(errors, lighthouse, contentParsing, contentParsingLive, duplicateContent, duplicateTags, instantPages, keywordDensity, links, nonIndexable, pages, pagesByResource, pageScreenshot, rawHtml, redirectChains, resources, summary, taskPost, tasksReady, waterfall);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AppendixOnPagePriceData {\n");
    sb.append("    errors: ").append(toIndentedString(errors)).append("\n");
    sb.append("    lighthouse: ").append(toIndentedString(lighthouse)).append("\n");
    sb.append("    contentParsing: ").append(toIndentedString(contentParsing)).append("\n");
    sb.append("    contentParsingLive: ").append(toIndentedString(contentParsingLive)).append("\n");
    sb.append("    duplicateContent: ").append(toIndentedString(duplicateContent)).append("\n");
    sb.append("    duplicateTags: ").append(toIndentedString(duplicateTags)).append("\n");
    sb.append("    instantPages: ").append(toIndentedString(instantPages)).append("\n");
    sb.append("    keywordDensity: ").append(toIndentedString(keywordDensity)).append("\n");
    sb.append("    links: ").append(toIndentedString(links)).append("\n");
    sb.append("    nonIndexable: ").append(toIndentedString(nonIndexable)).append("\n");
    sb.append("    pages: ").append(toIndentedString(pages)).append("\n");
    sb.append("    pagesByResource: ").append(toIndentedString(pagesByResource)).append("\n");
    sb.append("    pageScreenshot: ").append(toIndentedString(pageScreenshot)).append("\n");
    sb.append("    rawHtml: ").append(toIndentedString(rawHtml)).append("\n");
    sb.append("    redirectChains: ").append(toIndentedString(redirectChains)).append("\n");
    sb.append("    resources: ").append(toIndentedString(resources)).append("\n");
    sb.append("    summary: ").append(toIndentedString(summary)).append("\n");
    sb.append("    taskPost: ").append(toIndentedString(taskPost)).append("\n");
    sb.append("    tasksReady: ").append(toIndentedString(tasksReady)).append("\n");
    sb.append("    waterfall: ").append(toIndentedString(waterfall)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("errors");
    openapiFields.add("lighthouse");
    openapiFields.add("content_parsing");
    openapiFields.add("content_parsing_live");
    openapiFields.add("duplicate_content");
    openapiFields.add("duplicate_tags");
    openapiFields.add("instant_pages");
    openapiFields.add("keyword_density");
    openapiFields.add("links");
    openapiFields.add("non_indexable");
    openapiFields.add("pages");
    openapiFields.add("pages_by_resource");
    openapiFields.add("page_screenshot");
    openapiFields.add("raw_html");
    openapiFields.add("redirect_chains");
    openapiFields.add("resources");
    openapiFields.add("summary");
    openapiFields.add("task_post");
    openapiFields.add("tasks_ready");
    openapiFields.add("waterfall");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to AppendixOnPagePriceData
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!AppendixOnPagePriceData.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AppendixOnPagePriceData is not found in the empty JSON string", AppendixOnPagePriceData.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!AppendixOnPagePriceData.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AppendixOnPagePriceData` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `errors`
      if (jsonObj.get("errors") != null && !jsonObj.get("errors").isJsonNull()) {
        AppendixTaskKeywordsDataPriceDataInfo.validateJsonElement(jsonObj.get("errors"));
      }
      // validate the optional field `lighthouse`
      if (jsonObj.get("lighthouse") != null && !jsonObj.get("lighthouse").isJsonNull()) {
        AppendixsGoogleBusinessDataPriceDataInfo.validateJsonElement(jsonObj.get("lighthouse"));
      }
      // validate the optional field `content_parsing`
      if (jsonObj.get("content_parsing") != null && !jsonObj.get("content_parsing").isJsonNull()) {
        AppendixTaskKeywordsDataPriceDataInfo.validateJsonElement(jsonObj.get("content_parsing"));
      }
      // validate the optional field `content_parsing_live`
      if (jsonObj.get("content_parsing_live") != null && !jsonObj.get("content_parsing_live").isJsonNull()) {
        AppendixTaskKeywordsDataPriceDataInfo.validateJsonElement(jsonObj.get("content_parsing_live"));
      }
      // validate the optional field `duplicate_content`
      if (jsonObj.get("duplicate_content") != null && !jsonObj.get("duplicate_content").isJsonNull()) {
        AppendixTaskKeywordsDataPriceDataInfo.validateJsonElement(jsonObj.get("duplicate_content"));
      }
      // validate the optional field `duplicate_tags`
      if (jsonObj.get("duplicate_tags") != null && !jsonObj.get("duplicate_tags").isJsonNull()) {
        AppendixTaskKeywordsDataPriceDataInfo.validateJsonElement(jsonObj.get("duplicate_tags"));
      }
      // validate the optional field `instant_pages`
      if (jsonObj.get("instant_pages") != null && !jsonObj.get("instant_pages").isJsonNull()) {
        AppendixTaskKeywordsDataPriceDataInfo.validateJsonElement(jsonObj.get("instant_pages"));
      }
      // validate the optional field `keyword_density`
      if (jsonObj.get("keyword_density") != null && !jsonObj.get("keyword_density").isJsonNull()) {
        AppendixTaskKeywordsDataPriceDataInfo.validateJsonElement(jsonObj.get("keyword_density"));
      }
      // validate the optional field `links`
      if (jsonObj.get("links") != null && !jsonObj.get("links").isJsonNull()) {
        AppendixTaskKeywordsDataPriceDataInfo.validateJsonElement(jsonObj.get("links"));
      }
      // validate the optional field `non_indexable`
      if (jsonObj.get("non_indexable") != null && !jsonObj.get("non_indexable").isJsonNull()) {
        AppendixTaskKeywordsDataPriceDataInfo.validateJsonElement(jsonObj.get("non_indexable"));
      }
      // validate the optional field `pages`
      if (jsonObj.get("pages") != null && !jsonObj.get("pages").isJsonNull()) {
        AppendixTaskKeywordsDataPriceDataInfo.validateJsonElement(jsonObj.get("pages"));
      }
      // validate the optional field `pages_by_resource`
      if (jsonObj.get("pages_by_resource") != null && !jsonObj.get("pages_by_resource").isJsonNull()) {
        AppendixTaskKeywordsDataPriceDataInfo.validateJsonElement(jsonObj.get("pages_by_resource"));
      }
      // validate the optional field `page_screenshot`
      if (jsonObj.get("page_screenshot") != null && !jsonObj.get("page_screenshot").isJsonNull()) {
        AppendixTaskKeywordsDataPriceDataInfo.validateJsonElement(jsonObj.get("page_screenshot"));
      }
      // validate the optional field `raw_html`
      if (jsonObj.get("raw_html") != null && !jsonObj.get("raw_html").isJsonNull()) {
        AppendixTaskKeywordsDataPriceDataInfo.validateJsonElement(jsonObj.get("raw_html"));
      }
      // validate the optional field `redirect_chains`
      if (jsonObj.get("redirect_chains") != null && !jsonObj.get("redirect_chains").isJsonNull()) {
        AppendixTaskKeywordsDataPriceDataInfo.validateJsonElement(jsonObj.get("redirect_chains"));
      }
      // validate the optional field `resources`
      if (jsonObj.get("resources") != null && !jsonObj.get("resources").isJsonNull()) {
        AppendixTaskKeywordsDataPriceDataInfo.validateJsonElement(jsonObj.get("resources"));
      }
      // validate the optional field `summary`
      if (jsonObj.get("summary") != null && !jsonObj.get("summary").isJsonNull()) {
        AppendixTaskKeywordsDataPriceDataInfo.validateJsonElement(jsonObj.get("summary"));
      }
      // validate the optional field `task_post`
      if (jsonObj.get("task_post") != null && !jsonObj.get("task_post").isJsonNull()) {
        AppendixTaskKeywordsDataPriceDataInfo.validateJsonElement(jsonObj.get("task_post"));
      }
      // validate the optional field `tasks_ready`
      if (jsonObj.get("tasks_ready") != null && !jsonObj.get("tasks_ready").isJsonNull()) {
        AppendixTaskKeywordsDataPriceDataInfo.validateJsonElement(jsonObj.get("tasks_ready"));
      }
      // validate the optional field `waterfall`
      if (jsonObj.get("waterfall") != null && !jsonObj.get("waterfall").isJsonNull()) {
        AppendixTaskKeywordsDataPriceDataInfo.validateJsonElement(jsonObj.get("waterfall"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AppendixOnPagePriceData.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AppendixOnPagePriceData' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AppendixOnPagePriceData> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AppendixOnPagePriceData.class));

       return (TypeAdapter<T>) new TypeAdapter<AppendixOnPagePriceData>() {
           @Override
           public void write(JsonWriter out, AppendixOnPagePriceData value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AppendixOnPagePriceData read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of AppendixOnPagePriceData given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of AppendixOnPagePriceData
  * @throws IOException if the JSON string is invalid with respect to AppendixOnPagePriceData
  */
  public static AppendixOnPagePriceData fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AppendixOnPagePriceData.class);
  }

 /**
  * Convert an instance of AppendixOnPagePriceData to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

