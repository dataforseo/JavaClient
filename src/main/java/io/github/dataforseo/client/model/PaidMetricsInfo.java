/*
 * DataForSEO API documentation
 * DataForSEO API is the starting point on your journey towards building powerful SEO software. With DataForSEO you can get all the data you need to build an efficient application while also saving your time and budget. DataForSEO API is using the REST technology for interchanging data between your application and our service. The data exchange is made through the widely used HTTP protocol, which allows applying our API to almost all programming languages.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.dataforseo.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import io.github.dataforseo.client.JSON;

/**
 * PaidMetricsInfo
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-05-30T15:21:14.476580900+03:00[Europe/Kiev]", comments = "Generator version: 7.8.0")
public class PaidMetricsInfo {
  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private String type;

  public static final String SERIALIZED_NAME_TIMESTAMP = "timestamp";
  @SerializedName(SERIALIZED_NAME_TIMESTAMP)
  private String timestamp;

  public static final String SERIALIZED_NAME_REVENUE = "revenue";
  @SerializedName(SERIALIZED_NAME_REVENUE)
  private Float revenue;

  public static final String SERIALIZED_NAME_REVENUE_DELTA = "revenue_delta";
  @SerializedName(SERIALIZED_NAME_REVENUE_DELTA)
  private Float revenueDelta;

  public static final String SERIALIZED_NAME_OPERATING_EXPENSE = "operating_expense";
  @SerializedName(SERIALIZED_NAME_OPERATING_EXPENSE)
  private Float operatingExpense;

  public static final String SERIALIZED_NAME_OPERATING_EXPENSE_DELTA = "operating_expense_delta";
  @SerializedName(SERIALIZED_NAME_OPERATING_EXPENSE_DELTA)
  private Float operatingExpenseDelta;

  public static final String SERIALIZED_NAME_NET_INCOME = "net_income";
  @SerializedName(SERIALIZED_NAME_NET_INCOME)
  private Float netIncome;

  public static final String SERIALIZED_NAME_NET_INCOME_DELTA = "net_income_delta";
  @SerializedName(SERIALIZED_NAME_NET_INCOME_DELTA)
  private Float netIncomeDelta;

  public static final String SERIALIZED_NAME_NET_PROFIT_MARGIN = "net_profit_margin";
  @SerializedName(SERIALIZED_NAME_NET_PROFIT_MARGIN)
  private Float netProfitMargin;

  public static final String SERIALIZED_NAME_NET_PROFIT_MARGIN_DELTA = "net_profit_margin_delta";
  @SerializedName(SERIALIZED_NAME_NET_PROFIT_MARGIN_DELTA)
  private Float netProfitMarginDelta;

  public static final String SERIALIZED_NAME_EARNINGS_PER_SHARE = "earnings_per_share";
  @SerializedName(SERIALIZED_NAME_EARNINGS_PER_SHARE)
  private Float earningsPerShare;

  public static final String SERIALIZED_NAME_EARNINGS_PER_SHARE_DELTA = "earnings_per_share_delta";
  @SerializedName(SERIALIZED_NAME_EARNINGS_PER_SHARE_DELTA)
  private Float earningsPerShareDelta;

  public static final String SERIALIZED_NAME_EBITDA = "ebitda";
  @SerializedName(SERIALIZED_NAME_EBITDA)
  private Float ebitda;

  public static final String SERIALIZED_NAME_EBITDA_DELTA = "ebitda_delta";
  @SerializedName(SERIALIZED_NAME_EBITDA_DELTA)
  private Float ebitdaDelta;

  public static final String SERIALIZED_NAME_EFFECTIVE_TAX_RATE = "effective_tax_rate";
  @SerializedName(SERIALIZED_NAME_EFFECTIVE_TAX_RATE)
  private Float effectiveTaxRate;

  public static final String SERIALIZED_NAME_CASH_AND_SHORT_TERM_INVESTMENTS = "cash_and_short_term_investments";
  @SerializedName(SERIALIZED_NAME_CASH_AND_SHORT_TERM_INVESTMENTS)
  private Float cashAndShortTermInvestments;

  public static final String SERIALIZED_NAME_CASH_AND_SHORT_TERM_INVESTMENTS_DELTA = "cash_and_short_term_investments_delta";
  @SerializedName(SERIALIZED_NAME_CASH_AND_SHORT_TERM_INVESTMENTS_DELTA)
  private Float cashAndShortTermInvestmentsDelta;

  public static final String SERIALIZED_NAME_TOTAL_ASSETS = "total_assets";
  @SerializedName(SERIALIZED_NAME_TOTAL_ASSETS)
  private Float totalAssets;

  public static final String SERIALIZED_NAME_TOTAL_ASSETS_DELTA = "total_assets_delta";
  @SerializedName(SERIALIZED_NAME_TOTAL_ASSETS_DELTA)
  private Float totalAssetsDelta;

  public static final String SERIALIZED_NAME_TOTAL_LIABILITIES = "total_liabilities";
  @SerializedName(SERIALIZED_NAME_TOTAL_LIABILITIES)
  private Float totalLiabilities;

  public static final String SERIALIZED_NAME_TOTAL_LIABILITIES_DELTA = "total_liabilities_delta";
  @SerializedName(SERIALIZED_NAME_TOTAL_LIABILITIES_DELTA)
  private Float totalLiabilitiesDelta;

  public static final String SERIALIZED_NAME_TOTAL_EQUITY = "total_equity";
  @SerializedName(SERIALIZED_NAME_TOTAL_EQUITY)
  private Float totalEquity;

  public static final String SERIALIZED_NAME_SHARES_OUTSTANDING = "shares_outstanding";
  @SerializedName(SERIALIZED_NAME_SHARES_OUTSTANDING)
  private Float sharesOutstanding;

  public static final String SERIALIZED_NAME_PRICE_TO_BOOK = "price_to_book";
  @SerializedName(SERIALIZED_NAME_PRICE_TO_BOOK)
  private Float priceToBook;

  public static final String SERIALIZED_NAME_RETURN_ON_ASSETS = "return_on_assets";
  @SerializedName(SERIALIZED_NAME_RETURN_ON_ASSETS)
  private Float returnOnAssets;

  public static final String SERIALIZED_NAME_RETURN_ON_CAPITAL = "return_on_capital";
  @SerializedName(SERIALIZED_NAME_RETURN_ON_CAPITAL)
  private Float returnOnCapital;

  public static final String SERIALIZED_NAME_CASH_FROM_OPERATIONS = "cash_from_operations";
  @SerializedName(SERIALIZED_NAME_CASH_FROM_OPERATIONS)
  private Float cashFromOperations;

  public static final String SERIALIZED_NAME_CASH_FROM_OPERATIONS_DELTA = "cash_from_operations_delta";
  @SerializedName(SERIALIZED_NAME_CASH_FROM_OPERATIONS_DELTA)
  private Float cashFromOperationsDelta;

  public static final String SERIALIZED_NAME_CASH_FROM_INVESTING = "cash_from_investing";
  @SerializedName(SERIALIZED_NAME_CASH_FROM_INVESTING)
  private Float cashFromInvesting;

  public static final String SERIALIZED_NAME_CASH_FROM_INVESTING_DELTA = "cash_from_investing_delta";
  @SerializedName(SERIALIZED_NAME_CASH_FROM_INVESTING_DELTA)
  private Float cashFromInvestingDelta;

  public static final String SERIALIZED_NAME_CASH_FROM_FINANCING = "cash_from_financing";
  @SerializedName(SERIALIZED_NAME_CASH_FROM_FINANCING)
  private Float cashFromFinancing;

  public static final String SERIALIZED_NAME_CASH_FROM_FINANCING_DELTA = "cash_from_financing_delta";
  @SerializedName(SERIALIZED_NAME_CASH_FROM_FINANCING_DELTA)
  private Float cashFromFinancingDelta;

  public static final String SERIALIZED_NAME_NET_CHANGE_IN_CASH = "net_change_in_cash";
  @SerializedName(SERIALIZED_NAME_NET_CHANGE_IN_CASH)
  private Float netChangeInCash;

  public static final String SERIALIZED_NAME_NET_CHANGE_IN_CASH_DELTA = "net_change_in_cash_delta";
  @SerializedName(SERIALIZED_NAME_NET_CHANGE_IN_CASH_DELTA)
  private Float netChangeInCashDelta;

  public static final String SERIALIZED_NAME_FREE_CASH_FLOW = "free_cash_flow";
  @SerializedName(SERIALIZED_NAME_FREE_CASH_FLOW)
  private Float freeCashFlow;

  public static final String SERIALIZED_NAME_FREE_CASH_FLOW_DELTA = "free_cash_flow_delta";
  @SerializedName(SERIALIZED_NAME_FREE_CASH_FLOW_DELTA)
  private Float freeCashFlowDelta;

  public static final String SERIALIZED_NAME_POS1 = "pos_1";
  @SerializedName(SERIALIZED_NAME_POS1)
  private BigDecimal pos1;

  public static final String SERIALIZED_NAME_POS23 = "pos_2_3";
  @SerializedName(SERIALIZED_NAME_POS23)
  private BigDecimal pos23;

  public static final String SERIALIZED_NAME_POS410 = "pos_4_10";
  @SerializedName(SERIALIZED_NAME_POS410)
  private BigDecimal pos410;

  public static final String SERIALIZED_NAME_POS1120 = "pos_11_20";
  @SerializedName(SERIALIZED_NAME_POS1120)
  private BigDecimal pos1120;

  public static final String SERIALIZED_NAME_POS2130 = "pos_21_30";
  @SerializedName(SERIALIZED_NAME_POS2130)
  private BigDecimal pos2130;

  public static final String SERIALIZED_NAME_POS3140 = "pos_31_40";
  @SerializedName(SERIALIZED_NAME_POS3140)
  private BigDecimal pos3140;

  public static final String SERIALIZED_NAME_POS4150 = "pos_41_50";
  @SerializedName(SERIALIZED_NAME_POS4150)
  private BigDecimal pos4150;

  public static final String SERIALIZED_NAME_POS5160 = "pos_51_60";
  @SerializedName(SERIALIZED_NAME_POS5160)
  private BigDecimal pos5160;

  public static final String SERIALIZED_NAME_POS6170 = "pos_61_70";
  @SerializedName(SERIALIZED_NAME_POS6170)
  private BigDecimal pos6170;

  public static final String SERIALIZED_NAME_POS7180 = "pos_71_80";
  @SerializedName(SERIALIZED_NAME_POS7180)
  private BigDecimal pos7180;

  public static final String SERIALIZED_NAME_POS8190 = "pos_81_90";
  @SerializedName(SERIALIZED_NAME_POS8190)
  private BigDecimal pos8190;

  public static final String SERIALIZED_NAME_POS91100 = "pos_91_100";
  @SerializedName(SERIALIZED_NAME_POS91100)
  private BigDecimal pos91100;

  public static final String SERIALIZED_NAME_ETV = "etv";
  @SerializedName(SERIALIZED_NAME_ETV)
  private Float etv;

  public static final String SERIALIZED_NAME_COUNT = "count";
  @SerializedName(SERIALIZED_NAME_COUNT)
  private BigDecimal count;

  public static final String SERIALIZED_NAME_ESTIMATED_PAID_TRAFFIC_COST = "estimated_paid_traffic_cost";
  @SerializedName(SERIALIZED_NAME_ESTIMATED_PAID_TRAFFIC_COST)
  private Float estimatedPaidTrafficCost;

  public PaidMetricsInfo() {
  }

  public PaidMetricsInfo type(String type) {
    this.type = type;
    return this;
  }

  /**
   * type of element
   * @return type
   */
  @javax.annotation.Nullable
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }


  public PaidMetricsInfo timestamp(String timestamp) {
    this.timestamp = timestamp;
    return this;
  }

  /**
   * date and time of the value readout in the UTC format: “yyyy-mm-dd hh-mm-ss +00:00” example: 2025-02-10 09:40:00 +00:00
   * @return timestamp
   */
  @javax.annotation.Nullable
  public String getTimestamp() {
    return timestamp;
  }

  public void setTimestamp(String timestamp) {
    this.timestamp = timestamp;
  }


  public PaidMetricsInfo revenue(Float revenue) {
    this.revenue = revenue;
    return this;
  }

  /**
   * revenue value
   * @return revenue
   */
  @javax.annotation.Nullable
  public Float getRevenue() {
    return revenue;
  }

  public void setRevenue(Float revenue) {
    this.revenue = revenue;
  }


  public PaidMetricsInfo revenueDelta(Float revenueDelta) {
    this.revenueDelta = revenueDelta;
    return this;
  }

  /**
   * change in revenue
   * @return revenueDelta
   */
  @javax.annotation.Nullable
  public Float getRevenueDelta() {
    return revenueDelta;
  }

  public void setRevenueDelta(Float revenueDelta) {
    this.revenueDelta = revenueDelta;
  }


  public PaidMetricsInfo operatingExpense(Float operatingExpense) {
    this.operatingExpense = operatingExpense;
    return this;
  }

  /**
   * operating expense value
   * @return operatingExpense
   */
  @javax.annotation.Nullable
  public Float getOperatingExpense() {
    return operatingExpense;
  }

  public void setOperatingExpense(Float operatingExpense) {
    this.operatingExpense = operatingExpense;
  }


  public PaidMetricsInfo operatingExpenseDelta(Float operatingExpenseDelta) {
    this.operatingExpenseDelta = operatingExpenseDelta;
    return this;
  }

  /**
   * change in operating expense
   * @return operatingExpenseDelta
   */
  @javax.annotation.Nullable
  public Float getOperatingExpenseDelta() {
    return operatingExpenseDelta;
  }

  public void setOperatingExpenseDelta(Float operatingExpenseDelta) {
    this.operatingExpenseDelta = operatingExpenseDelta;
  }


  public PaidMetricsInfo netIncome(Float netIncome) {
    this.netIncome = netIncome;
    return this;
  }

  /**
   * net income value
   * @return netIncome
   */
  @javax.annotation.Nullable
  public Float getNetIncome() {
    return netIncome;
  }

  public void setNetIncome(Float netIncome) {
    this.netIncome = netIncome;
  }


  public PaidMetricsInfo netIncomeDelta(Float netIncomeDelta) {
    this.netIncomeDelta = netIncomeDelta;
    return this;
  }

  /**
   * change in net income
   * @return netIncomeDelta
   */
  @javax.annotation.Nullable
  public Float getNetIncomeDelta() {
    return netIncomeDelta;
  }

  public void setNetIncomeDelta(Float netIncomeDelta) {
    this.netIncomeDelta = netIncomeDelta;
  }


  public PaidMetricsInfo netProfitMargin(Float netProfitMargin) {
    this.netProfitMargin = netProfitMargin;
    return this;
  }

  /**
   * net profit margin value
   * @return netProfitMargin
   */
  @javax.annotation.Nullable
  public Float getNetProfitMargin() {
    return netProfitMargin;
  }

  public void setNetProfitMargin(Float netProfitMargin) {
    this.netProfitMargin = netProfitMargin;
  }


  public PaidMetricsInfo netProfitMarginDelta(Float netProfitMarginDelta) {
    this.netProfitMarginDelta = netProfitMarginDelta;
    return this;
  }

  /**
   * change in net profit margin
   * @return netProfitMarginDelta
   */
  @javax.annotation.Nullable
  public Float getNetProfitMarginDelta() {
    return netProfitMarginDelta;
  }

  public void setNetProfitMarginDelta(Float netProfitMarginDelta) {
    this.netProfitMarginDelta = netProfitMarginDelta;
  }


  public PaidMetricsInfo earningsPerShare(Float earningsPerShare) {
    this.earningsPerShare = earningsPerShare;
    return this;
  }

  /**
   * earnings per share value
   * @return earningsPerShare
   */
  @javax.annotation.Nullable
  public Float getEarningsPerShare() {
    return earningsPerShare;
  }

  public void setEarningsPerShare(Float earningsPerShare) {
    this.earningsPerShare = earningsPerShare;
  }


  public PaidMetricsInfo earningsPerShareDelta(Float earningsPerShareDelta) {
    this.earningsPerShareDelta = earningsPerShareDelta;
    return this;
  }

  /**
   * change in earnings per share
   * @return earningsPerShareDelta
   */
  @javax.annotation.Nullable
  public Float getEarningsPerShareDelta() {
    return earningsPerShareDelta;
  }

  public void setEarningsPerShareDelta(Float earningsPerShareDelta) {
    this.earningsPerShareDelta = earningsPerShareDelta;
  }


  public PaidMetricsInfo ebitda(Float ebitda) {
    this.ebitda = ebitda;
    return this;
  }

  /**
   * earnings before interest, taxes, deprecation, amortisation
   * @return ebitda
   */
  @javax.annotation.Nullable
  public Float getEbitda() {
    return ebitda;
  }

  public void setEbitda(Float ebitda) {
    this.ebitda = ebitda;
  }


  public PaidMetricsInfo ebitdaDelta(Float ebitdaDelta) {
    this.ebitdaDelta = ebitdaDelta;
    return this;
  }

  /**
   * change in ebitda
   * @return ebitdaDelta
   */
  @javax.annotation.Nullable
  public Float getEbitdaDelta() {
    return ebitdaDelta;
  }

  public void setEbitdaDelta(Float ebitdaDelta) {
    this.ebitdaDelta = ebitdaDelta;
  }


  public PaidMetricsInfo effectiveTaxRate(Float effectiveTaxRate) {
    this.effectiveTaxRate = effectiveTaxRate;
    return this;
  }

  /**
   * effective tax rate value
   * @return effectiveTaxRate
   */
  @javax.annotation.Nullable
  public Float getEffectiveTaxRate() {
    return effectiveTaxRate;
  }

  public void setEffectiveTaxRate(Float effectiveTaxRate) {
    this.effectiveTaxRate = effectiveTaxRate;
  }


  public PaidMetricsInfo cashAndShortTermInvestments(Float cashAndShortTermInvestments) {
    this.cashAndShortTermInvestments = cashAndShortTermInvestments;
    return this;
  }

  /**
   * cash and short-term investments value
   * @return cashAndShortTermInvestments
   */
  @javax.annotation.Nullable
  public Float getCashAndShortTermInvestments() {
    return cashAndShortTermInvestments;
  }

  public void setCashAndShortTermInvestments(Float cashAndShortTermInvestments) {
    this.cashAndShortTermInvestments = cashAndShortTermInvestments;
  }


  public PaidMetricsInfo cashAndShortTermInvestmentsDelta(Float cashAndShortTermInvestmentsDelta) {
    this.cashAndShortTermInvestmentsDelta = cashAndShortTermInvestmentsDelta;
    return this;
  }

  /**
   * change in cash and short-term investments
   * @return cashAndShortTermInvestmentsDelta
   */
  @javax.annotation.Nullable
  public Float getCashAndShortTermInvestmentsDelta() {
    return cashAndShortTermInvestmentsDelta;
  }

  public void setCashAndShortTermInvestmentsDelta(Float cashAndShortTermInvestmentsDelta) {
    this.cashAndShortTermInvestmentsDelta = cashAndShortTermInvestmentsDelta;
  }


  public PaidMetricsInfo totalAssets(Float totalAssets) {
    this.totalAssets = totalAssets;
    return this;
  }

  /**
   * total assets value
   * @return totalAssets
   */
  @javax.annotation.Nullable
  public Float getTotalAssets() {
    return totalAssets;
  }

  public void setTotalAssets(Float totalAssets) {
    this.totalAssets = totalAssets;
  }


  public PaidMetricsInfo totalAssetsDelta(Float totalAssetsDelta) {
    this.totalAssetsDelta = totalAssetsDelta;
    return this;
  }

  /**
   * change in total assets
   * @return totalAssetsDelta
   */
  @javax.annotation.Nullable
  public Float getTotalAssetsDelta() {
    return totalAssetsDelta;
  }

  public void setTotalAssetsDelta(Float totalAssetsDelta) {
    this.totalAssetsDelta = totalAssetsDelta;
  }


  public PaidMetricsInfo totalLiabilities(Float totalLiabilities) {
    this.totalLiabilities = totalLiabilities;
    return this;
  }

  /**
   * total liabilities value
   * @return totalLiabilities
   */
  @javax.annotation.Nullable
  public Float getTotalLiabilities() {
    return totalLiabilities;
  }

  public void setTotalLiabilities(Float totalLiabilities) {
    this.totalLiabilities = totalLiabilities;
  }


  public PaidMetricsInfo totalLiabilitiesDelta(Float totalLiabilitiesDelta) {
    this.totalLiabilitiesDelta = totalLiabilitiesDelta;
    return this;
  }

  /**
   * change in total liabilities
   * @return totalLiabilitiesDelta
   */
  @javax.annotation.Nullable
  public Float getTotalLiabilitiesDelta() {
    return totalLiabilitiesDelta;
  }

  public void setTotalLiabilitiesDelta(Float totalLiabilitiesDelta) {
    this.totalLiabilitiesDelta = totalLiabilitiesDelta;
  }


  public PaidMetricsInfo totalEquity(Float totalEquity) {
    this.totalEquity = totalEquity;
    return this;
  }

  /**
   * total equity value
   * @return totalEquity
   */
  @javax.annotation.Nullable
  public Float getTotalEquity() {
    return totalEquity;
  }

  public void setTotalEquity(Float totalEquity) {
    this.totalEquity = totalEquity;
  }


  public PaidMetricsInfo sharesOutstanding(Float sharesOutstanding) {
    this.sharesOutstanding = sharesOutstanding;
    return this;
  }

  /**
   * outstanding shares value
   * @return sharesOutstanding
   */
  @javax.annotation.Nullable
  public Float getSharesOutstanding() {
    return sharesOutstanding;
  }

  public void setSharesOutstanding(Float sharesOutstanding) {
    this.sharesOutstanding = sharesOutstanding;
  }


  public PaidMetricsInfo priceToBook(Float priceToBook) {
    this.priceToBook = priceToBook;
    return this;
  }

  /**
   * price to book
   * @return priceToBook
   */
  @javax.annotation.Nullable
  public Float getPriceToBook() {
    return priceToBook;
  }

  public void setPriceToBook(Float priceToBook) {
    this.priceToBook = priceToBook;
  }


  public PaidMetricsInfo returnOnAssets(Float returnOnAssets) {
    this.returnOnAssets = returnOnAssets;
    return this;
  }

  /**
   * return on assets
   * @return returnOnAssets
   */
  @javax.annotation.Nullable
  public Float getReturnOnAssets() {
    return returnOnAssets;
  }

  public void setReturnOnAssets(Float returnOnAssets) {
    this.returnOnAssets = returnOnAssets;
  }


  public PaidMetricsInfo returnOnCapital(Float returnOnCapital) {
    this.returnOnCapital = returnOnCapital;
    return this;
  }

  /**
   * return on capital
   * @return returnOnCapital
   */
  @javax.annotation.Nullable
  public Float getReturnOnCapital() {
    return returnOnCapital;
  }

  public void setReturnOnCapital(Float returnOnCapital) {
    this.returnOnCapital = returnOnCapital;
  }


  public PaidMetricsInfo cashFromOperations(Float cashFromOperations) {
    this.cashFromOperations = cashFromOperations;
    return this;
  }

  /**
   * cash from operations
   * @return cashFromOperations
   */
  @javax.annotation.Nullable
  public Float getCashFromOperations() {
    return cashFromOperations;
  }

  public void setCashFromOperations(Float cashFromOperations) {
    this.cashFromOperations = cashFromOperations;
  }


  public PaidMetricsInfo cashFromOperationsDelta(Float cashFromOperationsDelta) {
    this.cashFromOperationsDelta = cashFromOperationsDelta;
    return this;
  }

  /**
   * change in cash from operations
   * @return cashFromOperationsDelta
   */
  @javax.annotation.Nullable
  public Float getCashFromOperationsDelta() {
    return cashFromOperationsDelta;
  }

  public void setCashFromOperationsDelta(Float cashFromOperationsDelta) {
    this.cashFromOperationsDelta = cashFromOperationsDelta;
  }


  public PaidMetricsInfo cashFromInvesting(Float cashFromInvesting) {
    this.cashFromInvesting = cashFromInvesting;
    return this;
  }

  /**
   * cash from investing
   * @return cashFromInvesting
   */
  @javax.annotation.Nullable
  public Float getCashFromInvesting() {
    return cashFromInvesting;
  }

  public void setCashFromInvesting(Float cashFromInvesting) {
    this.cashFromInvesting = cashFromInvesting;
  }


  public PaidMetricsInfo cashFromInvestingDelta(Float cashFromInvestingDelta) {
    this.cashFromInvestingDelta = cashFromInvestingDelta;
    return this;
  }

  /**
   * change in cash from investing
   * @return cashFromInvestingDelta
   */
  @javax.annotation.Nullable
  public Float getCashFromInvestingDelta() {
    return cashFromInvestingDelta;
  }

  public void setCashFromInvestingDelta(Float cashFromInvestingDelta) {
    this.cashFromInvestingDelta = cashFromInvestingDelta;
  }


  public PaidMetricsInfo cashFromFinancing(Float cashFromFinancing) {
    this.cashFromFinancing = cashFromFinancing;
    return this;
  }

  /**
   * cash from financing/em&gt;
   * @return cashFromFinancing
   */
  @javax.annotation.Nullable
  public Float getCashFromFinancing() {
    return cashFromFinancing;
  }

  public void setCashFromFinancing(Float cashFromFinancing) {
    this.cashFromFinancing = cashFromFinancing;
  }


  public PaidMetricsInfo cashFromFinancingDelta(Float cashFromFinancingDelta) {
    this.cashFromFinancingDelta = cashFromFinancingDelta;
    return this;
  }

  /**
   * change in cash from financing
   * @return cashFromFinancingDelta
   */
  @javax.annotation.Nullable
  public Float getCashFromFinancingDelta() {
    return cashFromFinancingDelta;
  }

  public void setCashFromFinancingDelta(Float cashFromFinancingDelta) {
    this.cashFromFinancingDelta = cashFromFinancingDelta;
  }


  public PaidMetricsInfo netChangeInCash(Float netChangeInCash) {
    this.netChangeInCash = netChangeInCash;
    return this;
  }

  /**
   * net change in cash
   * @return netChangeInCash
   */
  @javax.annotation.Nullable
  public Float getNetChangeInCash() {
    return netChangeInCash;
  }

  public void setNetChangeInCash(Float netChangeInCash) {
    this.netChangeInCash = netChangeInCash;
  }


  public PaidMetricsInfo netChangeInCashDelta(Float netChangeInCashDelta) {
    this.netChangeInCashDelta = netChangeInCashDelta;
    return this;
  }

  /**
   * change in net change in cash
   * @return netChangeInCashDelta
   */
  @javax.annotation.Nullable
  public Float getNetChangeInCashDelta() {
    return netChangeInCashDelta;
  }

  public void setNetChangeInCashDelta(Float netChangeInCashDelta) {
    this.netChangeInCashDelta = netChangeInCashDelta;
  }


  public PaidMetricsInfo freeCashFlow(Float freeCashFlow) {
    this.freeCashFlow = freeCashFlow;
    return this;
  }

  /**
   * free cash flow value
   * @return freeCashFlow
   */
  @javax.annotation.Nullable
  public Float getFreeCashFlow() {
    return freeCashFlow;
  }

  public void setFreeCashFlow(Float freeCashFlow) {
    this.freeCashFlow = freeCashFlow;
  }


  public PaidMetricsInfo freeCashFlowDelta(Float freeCashFlowDelta) {
    this.freeCashFlowDelta = freeCashFlowDelta;
    return this;
  }

  /**
   * change in free cash flow
   * @return freeCashFlowDelta
   */
  @javax.annotation.Nullable
  public Float getFreeCashFlowDelta() {
    return freeCashFlowDelta;
  }

  public void setFreeCashFlowDelta(Float freeCashFlowDelta) {
    this.freeCashFlowDelta = freeCashFlowDelta;
  }


  public PaidMetricsInfo pos1(BigDecimal pos1) {
    this.pos1 = pos1;
    return this;
  }

  /**
   * number of paid SERPs where the domain ranks #1
   * @return pos1
   */
  @javax.annotation.Nullable
  public BigDecimal getPos1() {
    return pos1;
  }

  public void setPos1(BigDecimal pos1) {
    this.pos1 = pos1;
  }


  public PaidMetricsInfo pos23(BigDecimal pos23) {
    this.pos23 = pos23;
    return this;
  }

  /**
   * number of paid SERPs where the domain ranks #2-3
   * @return pos23
   */
  @javax.annotation.Nullable
  public BigDecimal getPos23() {
    return pos23;
  }

  public void setPos23(BigDecimal pos23) {
    this.pos23 = pos23;
  }


  public PaidMetricsInfo pos410(BigDecimal pos410) {
    this.pos410 = pos410;
    return this;
  }

  /**
   * number of paid SERPs where the domain ranks #4-10
   * @return pos410
   */
  @javax.annotation.Nullable
  public BigDecimal getPos410() {
    return pos410;
  }

  public void setPos410(BigDecimal pos410) {
    this.pos410 = pos410;
  }


  public PaidMetricsInfo pos1120(BigDecimal pos1120) {
    this.pos1120 = pos1120;
    return this;
  }

  /**
   * number of paid SERPs where the domain ranks #11-20
   * @return pos1120
   */
  @javax.annotation.Nullable
  public BigDecimal getPos1120() {
    return pos1120;
  }

  public void setPos1120(BigDecimal pos1120) {
    this.pos1120 = pos1120;
  }


  public PaidMetricsInfo pos2130(BigDecimal pos2130) {
    this.pos2130 = pos2130;
    return this;
  }

  /**
   * number of paid SERPs where the domain ranks #21-30
   * @return pos2130
   */
  @javax.annotation.Nullable
  public BigDecimal getPos2130() {
    return pos2130;
  }

  public void setPos2130(BigDecimal pos2130) {
    this.pos2130 = pos2130;
  }


  public PaidMetricsInfo pos3140(BigDecimal pos3140) {
    this.pos3140 = pos3140;
    return this;
  }

  /**
   * number of paid SERPs where the domain ranks #31-40
   * @return pos3140
   */
  @javax.annotation.Nullable
  public BigDecimal getPos3140() {
    return pos3140;
  }

  public void setPos3140(BigDecimal pos3140) {
    this.pos3140 = pos3140;
  }


  public PaidMetricsInfo pos4150(BigDecimal pos4150) {
    this.pos4150 = pos4150;
    return this;
  }

  /**
   * number of paid SERPs where the domain ranks #41-50
   * @return pos4150
   */
  @javax.annotation.Nullable
  public BigDecimal getPos4150() {
    return pos4150;
  }

  public void setPos4150(BigDecimal pos4150) {
    this.pos4150 = pos4150;
  }


  public PaidMetricsInfo pos5160(BigDecimal pos5160) {
    this.pos5160 = pos5160;
    return this;
  }

  /**
   * number of paid SERPs where the domain ranks #51-60
   * @return pos5160
   */
  @javax.annotation.Nullable
  public BigDecimal getPos5160() {
    return pos5160;
  }

  public void setPos5160(BigDecimal pos5160) {
    this.pos5160 = pos5160;
  }


  public PaidMetricsInfo pos6170(BigDecimal pos6170) {
    this.pos6170 = pos6170;
    return this;
  }

  /**
   * number of paid SERPs where the domain ranks #61-70
   * @return pos6170
   */
  @javax.annotation.Nullable
  public BigDecimal getPos6170() {
    return pos6170;
  }

  public void setPos6170(BigDecimal pos6170) {
    this.pos6170 = pos6170;
  }


  public PaidMetricsInfo pos7180(BigDecimal pos7180) {
    this.pos7180 = pos7180;
    return this;
  }

  /**
   * number of paid SERPs where the domain ranks #71-80
   * @return pos7180
   */
  @javax.annotation.Nullable
  public BigDecimal getPos7180() {
    return pos7180;
  }

  public void setPos7180(BigDecimal pos7180) {
    this.pos7180 = pos7180;
  }


  public PaidMetricsInfo pos8190(BigDecimal pos8190) {
    this.pos8190 = pos8190;
    return this;
  }

  /**
   * number of paid SERPs where the domain ranks #81-90
   * @return pos8190
   */
  @javax.annotation.Nullable
  public BigDecimal getPos8190() {
    return pos8190;
  }

  public void setPos8190(BigDecimal pos8190) {
    this.pos8190 = pos8190;
  }


  public PaidMetricsInfo pos91100(BigDecimal pos91100) {
    this.pos91100 = pos91100;
    return this;
  }

  /**
   * number of paid SERPs where the domain ranks #91-100
   * @return pos91100
   */
  @javax.annotation.Nullable
  public BigDecimal getPos91100() {
    return pos91100;
  }

  public void setPos91100(BigDecimal pos91100) {
    this.pos91100 = pos91100;
  }


  public PaidMetricsInfo etv(Float etv) {
    this.etv = etv;
    return this;
  }

  /**
   * estimated traffic volume estimated paid monthly traffic to the domain calculated as the product of CTR (click-through-rate) and search volume values of all keywords the domain ranks for learn more about how the metric is calculated in this help center article
   * @return etv
   */
  @javax.annotation.Nullable
  public Float getEtv() {
    return etv;
  }

  public void setEtv(Float etv) {
    this.etv = etv;
  }


  public PaidMetricsInfo count(BigDecimal count) {
    this.count = count;
    return this;
  }

  /**
   * total count of paid SERPs that contain the domain
   * @return count
   */
  @javax.annotation.Nullable
  public BigDecimal getCount() {
    return count;
  }

  public void setCount(BigDecimal count) {
    this.count = count;
  }


  public PaidMetricsInfo estimatedPaidTrafficCost(Float estimatedPaidTrafficCost) {
    this.estimatedPaidTrafficCost = estimatedPaidTrafficCost;
    return this;
  }

  /**
   * estimated cost of monthly search traffic represents the estimated cost of paid monthly traffic (USD) based on etv and cpc values learn more about how the metric is calculated in this help center article
   * @return estimatedPaidTrafficCost
   */
  @javax.annotation.Nullable
  public Float getEstimatedPaidTrafficCost() {
    return estimatedPaidTrafficCost;
  }

  public void setEstimatedPaidTrafficCost(Float estimatedPaidTrafficCost) {
    this.estimatedPaidTrafficCost = estimatedPaidTrafficCost;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the PaidMetricsInfo instance itself
   */
  public PaidMetricsInfo putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PaidMetricsInfo paidMetricsInfo = (PaidMetricsInfo) o;
    return Objects.equals(this.type, paidMetricsInfo.type) &&
        Objects.equals(this.timestamp, paidMetricsInfo.timestamp) &&
        Objects.equals(this.revenue, paidMetricsInfo.revenue) &&
        Objects.equals(this.revenueDelta, paidMetricsInfo.revenueDelta) &&
        Objects.equals(this.operatingExpense, paidMetricsInfo.operatingExpense) &&
        Objects.equals(this.operatingExpenseDelta, paidMetricsInfo.operatingExpenseDelta) &&
        Objects.equals(this.netIncome, paidMetricsInfo.netIncome) &&
        Objects.equals(this.netIncomeDelta, paidMetricsInfo.netIncomeDelta) &&
        Objects.equals(this.netProfitMargin, paidMetricsInfo.netProfitMargin) &&
        Objects.equals(this.netProfitMarginDelta, paidMetricsInfo.netProfitMarginDelta) &&
        Objects.equals(this.earningsPerShare, paidMetricsInfo.earningsPerShare) &&
        Objects.equals(this.earningsPerShareDelta, paidMetricsInfo.earningsPerShareDelta) &&
        Objects.equals(this.ebitda, paidMetricsInfo.ebitda) &&
        Objects.equals(this.ebitdaDelta, paidMetricsInfo.ebitdaDelta) &&
        Objects.equals(this.effectiveTaxRate, paidMetricsInfo.effectiveTaxRate) &&
        Objects.equals(this.cashAndShortTermInvestments, paidMetricsInfo.cashAndShortTermInvestments) &&
        Objects.equals(this.cashAndShortTermInvestmentsDelta, paidMetricsInfo.cashAndShortTermInvestmentsDelta) &&
        Objects.equals(this.totalAssets, paidMetricsInfo.totalAssets) &&
        Objects.equals(this.totalAssetsDelta, paidMetricsInfo.totalAssetsDelta) &&
        Objects.equals(this.totalLiabilities, paidMetricsInfo.totalLiabilities) &&
        Objects.equals(this.totalLiabilitiesDelta, paidMetricsInfo.totalLiabilitiesDelta) &&
        Objects.equals(this.totalEquity, paidMetricsInfo.totalEquity) &&
        Objects.equals(this.sharesOutstanding, paidMetricsInfo.sharesOutstanding) &&
        Objects.equals(this.priceToBook, paidMetricsInfo.priceToBook) &&
        Objects.equals(this.returnOnAssets, paidMetricsInfo.returnOnAssets) &&
        Objects.equals(this.returnOnCapital, paidMetricsInfo.returnOnCapital) &&
        Objects.equals(this.cashFromOperations, paidMetricsInfo.cashFromOperations) &&
        Objects.equals(this.cashFromOperationsDelta, paidMetricsInfo.cashFromOperationsDelta) &&
        Objects.equals(this.cashFromInvesting, paidMetricsInfo.cashFromInvesting) &&
        Objects.equals(this.cashFromInvestingDelta, paidMetricsInfo.cashFromInvestingDelta) &&
        Objects.equals(this.cashFromFinancing, paidMetricsInfo.cashFromFinancing) &&
        Objects.equals(this.cashFromFinancingDelta, paidMetricsInfo.cashFromFinancingDelta) &&
        Objects.equals(this.netChangeInCash, paidMetricsInfo.netChangeInCash) &&
        Objects.equals(this.netChangeInCashDelta, paidMetricsInfo.netChangeInCashDelta) &&
        Objects.equals(this.freeCashFlow, paidMetricsInfo.freeCashFlow) &&
        Objects.equals(this.freeCashFlowDelta, paidMetricsInfo.freeCashFlowDelta) &&
        Objects.equals(this.pos1, paidMetricsInfo.pos1) &&
        Objects.equals(this.pos23, paidMetricsInfo.pos23) &&
        Objects.equals(this.pos410, paidMetricsInfo.pos410) &&
        Objects.equals(this.pos1120, paidMetricsInfo.pos1120) &&
        Objects.equals(this.pos2130, paidMetricsInfo.pos2130) &&
        Objects.equals(this.pos3140, paidMetricsInfo.pos3140) &&
        Objects.equals(this.pos4150, paidMetricsInfo.pos4150) &&
        Objects.equals(this.pos5160, paidMetricsInfo.pos5160) &&
        Objects.equals(this.pos6170, paidMetricsInfo.pos6170) &&
        Objects.equals(this.pos7180, paidMetricsInfo.pos7180) &&
        Objects.equals(this.pos8190, paidMetricsInfo.pos8190) &&
        Objects.equals(this.pos91100, paidMetricsInfo.pos91100) &&
        Objects.equals(this.etv, paidMetricsInfo.etv) &&
        Objects.equals(this.count, paidMetricsInfo.count) &&
        Objects.equals(this.estimatedPaidTrafficCost, paidMetricsInfo.estimatedPaidTrafficCost)&&
        Objects.equals(this.additionalProperties, paidMetricsInfo.additionalProperties);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(type, timestamp, revenue, revenueDelta, operatingExpense, operatingExpenseDelta, netIncome, netIncomeDelta, netProfitMargin, netProfitMarginDelta, earningsPerShare, earningsPerShareDelta, ebitda, ebitdaDelta, effectiveTaxRate, cashAndShortTermInvestments, cashAndShortTermInvestmentsDelta, totalAssets, totalAssetsDelta, totalLiabilities, totalLiabilitiesDelta, totalEquity, sharesOutstanding, priceToBook, returnOnAssets, returnOnCapital, cashFromOperations, cashFromOperationsDelta, cashFromInvesting, cashFromInvestingDelta, cashFromFinancing, cashFromFinancingDelta, netChangeInCash, netChangeInCashDelta, freeCashFlow, freeCashFlowDelta, pos1, pos23, pos410, pos1120, pos2130, pos3140, pos4150, pos5160, pos6170, pos7180, pos8190, pos91100, etv, count, estimatedPaidTrafficCost, additionalProperties);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PaidMetricsInfo {\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    timestamp: ").append(toIndentedString(timestamp)).append("\n");
    sb.append("    revenue: ").append(toIndentedString(revenue)).append("\n");
    sb.append("    revenueDelta: ").append(toIndentedString(revenueDelta)).append("\n");
    sb.append("    operatingExpense: ").append(toIndentedString(operatingExpense)).append("\n");
    sb.append("    operatingExpenseDelta: ").append(toIndentedString(operatingExpenseDelta)).append("\n");
    sb.append("    netIncome: ").append(toIndentedString(netIncome)).append("\n");
    sb.append("    netIncomeDelta: ").append(toIndentedString(netIncomeDelta)).append("\n");
    sb.append("    netProfitMargin: ").append(toIndentedString(netProfitMargin)).append("\n");
    sb.append("    netProfitMarginDelta: ").append(toIndentedString(netProfitMarginDelta)).append("\n");
    sb.append("    earningsPerShare: ").append(toIndentedString(earningsPerShare)).append("\n");
    sb.append("    earningsPerShareDelta: ").append(toIndentedString(earningsPerShareDelta)).append("\n");
    sb.append("    ebitda: ").append(toIndentedString(ebitda)).append("\n");
    sb.append("    ebitdaDelta: ").append(toIndentedString(ebitdaDelta)).append("\n");
    sb.append("    effectiveTaxRate: ").append(toIndentedString(effectiveTaxRate)).append("\n");
    sb.append("    cashAndShortTermInvestments: ").append(toIndentedString(cashAndShortTermInvestments)).append("\n");
    sb.append("    cashAndShortTermInvestmentsDelta: ").append(toIndentedString(cashAndShortTermInvestmentsDelta)).append("\n");
    sb.append("    totalAssets: ").append(toIndentedString(totalAssets)).append("\n");
    sb.append("    totalAssetsDelta: ").append(toIndentedString(totalAssetsDelta)).append("\n");
    sb.append("    totalLiabilities: ").append(toIndentedString(totalLiabilities)).append("\n");
    sb.append("    totalLiabilitiesDelta: ").append(toIndentedString(totalLiabilitiesDelta)).append("\n");
    sb.append("    totalEquity: ").append(toIndentedString(totalEquity)).append("\n");
    sb.append("    sharesOutstanding: ").append(toIndentedString(sharesOutstanding)).append("\n");
    sb.append("    priceToBook: ").append(toIndentedString(priceToBook)).append("\n");
    sb.append("    returnOnAssets: ").append(toIndentedString(returnOnAssets)).append("\n");
    sb.append("    returnOnCapital: ").append(toIndentedString(returnOnCapital)).append("\n");
    sb.append("    cashFromOperations: ").append(toIndentedString(cashFromOperations)).append("\n");
    sb.append("    cashFromOperationsDelta: ").append(toIndentedString(cashFromOperationsDelta)).append("\n");
    sb.append("    cashFromInvesting: ").append(toIndentedString(cashFromInvesting)).append("\n");
    sb.append("    cashFromInvestingDelta: ").append(toIndentedString(cashFromInvestingDelta)).append("\n");
    sb.append("    cashFromFinancing: ").append(toIndentedString(cashFromFinancing)).append("\n");
    sb.append("    cashFromFinancingDelta: ").append(toIndentedString(cashFromFinancingDelta)).append("\n");
    sb.append("    netChangeInCash: ").append(toIndentedString(netChangeInCash)).append("\n");
    sb.append("    netChangeInCashDelta: ").append(toIndentedString(netChangeInCashDelta)).append("\n");
    sb.append("    freeCashFlow: ").append(toIndentedString(freeCashFlow)).append("\n");
    sb.append("    freeCashFlowDelta: ").append(toIndentedString(freeCashFlowDelta)).append("\n");
    sb.append("    pos1: ").append(toIndentedString(pos1)).append("\n");
    sb.append("    pos23: ").append(toIndentedString(pos23)).append("\n");
    sb.append("    pos410: ").append(toIndentedString(pos410)).append("\n");
    sb.append("    pos1120: ").append(toIndentedString(pos1120)).append("\n");
    sb.append("    pos2130: ").append(toIndentedString(pos2130)).append("\n");
    sb.append("    pos3140: ").append(toIndentedString(pos3140)).append("\n");
    sb.append("    pos4150: ").append(toIndentedString(pos4150)).append("\n");
    sb.append("    pos5160: ").append(toIndentedString(pos5160)).append("\n");
    sb.append("    pos6170: ").append(toIndentedString(pos6170)).append("\n");
    sb.append("    pos7180: ").append(toIndentedString(pos7180)).append("\n");
    sb.append("    pos8190: ").append(toIndentedString(pos8190)).append("\n");
    sb.append("    pos91100: ").append(toIndentedString(pos91100)).append("\n");
    sb.append("    etv: ").append(toIndentedString(etv)).append("\n");
    sb.append("    count: ").append(toIndentedString(count)).append("\n");
    sb.append("    estimatedPaidTrafficCost: ").append(toIndentedString(estimatedPaidTrafficCost)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("type");
    openapiFields.add("timestamp");
    openapiFields.add("revenue");
    openapiFields.add("revenue_delta");
    openapiFields.add("operating_expense");
    openapiFields.add("operating_expense_delta");
    openapiFields.add("net_income");
    openapiFields.add("net_income_delta");
    openapiFields.add("net_profit_margin");
    openapiFields.add("net_profit_margin_delta");
    openapiFields.add("earnings_per_share");
    openapiFields.add("earnings_per_share_delta");
    openapiFields.add("ebitda");
    openapiFields.add("ebitda_delta");
    openapiFields.add("effective_tax_rate");
    openapiFields.add("cash_and_short_term_investments");
    openapiFields.add("cash_and_short_term_investments_delta");
    openapiFields.add("total_assets");
    openapiFields.add("total_assets_delta");
    openapiFields.add("total_liabilities");
    openapiFields.add("total_liabilities_delta");
    openapiFields.add("total_equity");
    openapiFields.add("shares_outstanding");
    openapiFields.add("price_to_book");
    openapiFields.add("return_on_assets");
    openapiFields.add("return_on_capital");
    openapiFields.add("cash_from_operations");
    openapiFields.add("cash_from_operations_delta");
    openapiFields.add("cash_from_investing");
    openapiFields.add("cash_from_investing_delta");
    openapiFields.add("cash_from_financing");
    openapiFields.add("cash_from_financing_delta");
    openapiFields.add("net_change_in_cash");
    openapiFields.add("net_change_in_cash_delta");
    openapiFields.add("free_cash_flow");
    openapiFields.add("free_cash_flow_delta");
    openapiFields.add("pos_1");
    openapiFields.add("pos_2_3");
    openapiFields.add("pos_4_10");
    openapiFields.add("pos_11_20");
    openapiFields.add("pos_21_30");
    openapiFields.add("pos_31_40");
    openapiFields.add("pos_41_50");
    openapiFields.add("pos_51_60");
    openapiFields.add("pos_61_70");
    openapiFields.add("pos_71_80");
    openapiFields.add("pos_81_90");
    openapiFields.add("pos_91_100");
    openapiFields.add("etv");
    openapiFields.add("count");
    openapiFields.add("estimated_paid_traffic_cost");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to PaidMetricsInfo
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!PaidMetricsInfo.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in PaidMetricsInfo is not found in the empty JSON string", PaidMetricsInfo.openapiRequiredFields.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("type") != null && !jsonObj.get("type").isJsonNull()) && !jsonObj.get("type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("type").toString()));
      }
      if ((jsonObj.get("timestamp") != null && !jsonObj.get("timestamp").isJsonNull()) && !jsonObj.get("timestamp").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `timestamp` to be a primitive type in the JSON string but got `%s`", jsonObj.get("timestamp").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!PaidMetricsInfo.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'PaidMetricsInfo' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<PaidMetricsInfo> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(PaidMetricsInfo.class));

       return (TypeAdapter<T>) new TypeAdapter<PaidMetricsInfo>() {
           @Override
           public void write(JsonWriter out, PaidMetricsInfo value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additional properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   JsonElement jsonElement = gson.toJsonTree(entry.getValue());
                   if (jsonElement.isJsonArray()) {
                     obj.add(entry.getKey(), jsonElement.getAsJsonArray());
                   } else {
                     obj.add(entry.getKey(), jsonElement.getAsJsonObject());
                   }
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public PaidMetricsInfo read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             JsonObject jsonObj = jsonElement.getAsJsonObject();
             // store additional fields in the deserialized instance
             PaidMetricsInfo instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of PaidMetricsInfo given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of PaidMetricsInfo
   * @throws IOException if the JSON string is invalid with respect to PaidMetricsInfo
   */
  public static PaidMetricsInfo fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, PaidMetricsInfo.class);
  }

  /**
   * Convert an instance of PaidMetricsInfo to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

