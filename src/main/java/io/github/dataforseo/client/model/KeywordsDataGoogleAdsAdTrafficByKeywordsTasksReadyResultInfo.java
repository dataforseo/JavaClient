/*
 * DataForSEO API documentation
 * DataForSEO API is the starting point on your journey towards building powerful SEO software. With DataForSEO you can get all the data you need to build an efficient application while also saving your time and budget. DataForSEO API is using the REST technology for interchanging data between your application and our service. The data exchange is made through the widely used HTTP protocol, which allows applying our API to almost all programming languages.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.dataforseo.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import io.github.dataforseo.client.JSON;

/**
 * KeywordsDataGoogleAdsAdTrafficByKeywordsTasksReadyResultInfo
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-03-10T21:39:12.196275300+02:00[Europe/Kiev]", comments = "Generator version: 7.8.0")
public class KeywordsDataGoogleAdsAdTrafficByKeywordsTasksReadyResultInfo {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_SE = "se";
  @SerializedName(SERIALIZED_NAME_SE)
  private String se;

  public static final String SERIALIZED_NAME_FUNCTION = "function";
  @SerializedName(SERIALIZED_NAME_FUNCTION)
  private String function;

  public static final String SERIALIZED_NAME_DATE_POSTED = "date_posted";
  @SerializedName(SERIALIZED_NAME_DATE_POSTED)
  private String datePosted;

  public static final String SERIALIZED_NAME_TAG = "tag";
  @SerializedName(SERIALIZED_NAME_TAG)
  private String tag;

  public static final String SERIALIZED_NAME_ENDPOINT = "endpoint";
  @SerializedName(SERIALIZED_NAME_ENDPOINT)
  private String endpoint;

  public KeywordsDataGoogleAdsAdTrafficByKeywordsTasksReadyResultInfo() {
  }

  public KeywordsDataGoogleAdsAdTrafficByKeywordsTasksReadyResultInfo id(String id) {
    this.id = id;
    return this;
  }

  /**
   * task identifier of the completed task unique task identifier in our system in the UUID format
   * @return id
   */
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }


  public KeywordsDataGoogleAdsAdTrafficByKeywordsTasksReadyResultInfo se(String se) {
    this.se = se;
    return this;
  }

  /**
   * search engine specified when setting the task
   * @return se
   */
  @javax.annotation.Nullable
  public String getSe() {
    return se;
  }

  public void setSe(String se) {
    this.se = se;
  }


  public KeywordsDataGoogleAdsAdTrafficByKeywordsTasksReadyResultInfo function(String function) {
    this.function = function;
    return this;
  }

  /**
   * type of the task
   * @return function
   */
  @javax.annotation.Nullable
  public String getFunction() {
    return function;
  }

  public void setFunction(String function) {
    this.function = function;
  }


  public KeywordsDataGoogleAdsAdTrafficByKeywordsTasksReadyResultInfo datePosted(String datePosted) {
    this.datePosted = datePosted;
    return this;
  }

  /**
   * date when the task was posted (in the UTC format)
   * @return datePosted
   */
  @javax.annotation.Nullable
  public String getDatePosted() {
    return datePosted;
  }

  public void setDatePosted(String datePosted) {
    this.datePosted = datePosted;
  }


  public KeywordsDataGoogleAdsAdTrafficByKeywordsTasksReadyResultInfo tag(String tag) {
    this.tag = tag;
    return this;
  }

  /**
   * user-defined task identifier
   * @return tag
   */
  @javax.annotation.Nullable
  public String getTag() {
    return tag;
  }

  public void setTag(String tag) {
    this.tag = tag;
  }


  public KeywordsDataGoogleAdsAdTrafficByKeywordsTasksReadyResultInfo endpoint(String endpoint) {
    this.endpoint = endpoint;
    return this;
  }

  /**
   * URL for collecting the results of the task
   * @return endpoint
   */
  @javax.annotation.Nullable
  public String getEndpoint() {
    return endpoint;
  }

  public void setEndpoint(String endpoint) {
    this.endpoint = endpoint;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the KeywordsDataGoogleAdsAdTrafficByKeywordsTasksReadyResultInfo instance itself
   */
  public KeywordsDataGoogleAdsAdTrafficByKeywordsTasksReadyResultInfo putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    KeywordsDataGoogleAdsAdTrafficByKeywordsTasksReadyResultInfo keywordsDataGoogleAdsAdTrafficByKeywordsTasksReadyResultInfo = (KeywordsDataGoogleAdsAdTrafficByKeywordsTasksReadyResultInfo) o;
    return Objects.equals(this.id, keywordsDataGoogleAdsAdTrafficByKeywordsTasksReadyResultInfo.id) &&
        Objects.equals(this.se, keywordsDataGoogleAdsAdTrafficByKeywordsTasksReadyResultInfo.se) &&
        Objects.equals(this.function, keywordsDataGoogleAdsAdTrafficByKeywordsTasksReadyResultInfo.function) &&
        Objects.equals(this.datePosted, keywordsDataGoogleAdsAdTrafficByKeywordsTasksReadyResultInfo.datePosted) &&
        Objects.equals(this.tag, keywordsDataGoogleAdsAdTrafficByKeywordsTasksReadyResultInfo.tag) &&
        Objects.equals(this.endpoint, keywordsDataGoogleAdsAdTrafficByKeywordsTasksReadyResultInfo.endpoint)&&
        Objects.equals(this.additionalProperties, keywordsDataGoogleAdsAdTrafficByKeywordsTasksReadyResultInfo.additionalProperties);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, se, function, datePosted, tag, endpoint, additionalProperties);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class KeywordsDataGoogleAdsAdTrafficByKeywordsTasksReadyResultInfo {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    se: ").append(toIndentedString(se)).append("\n");
    sb.append("    function: ").append(toIndentedString(function)).append("\n");
    sb.append("    datePosted: ").append(toIndentedString(datePosted)).append("\n");
    sb.append("    tag: ").append(toIndentedString(tag)).append("\n");
    sb.append("    endpoint: ").append(toIndentedString(endpoint)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("id");
    openapiFields.add("se");
    openapiFields.add("function");
    openapiFields.add("date_posted");
    openapiFields.add("tag");
    openapiFields.add("endpoint");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to KeywordsDataGoogleAdsAdTrafficByKeywordsTasksReadyResultInfo
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!KeywordsDataGoogleAdsAdTrafficByKeywordsTasksReadyResultInfo.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in KeywordsDataGoogleAdsAdTrafficByKeywordsTasksReadyResultInfo is not found in the empty JSON string", KeywordsDataGoogleAdsAdTrafficByKeywordsTasksReadyResultInfo.openapiRequiredFields.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if ((jsonObj.get("se") != null && !jsonObj.get("se").isJsonNull()) && !jsonObj.get("se").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `se` to be a primitive type in the JSON string but got `%s`", jsonObj.get("se").toString()));
      }
      if ((jsonObj.get("function") != null && !jsonObj.get("function").isJsonNull()) && !jsonObj.get("function").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `function` to be a primitive type in the JSON string but got `%s`", jsonObj.get("function").toString()));
      }
      if ((jsonObj.get("date_posted") != null && !jsonObj.get("date_posted").isJsonNull()) && !jsonObj.get("date_posted").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `date_posted` to be a primitive type in the JSON string but got `%s`", jsonObj.get("date_posted").toString()));
      }
      if ((jsonObj.get("tag") != null && !jsonObj.get("tag").isJsonNull()) && !jsonObj.get("tag").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `tag` to be a primitive type in the JSON string but got `%s`", jsonObj.get("tag").toString()));
      }
      if ((jsonObj.get("endpoint") != null && !jsonObj.get("endpoint").isJsonNull()) && !jsonObj.get("endpoint").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `endpoint` to be a primitive type in the JSON string but got `%s`", jsonObj.get("endpoint").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!KeywordsDataGoogleAdsAdTrafficByKeywordsTasksReadyResultInfo.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'KeywordsDataGoogleAdsAdTrafficByKeywordsTasksReadyResultInfo' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<KeywordsDataGoogleAdsAdTrafficByKeywordsTasksReadyResultInfo> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(KeywordsDataGoogleAdsAdTrafficByKeywordsTasksReadyResultInfo.class));

       return (TypeAdapter<T>) new TypeAdapter<KeywordsDataGoogleAdsAdTrafficByKeywordsTasksReadyResultInfo>() {
           @Override
           public void write(JsonWriter out, KeywordsDataGoogleAdsAdTrafficByKeywordsTasksReadyResultInfo value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additional properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   JsonElement jsonElement = gson.toJsonTree(entry.getValue());
                   if (jsonElement.isJsonArray()) {
                     obj.add(entry.getKey(), jsonElement.getAsJsonArray());
                   } else {
                     obj.add(entry.getKey(), jsonElement.getAsJsonObject());
                   }
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public KeywordsDataGoogleAdsAdTrafficByKeywordsTasksReadyResultInfo read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             JsonObject jsonObj = jsonElement.getAsJsonObject();
             // store additional fields in the deserialized instance
             KeywordsDataGoogleAdsAdTrafficByKeywordsTasksReadyResultInfo instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of KeywordsDataGoogleAdsAdTrafficByKeywordsTasksReadyResultInfo given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of KeywordsDataGoogleAdsAdTrafficByKeywordsTasksReadyResultInfo
   * @throws IOException if the JSON string is invalid with respect to KeywordsDataGoogleAdsAdTrafficByKeywordsTasksReadyResultInfo
   */
  public static KeywordsDataGoogleAdsAdTrafficByKeywordsTasksReadyResultInfo fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, KeywordsDataGoogleAdsAdTrafficByKeywordsTasksReadyResultInfo.class);
  }

  /**
   * Convert an instance of KeywordsDataGoogleAdsAdTrafficByKeywordsTasksReadyResultInfo to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

