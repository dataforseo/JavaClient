/*
 * DataForSEO API documentation
 * DataForSEO API is the starting point on your journey towards building powerful SEO software. With DataForSEO you can get all the data you need to build an efficient application while also saving your time and budget. DataForSEO API is using the REST technology for interchanging data between your application and our service. The data exchange is made through the widely used HTTP protocol, which allows applying our API to almost all programming languages.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.dataforseo.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.github.dataforseo.client.model.AppendixAppListingsAppDataPriceData;
import io.github.dataforseo.client.model.AppendixPriceDataInfo;
import io.github.dataforseo.client.model.AppendixProductGoogleMerchantPriceDataInfo;
import io.github.dataforseo.client.model.AppendixTaskKeywordsDataPriceDataInfo;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import io.github.dataforseo.client.JSON;

/**
 * AppendixAppDataPriceData
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-03-24T10:03:11.930414100+02:00[Europe/Kiev]", comments = "Generator version: 7.8.0")
public class AppendixAppDataPriceData {
  public static final String SERIALIZED_NAME_APP_INFO = "app_info";
  @SerializedName(SERIALIZED_NAME_APP_INFO)
  private AppendixProductGoogleMerchantPriceDataInfo appInfo;

  public static final String SERIALIZED_NAME_APP_LISTINGS = "app_listings";
  @SerializedName(SERIALIZED_NAME_APP_LISTINGS)
  private AppendixAppListingsAppDataPriceData appListings;

  public static final String SERIALIZED_NAME_APP_LIST = "app_list";
  @SerializedName(SERIALIZED_NAME_APP_LIST)
  private AppendixProductGoogleMerchantPriceDataInfo appList;

  public static final String SERIALIZED_NAME_APP_REVIEWS = "app_reviews";
  @SerializedName(SERIALIZED_NAME_APP_REVIEWS)
  private AppendixPriceDataInfo appReviews;

  public static final String SERIALIZED_NAME_APP_SEARCHES = "app_searches";
  @SerializedName(SERIALIZED_NAME_APP_SEARCHES)
  private AppendixProductGoogleMerchantPriceDataInfo appSearches;

  public static final String SERIALIZED_NAME_CATEGORIES = "categories";
  @SerializedName(SERIALIZED_NAME_CATEGORIES)
  private AppendixTaskKeywordsDataPriceDataInfo categories;

  public static final String SERIALIZED_NAME_ERRORS = "errors";
  @SerializedName(SERIALIZED_NAME_ERRORS)
  private AppendixTaskKeywordsDataPriceDataInfo errors;

  public static final String SERIALIZED_NAME_LANGUAGES = "languages";
  @SerializedName(SERIALIZED_NAME_LANGUAGES)
  private AppendixTaskKeywordsDataPriceDataInfo languages;

  public static final String SERIALIZED_NAME_LOCATIONS = "locations";
  @SerializedName(SERIALIZED_NAME_LOCATIONS)
  private AppendixTaskKeywordsDataPriceDataInfo locations;

  public static final String SERIALIZED_NAME_TASKS_READY = "tasks_ready";
  @SerializedName(SERIALIZED_NAME_TASKS_READY)
  private AppendixTaskKeywordsDataPriceDataInfo tasksReady;

  public AppendixAppDataPriceData() {
  }

  public AppendixAppDataPriceData appInfo(AppendixProductGoogleMerchantPriceDataInfo appInfo) {
    this.appInfo = appInfo;
    return this;
  }

  /**
   * Get appInfo
   * @return appInfo
   */
  @javax.annotation.Nullable
  public AppendixProductGoogleMerchantPriceDataInfo getAppInfo() {
    return appInfo;
  }

  public void setAppInfo(AppendixProductGoogleMerchantPriceDataInfo appInfo) {
    this.appInfo = appInfo;
  }


  public AppendixAppDataPriceData appListings(AppendixAppListingsAppDataPriceData appListings) {
    this.appListings = appListings;
    return this;
  }

  /**
   * Get appListings
   * @return appListings
   */
  @javax.annotation.Nullable
  public AppendixAppListingsAppDataPriceData getAppListings() {
    return appListings;
  }

  public void setAppListings(AppendixAppListingsAppDataPriceData appListings) {
    this.appListings = appListings;
  }


  public AppendixAppDataPriceData appList(AppendixProductGoogleMerchantPriceDataInfo appList) {
    this.appList = appList;
    return this;
  }

  /**
   * Get appList
   * @return appList
   */
  @javax.annotation.Nullable
  public AppendixProductGoogleMerchantPriceDataInfo getAppList() {
    return appList;
  }

  public void setAppList(AppendixProductGoogleMerchantPriceDataInfo appList) {
    this.appList = appList;
  }


  public AppendixAppDataPriceData appReviews(AppendixPriceDataInfo appReviews) {
    this.appReviews = appReviews;
    return this;
  }

  /**
   * Get appReviews
   * @return appReviews
   */
  @javax.annotation.Nullable
  public AppendixPriceDataInfo getAppReviews() {
    return appReviews;
  }

  public void setAppReviews(AppendixPriceDataInfo appReviews) {
    this.appReviews = appReviews;
  }


  public AppendixAppDataPriceData appSearches(AppendixProductGoogleMerchantPriceDataInfo appSearches) {
    this.appSearches = appSearches;
    return this;
  }

  /**
   * Get appSearches
   * @return appSearches
   */
  @javax.annotation.Nullable
  public AppendixProductGoogleMerchantPriceDataInfo getAppSearches() {
    return appSearches;
  }

  public void setAppSearches(AppendixProductGoogleMerchantPriceDataInfo appSearches) {
    this.appSearches = appSearches;
  }


  public AppendixAppDataPriceData categories(AppendixTaskKeywordsDataPriceDataInfo categories) {
    this.categories = categories;
    return this;
  }

  /**
   * Get categories
   * @return categories
   */
  @javax.annotation.Nullable
  public AppendixTaskKeywordsDataPriceDataInfo getCategories() {
    return categories;
  }

  public void setCategories(AppendixTaskKeywordsDataPriceDataInfo categories) {
    this.categories = categories;
  }


  public AppendixAppDataPriceData errors(AppendixTaskKeywordsDataPriceDataInfo errors) {
    this.errors = errors;
    return this;
  }

  /**
   * Get errors
   * @return errors
   */
  @javax.annotation.Nullable
  public AppendixTaskKeywordsDataPriceDataInfo getErrors() {
    return errors;
  }

  public void setErrors(AppendixTaskKeywordsDataPriceDataInfo errors) {
    this.errors = errors;
  }


  public AppendixAppDataPriceData languages(AppendixTaskKeywordsDataPriceDataInfo languages) {
    this.languages = languages;
    return this;
  }

  /**
   * Get languages
   * @return languages
   */
  @javax.annotation.Nullable
  public AppendixTaskKeywordsDataPriceDataInfo getLanguages() {
    return languages;
  }

  public void setLanguages(AppendixTaskKeywordsDataPriceDataInfo languages) {
    this.languages = languages;
  }


  public AppendixAppDataPriceData locations(AppendixTaskKeywordsDataPriceDataInfo locations) {
    this.locations = locations;
    return this;
  }

  /**
   * Get locations
   * @return locations
   */
  @javax.annotation.Nullable
  public AppendixTaskKeywordsDataPriceDataInfo getLocations() {
    return locations;
  }

  public void setLocations(AppendixTaskKeywordsDataPriceDataInfo locations) {
    this.locations = locations;
  }


  public AppendixAppDataPriceData tasksReady(AppendixTaskKeywordsDataPriceDataInfo tasksReady) {
    this.tasksReady = tasksReady;
    return this;
  }

  /**
   * Get tasksReady
   * @return tasksReady
   */
  @javax.annotation.Nullable
  public AppendixTaskKeywordsDataPriceDataInfo getTasksReady() {
    return tasksReady;
  }

  public void setTasksReady(AppendixTaskKeywordsDataPriceDataInfo tasksReady) {
    this.tasksReady = tasksReady;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the AppendixAppDataPriceData instance itself
   */
  public AppendixAppDataPriceData putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AppendixAppDataPriceData appendixAppDataPriceData = (AppendixAppDataPriceData) o;
    return Objects.equals(this.appInfo, appendixAppDataPriceData.appInfo) &&
        Objects.equals(this.appListings, appendixAppDataPriceData.appListings) &&
        Objects.equals(this.appList, appendixAppDataPriceData.appList) &&
        Objects.equals(this.appReviews, appendixAppDataPriceData.appReviews) &&
        Objects.equals(this.appSearches, appendixAppDataPriceData.appSearches) &&
        Objects.equals(this.categories, appendixAppDataPriceData.categories) &&
        Objects.equals(this.errors, appendixAppDataPriceData.errors) &&
        Objects.equals(this.languages, appendixAppDataPriceData.languages) &&
        Objects.equals(this.locations, appendixAppDataPriceData.locations) &&
        Objects.equals(this.tasksReady, appendixAppDataPriceData.tasksReady)&&
        Objects.equals(this.additionalProperties, appendixAppDataPriceData.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(appInfo, appListings, appList, appReviews, appSearches, categories, errors, languages, locations, tasksReady, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AppendixAppDataPriceData {\n");
    sb.append("    appInfo: ").append(toIndentedString(appInfo)).append("\n");
    sb.append("    appListings: ").append(toIndentedString(appListings)).append("\n");
    sb.append("    appList: ").append(toIndentedString(appList)).append("\n");
    sb.append("    appReviews: ").append(toIndentedString(appReviews)).append("\n");
    sb.append("    appSearches: ").append(toIndentedString(appSearches)).append("\n");
    sb.append("    categories: ").append(toIndentedString(categories)).append("\n");
    sb.append("    errors: ").append(toIndentedString(errors)).append("\n");
    sb.append("    languages: ").append(toIndentedString(languages)).append("\n");
    sb.append("    locations: ").append(toIndentedString(locations)).append("\n");
    sb.append("    tasksReady: ").append(toIndentedString(tasksReady)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("app_info");
    openapiFields.add("app_listings");
    openapiFields.add("app_list");
    openapiFields.add("app_reviews");
    openapiFields.add("app_searches");
    openapiFields.add("categories");
    openapiFields.add("errors");
    openapiFields.add("languages");
    openapiFields.add("locations");
    openapiFields.add("tasks_ready");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to AppendixAppDataPriceData
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!AppendixAppDataPriceData.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AppendixAppDataPriceData is not found in the empty JSON string", AppendixAppDataPriceData.openapiRequiredFields.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `app_info`
      if (jsonObj.get("app_info") != null && !jsonObj.get("app_info").isJsonNull()) {
        AppendixProductGoogleMerchantPriceDataInfo.validateJsonElement(jsonObj.get("app_info"));
      }
      // validate the optional field `app_listings`
      if (jsonObj.get("app_listings") != null && !jsonObj.get("app_listings").isJsonNull()) {
        AppendixAppListingsAppDataPriceData.validateJsonElement(jsonObj.get("app_listings"));
      }
      // validate the optional field `app_list`
      if (jsonObj.get("app_list") != null && !jsonObj.get("app_list").isJsonNull()) {
        AppendixProductGoogleMerchantPriceDataInfo.validateJsonElement(jsonObj.get("app_list"));
      }
      // validate the optional field `app_reviews`
      if (jsonObj.get("app_reviews") != null && !jsonObj.get("app_reviews").isJsonNull()) {
        AppendixPriceDataInfo.validateJsonElement(jsonObj.get("app_reviews"));
      }
      // validate the optional field `app_searches`
      if (jsonObj.get("app_searches") != null && !jsonObj.get("app_searches").isJsonNull()) {
        AppendixProductGoogleMerchantPriceDataInfo.validateJsonElement(jsonObj.get("app_searches"));
      }
      // validate the optional field `categories`
      if (jsonObj.get("categories") != null && !jsonObj.get("categories").isJsonNull()) {
        AppendixTaskKeywordsDataPriceDataInfo.validateJsonElement(jsonObj.get("categories"));
      }
      // validate the optional field `errors`
      if (jsonObj.get("errors") != null && !jsonObj.get("errors").isJsonNull()) {
        AppendixTaskKeywordsDataPriceDataInfo.validateJsonElement(jsonObj.get("errors"));
      }
      // validate the optional field `languages`
      if (jsonObj.get("languages") != null && !jsonObj.get("languages").isJsonNull()) {
        AppendixTaskKeywordsDataPriceDataInfo.validateJsonElement(jsonObj.get("languages"));
      }
      // validate the optional field `locations`
      if (jsonObj.get("locations") != null && !jsonObj.get("locations").isJsonNull()) {
        AppendixTaskKeywordsDataPriceDataInfo.validateJsonElement(jsonObj.get("locations"));
      }
      // validate the optional field `tasks_ready`
      if (jsonObj.get("tasks_ready") != null && !jsonObj.get("tasks_ready").isJsonNull()) {
        AppendixTaskKeywordsDataPriceDataInfo.validateJsonElement(jsonObj.get("tasks_ready"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AppendixAppDataPriceData.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AppendixAppDataPriceData' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AppendixAppDataPriceData> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AppendixAppDataPriceData.class));

       return (TypeAdapter<T>) new TypeAdapter<AppendixAppDataPriceData>() {
           @Override
           public void write(JsonWriter out, AppendixAppDataPriceData value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additional properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   JsonElement jsonElement = gson.toJsonTree(entry.getValue());
                   if (jsonElement.isJsonArray()) {
                     obj.add(entry.getKey(), jsonElement.getAsJsonArray());
                   } else {
                     obj.add(entry.getKey(), jsonElement.getAsJsonObject());
                   }
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public AppendixAppDataPriceData read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             JsonObject jsonObj = jsonElement.getAsJsonObject();
             // store additional fields in the deserialized instance
             AppendixAppDataPriceData instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of AppendixAppDataPriceData given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of AppendixAppDataPriceData
   * @throws IOException if the JSON string is invalid with respect to AppendixAppDataPriceData
   */
  public static AppendixAppDataPriceData fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AppendixAppDataPriceData.class);
  }

  /**
   * Convert an instance of AppendixAppDataPriceData to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

