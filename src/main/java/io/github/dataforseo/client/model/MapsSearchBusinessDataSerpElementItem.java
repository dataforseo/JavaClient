/*
 * DataForSEO API documentation
 * DataForSEO API is the starting point on your journey towards building powerful SEO software. With DataForSEO you can get all the data you need to build an efficient application while also saving your time and budget. DataForSEO API is using the REST technology for interchanging data between your application and our service. The data exchange is made through the widely used HTTP protocol, which allows applying our API to almost all programming languages.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.dataforseo.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.github.dataforseo.client.model.AddressInfo;
import io.github.dataforseo.client.model.BaseBusinessDataSerpElementItem;
import io.github.dataforseo.client.model.RatingInfo;
import io.github.dataforseo.client.model.WorkInfo;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import io.github.dataforseo.client.JSON;

/**
 * MapsSearchBusinessDataSerpElementItem
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-09-06T19:08:02.252153200+03:00[Europe/Kiev]", comments = "Generator version: 7.8.0")
public class MapsSearchBusinessDataSerpElementItem extends BaseBusinessDataSerpElementItem {
  public static final String SERIALIZED_NAME_DOMAIN = "domain";
  @SerializedName(SERIALIZED_NAME_DOMAIN)
  private String domain;

  public static final String SERIALIZED_NAME_TITLE = "title";
  @SerializedName(SERIALIZED_NAME_TITLE)
  private String title;

  public static final String SERIALIZED_NAME_URL = "url";
  @SerializedName(SERIALIZED_NAME_URL)
  private String url;

  public static final String SERIALIZED_NAME_RATING = "rating";
  @SerializedName(SERIALIZED_NAME_RATING)
  private RatingInfo rating;

  public static final String SERIALIZED_NAME_RATING_DISTRIBUTION = "rating_distribution";
  @SerializedName(SERIALIZED_NAME_RATING_DISTRIBUTION)
  private Map<String, Integer> ratingDistribution;

  public static final String SERIALIZED_NAME_SNIPPET = "snippet";
  @SerializedName(SERIALIZED_NAME_SNIPPET)
  private String snippet;

  public static final String SERIALIZED_NAME_ADDRESS = "address";
  @SerializedName(SERIALIZED_NAME_ADDRESS)
  private String address;

  public static final String SERIALIZED_NAME_ADDRESS_INFO = "address_info";
  @SerializedName(SERIALIZED_NAME_ADDRESS_INFO)
  private AddressInfo addressInfo;

  public static final String SERIALIZED_NAME_PLACE_ID = "place_id";
  @SerializedName(SERIALIZED_NAME_PLACE_ID)
  private String placeId;

  public static final String SERIALIZED_NAME_PHONE = "phone";
  @SerializedName(SERIALIZED_NAME_PHONE)
  private String phone;

  public static final String SERIALIZED_NAME_MAIN_IMAGE = "main_image";
  @SerializedName(SERIALIZED_NAME_MAIN_IMAGE)
  private String mainImage;

  public static final String SERIALIZED_NAME_TOTAL_PHOTOS = "total_photos";
  @SerializedName(SERIALIZED_NAME_TOTAL_PHOTOS)
  private Long totalPhotos;

  public static final String SERIALIZED_NAME_CATEGORY = "category";
  @SerializedName(SERIALIZED_NAME_CATEGORY)
  private String category;

  public static final String SERIALIZED_NAME_ADDITIONAL_CATEGORIES = "additional_categories";
  @SerializedName(SERIALIZED_NAME_ADDITIONAL_CATEGORIES)
  private List<String> additionalCategories;

  public static final String SERIALIZED_NAME_PRICE_LEVEL = "price_level";
  @SerializedName(SERIALIZED_NAME_PRICE_LEVEL)
  private String priceLevel;

  public static final String SERIALIZED_NAME_HOTEL_RATING = "hotel_rating";
  @SerializedName(SERIALIZED_NAME_HOTEL_RATING)
  private Integer hotelRating;

  public static final String SERIALIZED_NAME_CATEGORY_IDS = "category_ids";
  @SerializedName(SERIALIZED_NAME_CATEGORY_IDS)
  private List<String> categoryIds;

  public static final String SERIALIZED_NAME_WORK_HOURS = "work_hours";
  @SerializedName(SERIALIZED_NAME_WORK_HOURS)
  private WorkInfo workHours;

  public static final String SERIALIZED_NAME_FEATURE_ID = "feature_id";
  @SerializedName(SERIALIZED_NAME_FEATURE_ID)
  private String featureId;

  public static final String SERIALIZED_NAME_CID = "cid";
  @SerializedName(SERIALIZED_NAME_CID)
  private String cid;

  public static final String SERIALIZED_NAME_LATITUDE = "latitude";
  @SerializedName(SERIALIZED_NAME_LATITUDE)
  private Float latitude;

  public static final String SERIALIZED_NAME_LONGITUDE = "longitude";
  @SerializedName(SERIALIZED_NAME_LONGITUDE)
  private Float longitude;

  public static final String SERIALIZED_NAME_IS_CLAIMED = "is_claimed";
  @SerializedName(SERIALIZED_NAME_IS_CLAIMED)
  private Boolean isClaimed;

  public static final String SERIALIZED_NAME_LOCAL_JUSTIFICATIONS = "local_justifications";
  @SerializedName(SERIALIZED_NAME_LOCAL_JUSTIFICATIONS)
  private List<String> localJustifications;

  public static final String SERIALIZED_NAME_IS_DIRECTORY_ITEM = "is_directory_item";
  @SerializedName(SERIALIZED_NAME_IS_DIRECTORY_ITEM)
  private Boolean isDirectoryItem;

  public MapsSearchBusinessDataSerpElementItem() {
    this.type = this.getClass().getSimpleName();
  }

  public MapsSearchBusinessDataSerpElementItem domain(String domain) {
    this.domain = domain;
    return this;
  }

  /**
   * domain of the business entity
   * @return domain
   */
  @javax.annotation.Nullable
  public String getDomain() {
    return domain;
  }

  public void setDomain(String domain) {
    this.domain = domain;
  }


  public MapsSearchBusinessDataSerpElementItem title(String title) {
    this.title = title;
    return this;
  }

  /**
   * directory title can take the following values: At this place, Directory
   * @return title
   */
  @javax.annotation.Nullable
  public String getTitle() {
    return title;
  }

  public void setTitle(String title) {
    this.title = title;
  }


  public MapsSearchBusinessDataSerpElementItem url(String url) {
    this.url = url;
    return this;
  }

  /**
   * URL to view the menu
   * @return url
   */
  @javax.annotation.Nullable
  public String getUrl() {
    return url;
  }

  public void setUrl(String url) {
    this.url = url;
  }


  public MapsSearchBusinessDataSerpElementItem rating(RatingInfo rating) {
    this.rating = rating;
    return this;
  }

  /**
   * Get rating
   * @return rating
   */
  @javax.annotation.Nullable
  public RatingInfo getRating() {
    return rating;
  }

  public void setRating(RatingInfo rating) {
    this.rating = rating;
  }


  public MapsSearchBusinessDataSerpElementItem ratingDistribution(Map<String, Integer> ratingDistribution) {
    this.ratingDistribution = ratingDistribution;
    return this;
  }

  public MapsSearchBusinessDataSerpElementItem putRatingDistributionItem(String key, Integer ratingDistributionItem) {
    if (this.ratingDistribution == null) {
      this.ratingDistribution = new HashMap<>();
    }
    this.ratingDistribution.put(key, ratingDistributionItem);
    return this;
  }

  /**
   * the distribution of ratings of the business entity the object displays the number of 1-star to 5-star ratings, as reviewed by users
   * @return ratingDistribution
   */
  @javax.annotation.Nullable
  public Map<String, Integer> getRatingDistribution() {
    return ratingDistribution;
  }

  public void setRatingDistribution(Map<String, Integer> ratingDistribution) {
    this.ratingDistribution = ratingDistribution;
  }


  public MapsSearchBusinessDataSerpElementItem snippet(String snippet) {
    this.snippet = snippet;
    return this;
  }

  /**
   * additional information about the business entity
   * @return snippet
   */
  @javax.annotation.Nullable
  public String getSnippet() {
    return snippet;
  }

  public void setSnippet(String snippet) {
    this.snippet = snippet;
  }


  public MapsSearchBusinessDataSerpElementItem address(String address) {
    this.address = address;
    return this;
  }

  /**
   * address of the business entity
   * @return address
   */
  @javax.annotation.Nullable
  public String getAddress() {
    return address;
  }

  public void setAddress(String address) {
    this.address = address;
  }


  public MapsSearchBusinessDataSerpElementItem addressInfo(AddressInfo addressInfo) {
    this.addressInfo = addressInfo;
    return this;
  }

  /**
   * Get addressInfo
   * @return addressInfo
   */
  @javax.annotation.Nullable
  public AddressInfo getAddressInfo() {
    return addressInfo;
  }

  public void setAddressInfo(AddressInfo addressInfo) {
    this.addressInfo = addressInfo;
  }


  public MapsSearchBusinessDataSerpElementItem placeId(String placeId) {
    this.placeId = placeId;
    return this;
  }

  /**
   * unique place identifier place id of the local establishment featured in the element learn more about the identifier in this help center article
   * @return placeId
   */
  @javax.annotation.Nullable
  public String getPlaceId() {
    return placeId;
  }

  public void setPlaceId(String placeId) {
    this.placeId = placeId;
  }


  public MapsSearchBusinessDataSerpElementItem phone(String phone) {
    this.phone = phone;
    return this;
  }

  /**
   * phone number of the business entity
   * @return phone
   */
  @javax.annotation.Nullable
  public String getPhone() {
    return phone;
  }

  public void setPhone(String phone) {
    this.phone = phone;
  }


  public MapsSearchBusinessDataSerpElementItem mainImage(String mainImage) {
    this.mainImage = mainImage;
    return this;
  }

  /**
   * URL of the main image featured in Google My Business profile
   * @return mainImage
   */
  @javax.annotation.Nullable
  public String getMainImage() {
    return mainImage;
  }

  public void setMainImage(String mainImage) {
    this.mainImage = mainImage;
  }


  public MapsSearchBusinessDataSerpElementItem totalPhotos(Long totalPhotos) {
    this.totalPhotos = totalPhotos;
    return this;
  }

  /**
   * total count of images featured in Google My Business profile
   * @return totalPhotos
   */
  @javax.annotation.Nullable
  public Long getTotalPhotos() {
    return totalPhotos;
  }

  public void setTotalPhotos(Long totalPhotos) {
    this.totalPhotos = totalPhotos;
  }


  public MapsSearchBusinessDataSerpElementItem category(String category) {
    this.category = category;
    return this;
  }

  /**
   * business category Google My Business general category that best describes the services provided by the business entity
   * @return category
   */
  @javax.annotation.Nullable
  public String getCategory() {
    return category;
  }

  public void setCategory(String category) {
    this.category = category;
  }


  public MapsSearchBusinessDataSerpElementItem additionalCategories(List<String> additionalCategories) {
    this.additionalCategories = additionalCategories;
    return this;
  }

  public MapsSearchBusinessDataSerpElementItem addAdditionalCategoriesItem(String additionalCategoriesItem) {
    if (this.additionalCategories == null) {
      this.additionalCategories = new ArrayList<>();
    }
    this.additionalCategories.add(additionalCategoriesItem);
    return this;
  }

  /**
   * additional business categories additional Google My Business categories that describe the services provided by the business entity in more detail
   * @return additionalCategories
   */
  @javax.annotation.Nullable
  public List<String> getAdditionalCategories() {
    return additionalCategories;
  }

  public void setAdditionalCategories(List<String> additionalCategories) {
    this.additionalCategories = additionalCategories;
  }


  public MapsSearchBusinessDataSerpElementItem priceLevel(String priceLevel) {
    this.priceLevel = priceLevel;
    return this;
  }

  /**
   * property price level can take values: inexpensive, moderate, expensive, very_expensive if there is no price level information, the value will be null
   * @return priceLevel
   */
  @javax.annotation.Nullable
  public String getPriceLevel() {
    return priceLevel;
  }

  public void setPriceLevel(String priceLevel) {
    this.priceLevel = priceLevel;
  }


  public MapsSearchBusinessDataSerpElementItem hotelRating(Integer hotelRating) {
    this.hotelRating = hotelRating;
    return this;
  }

  /**
   * hotel class rating class ratings range between 1-5 stars, learn more if there is no hotel class rating information, the value will be null
   * @return hotelRating
   */
  @javax.annotation.Nullable
  public Integer getHotelRating() {
    return hotelRating;
  }

  public void setHotelRating(Integer hotelRating) {
    this.hotelRating = hotelRating;
  }


  public MapsSearchBusinessDataSerpElementItem categoryIds(List<String> categoryIds) {
    this.categoryIds = categoryIds;
    return this;
  }

  public MapsSearchBusinessDataSerpElementItem addCategoryIdsItem(String categoryIdsItem) {
    if (this.categoryIds == null) {
      this.categoryIds = new ArrayList<>();
    }
    this.categoryIds.add(categoryIdsItem);
    return this;
  }

  /**
   * global category IDs universal category IDs that do not change based on the selected country
   * @return categoryIds
   */
  @javax.annotation.Nullable
  public List<String> getCategoryIds() {
    return categoryIds;
  }

  public void setCategoryIds(List<String> categoryIds) {
    this.categoryIds = categoryIds;
  }


  public MapsSearchBusinessDataSerpElementItem workHours(WorkInfo workHours) {
    this.workHours = workHours;
    return this;
  }

  /**
   * Get workHours
   * @return workHours
   */
  @javax.annotation.Nullable
  public WorkInfo getWorkHours() {
    return workHours;
  }

  public void setWorkHours(WorkInfo workHours) {
    this.workHours = workHours;
  }


  public MapsSearchBusinessDataSerpElementItem featureId(String featureId) {
    this.featureId = featureId;
    return this;
  }

  /**
   * the unique identifier of the element in SERP learn more about the identifier in this help center article
   * @return featureId
   */
  @javax.annotation.Nullable
  public String getFeatureId() {
    return featureId;
  }

  public void setFeatureId(String featureId) {
    this.featureId = featureId;
  }


  public MapsSearchBusinessDataSerpElementItem cid(String cid) {
    this.cid = cid;
    return this;
  }

  /**
   * google-defined client id unique id of a local establishment; can be used with Google Reviews API to get a full list of reviews learn more about the identifier in this help center article
   * @return cid
   */
  @javax.annotation.Nullable
  public String getCid() {
    return cid;
  }

  public void setCid(String cid) {
    this.cid = cid;
  }


  public MapsSearchBusinessDataSerpElementItem latitude(Float latitude) {
    this.latitude = latitude;
    return this;
  }

  /**
   * latitude coordinate of the local establishments in google maps example: \&quot;latitude\&quot;: 51.584091
   * @return latitude
   */
  @javax.annotation.Nullable
  public Float getLatitude() {
    return latitude;
  }

  public void setLatitude(Float latitude) {
    this.latitude = latitude;
  }


  public MapsSearchBusinessDataSerpElementItem longitude(Float longitude) {
    this.longitude = longitude;
    return this;
  }

  /**
   * longitude coordinate of the local establishment in google maps example: \&quot;longitude\&quot;: -0.31365919999999997
   * @return longitude
   */
  @javax.annotation.Nullable
  public Float getLongitude() {
    return longitude;
  }

  public void setLongitude(Float longitude) {
    this.longitude = longitude;
  }


  public MapsSearchBusinessDataSerpElementItem isClaimed(Boolean isClaimed) {
    this.isClaimed = isClaimed;
    return this;
  }

  /**
   * shows whether the entity is verified by its owner on Google Maps
   * @return isClaimed
   */
  @javax.annotation.Nullable
  public Boolean getIsClaimed() {
    return isClaimed;
  }

  public void setIsClaimed(Boolean isClaimed) {
    this.isClaimed = isClaimed;
  }


  public MapsSearchBusinessDataSerpElementItem localJustifications(List<String> localJustifications) {
    this.localJustifications = localJustifications;
    return this;
  }

  public MapsSearchBusinessDataSerpElementItem addLocalJustificationsItem(String localJustificationsItem) {
    if (this.localJustifications == null) {
      this.localJustifications = new ArrayList<>();
    }
    this.localJustifications.add(localJustificationsItem);
    return this;
  }

  /**
   * Google local justifications snippets of text that “justify” why the business is showing up for search query
   * @return localJustifications
   */
  @javax.annotation.Nullable
  public List<String> getLocalJustifications() {
    return localJustifications;
  }

  public void setLocalJustifications(List<String> localJustifications) {
    this.localJustifications = localJustifications;
  }


  public MapsSearchBusinessDataSerpElementItem isDirectoryItem(Boolean isDirectoryItem) {
    this.isDirectoryItem = isDirectoryItem;
    return this;
  }

  /**
   * business establishment is a part of the directory indicates whether the business establishment is a part of the directory; if true, the item is a part of the larger directory of businesses with the same address (e.g., a mall or a business centre); note: if the business establishment is a parent item in the directory, the value will be null
   * @return isDirectoryItem
   */
  @javax.annotation.Nullable
  public Boolean getIsDirectoryItem() {
    return isDirectoryItem;
  }

  public void setIsDirectoryItem(Boolean isDirectoryItem) {
    this.isDirectoryItem = isDirectoryItem;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the MapsSearchBusinessDataSerpElementItem instance itself
   */
  public MapsSearchBusinessDataSerpElementItem putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MapsSearchBusinessDataSerpElementItem mapsSearchBusinessDataSerpElementItem = (MapsSearchBusinessDataSerpElementItem) o;
    return Objects.equals(this.domain, mapsSearchBusinessDataSerpElementItem.domain) &&
        Objects.equals(this.title, mapsSearchBusinessDataSerpElementItem.title) &&
        Objects.equals(this.url, mapsSearchBusinessDataSerpElementItem.url) &&
        Objects.equals(this.rating, mapsSearchBusinessDataSerpElementItem.rating) &&
        Objects.equals(this.ratingDistribution, mapsSearchBusinessDataSerpElementItem.ratingDistribution) &&
        Objects.equals(this.snippet, mapsSearchBusinessDataSerpElementItem.snippet) &&
        Objects.equals(this.address, mapsSearchBusinessDataSerpElementItem.address) &&
        Objects.equals(this.addressInfo, mapsSearchBusinessDataSerpElementItem.addressInfo) &&
        Objects.equals(this.placeId, mapsSearchBusinessDataSerpElementItem.placeId) &&
        Objects.equals(this.phone, mapsSearchBusinessDataSerpElementItem.phone) &&
        Objects.equals(this.mainImage, mapsSearchBusinessDataSerpElementItem.mainImage) &&
        Objects.equals(this.totalPhotos, mapsSearchBusinessDataSerpElementItem.totalPhotos) &&
        Objects.equals(this.category, mapsSearchBusinessDataSerpElementItem.category) &&
        Objects.equals(this.additionalCategories, mapsSearchBusinessDataSerpElementItem.additionalCategories) &&
        Objects.equals(this.priceLevel, mapsSearchBusinessDataSerpElementItem.priceLevel) &&
        Objects.equals(this.hotelRating, mapsSearchBusinessDataSerpElementItem.hotelRating) &&
        Objects.equals(this.categoryIds, mapsSearchBusinessDataSerpElementItem.categoryIds) &&
        Objects.equals(this.workHours, mapsSearchBusinessDataSerpElementItem.workHours) &&
        Objects.equals(this.featureId, mapsSearchBusinessDataSerpElementItem.featureId) &&
        Objects.equals(this.cid, mapsSearchBusinessDataSerpElementItem.cid) &&
        Objects.equals(this.latitude, mapsSearchBusinessDataSerpElementItem.latitude) &&
        Objects.equals(this.longitude, mapsSearchBusinessDataSerpElementItem.longitude) &&
        Objects.equals(this.isClaimed, mapsSearchBusinessDataSerpElementItem.isClaimed) &&
        Objects.equals(this.localJustifications, mapsSearchBusinessDataSerpElementItem.localJustifications) &&
        Objects.equals(this.isDirectoryItem, mapsSearchBusinessDataSerpElementItem.isDirectoryItem)&&
        Objects.equals(this.additionalProperties, mapsSearchBusinessDataSerpElementItem.additionalProperties) &&
        super.equals(o);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(domain, title, url, rating, ratingDistribution, snippet, address, addressInfo, placeId, phone, mainImage, totalPhotos, category, additionalCategories, priceLevel, hotelRating, categoryIds, workHours, featureId, cid, latitude, longitude, isClaimed, localJustifications, isDirectoryItem, super.hashCode(), additionalProperties);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MapsSearchBusinessDataSerpElementItem {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    domain: ").append(toIndentedString(domain)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    rating: ").append(toIndentedString(rating)).append("\n");
    sb.append("    ratingDistribution: ").append(toIndentedString(ratingDistribution)).append("\n");
    sb.append("    snippet: ").append(toIndentedString(snippet)).append("\n");
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("    addressInfo: ").append(toIndentedString(addressInfo)).append("\n");
    sb.append("    placeId: ").append(toIndentedString(placeId)).append("\n");
    sb.append("    phone: ").append(toIndentedString(phone)).append("\n");
    sb.append("    mainImage: ").append(toIndentedString(mainImage)).append("\n");
    sb.append("    totalPhotos: ").append(toIndentedString(totalPhotos)).append("\n");
    sb.append("    category: ").append(toIndentedString(category)).append("\n");
    sb.append("    additionalCategories: ").append(toIndentedString(additionalCategories)).append("\n");
    sb.append("    priceLevel: ").append(toIndentedString(priceLevel)).append("\n");
    sb.append("    hotelRating: ").append(toIndentedString(hotelRating)).append("\n");
    sb.append("    categoryIds: ").append(toIndentedString(categoryIds)).append("\n");
    sb.append("    workHours: ").append(toIndentedString(workHours)).append("\n");
    sb.append("    featureId: ").append(toIndentedString(featureId)).append("\n");
    sb.append("    cid: ").append(toIndentedString(cid)).append("\n");
    sb.append("    latitude: ").append(toIndentedString(latitude)).append("\n");
    sb.append("    longitude: ").append(toIndentedString(longitude)).append("\n");
    sb.append("    isClaimed: ").append(toIndentedString(isClaimed)).append("\n");
    sb.append("    localJustifications: ").append(toIndentedString(localJustifications)).append("\n");
    sb.append("    isDirectoryItem: ").append(toIndentedString(isDirectoryItem)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("type");
    openapiFields.add("rank_group");
    openapiFields.add("rank_absolute");
    openapiFields.add("domain");
    openapiFields.add("title");
    openapiFields.add("url");
    openapiFields.add("rating");
    openapiFields.add("rating_distribution");
    openapiFields.add("snippet");
    openapiFields.add("address");
    openapiFields.add("address_info");
    openapiFields.add("place_id");
    openapiFields.add("phone");
    openapiFields.add("main_image");
    openapiFields.add("total_photos");
    openapiFields.add("category");
    openapiFields.add("additional_categories");
    openapiFields.add("price_level");
    openapiFields.add("hotel_rating");
    openapiFields.add("category_ids");
    openapiFields.add("work_hours");
    openapiFields.add("feature_id");
    openapiFields.add("cid");
    openapiFields.add("latitude");
    openapiFields.add("longitude");
    openapiFields.add("is_claimed");
    openapiFields.add("local_justifications");
    openapiFields.add("is_directory_item");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to MapsSearchBusinessDataSerpElementItem
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!MapsSearchBusinessDataSerpElementItem.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in MapsSearchBusinessDataSerpElementItem is not found in the empty JSON string", MapsSearchBusinessDataSerpElementItem.openapiRequiredFields.toString()));
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!MapsSearchBusinessDataSerpElementItem.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'MapsSearchBusinessDataSerpElementItem' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<MapsSearchBusinessDataSerpElementItem> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(MapsSearchBusinessDataSerpElementItem.class));

       return (TypeAdapter<T>) new TypeAdapter<MapsSearchBusinessDataSerpElementItem>() {
           @Override
           public void write(JsonWriter out, MapsSearchBusinessDataSerpElementItem value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additional properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   JsonElement jsonElement = gson.toJsonTree(entry.getValue());
                   if (jsonElement.isJsonArray()) {
                     obj.add(entry.getKey(), jsonElement.getAsJsonArray());
                   } else {
                     obj.add(entry.getKey(), jsonElement.getAsJsonObject());
                   }
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public MapsSearchBusinessDataSerpElementItem read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             JsonObject jsonObj = jsonElement.getAsJsonObject();
             // store additional fields in the deserialized instance
             MapsSearchBusinessDataSerpElementItem instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of MapsSearchBusinessDataSerpElementItem given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of MapsSearchBusinessDataSerpElementItem
   * @throws IOException if the JSON string is invalid with respect to MapsSearchBusinessDataSerpElementItem
   */
  public static MapsSearchBusinessDataSerpElementItem fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, MapsSearchBusinessDataSerpElementItem.class);
  }

  /**
   * Convert an instance of MapsSearchBusinessDataSerpElementItem to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

