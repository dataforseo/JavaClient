/*
 * DataForSEO API documentation
 * DataForSEO API is the starting point on your journey towards building powerful SEO software. With DataForSEO you can get all the data you need to build an efficient application while also saving your time and budget. DataForSEO API is using the REST technology for interchanging data between your application and our service. The data exchange is made through the widely used HTTP protocol, which allows applying our API to almost all programming languages.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.dataforseo.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.github.dataforseo.client.model.AppendixBingKeywordsDataPriceDataInfo;
import io.github.dataforseo.client.model.AppendixTaskKeywordsDataPriceDataInfo;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import io.github.dataforseo.client.JSON;

/**
 * AppendixTechnologiesDomainAnalyticsPriceData
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-02-11T19:55:34.761968200+02:00[Europe/Kiev]", comments = "Generator version: 7.8.0")
public class AppendixTechnologiesDomainAnalyticsPriceData {
  public static final String SERIALIZED_NAME_LANGUAGES = "languages";
  @SerializedName(SERIALIZED_NAME_LANGUAGES)
  private AppendixTaskKeywordsDataPriceDataInfo languages;

  public static final String SERIALIZED_NAME_LOCATIONS = "locations";
  @SerializedName(SERIALIZED_NAME_LOCATIONS)
  private AppendixTaskKeywordsDataPriceDataInfo locations;

  public static final String SERIALIZED_NAME_TECHNOLOGIES = "technologies";
  @SerializedName(SERIALIZED_NAME_TECHNOLOGIES)
  private AppendixTaskKeywordsDataPriceDataInfo technologies;

  public static final String SERIALIZED_NAME_AGGREGATION_TECHNOLOGIES = "aggregation_technologies";
  @SerializedName(SERIALIZED_NAME_AGGREGATION_TECHNOLOGIES)
  private AppendixBingKeywordsDataPriceDataInfo aggregationTechnologies;

  public static final String SERIALIZED_NAME_DOMAINS_BY_HTML_TERMS = "domains_by_html_terms";
  @SerializedName(SERIALIZED_NAME_DOMAINS_BY_HTML_TERMS)
  private AppendixBingKeywordsDataPriceDataInfo domainsByHtmlTerms;

  public static final String SERIALIZED_NAME_DOMAINS_BY_TECHNOLOGY = "domains_by_technology";
  @SerializedName(SERIALIZED_NAME_DOMAINS_BY_TECHNOLOGY)
  private AppendixBingKeywordsDataPriceDataInfo domainsByTechnology;

  public static final String SERIALIZED_NAME_DOMAIN_TECHNOLOGIES = "domain_technologies";
  @SerializedName(SERIALIZED_NAME_DOMAIN_TECHNOLOGIES)
  private AppendixBingKeywordsDataPriceDataInfo domainTechnologies;

  public static final String SERIALIZED_NAME_TECHNOLOGIES_SUMMARY = "technologies_summary";
  @SerializedName(SERIALIZED_NAME_TECHNOLOGIES_SUMMARY)
  private AppendixBingKeywordsDataPriceDataInfo technologiesSummary;

  public static final String SERIALIZED_NAME_TECHNOLOGY_STATS = "technology_stats";
  @SerializedName(SERIALIZED_NAME_TECHNOLOGY_STATS)
  private AppendixBingKeywordsDataPriceDataInfo technologyStats;

  public AppendixTechnologiesDomainAnalyticsPriceData() {
  }

  public AppendixTechnologiesDomainAnalyticsPriceData languages(AppendixTaskKeywordsDataPriceDataInfo languages) {
    this.languages = languages;
    return this;
  }

  /**
   * Get languages
   * @return languages
   */
  @javax.annotation.Nullable
  public AppendixTaskKeywordsDataPriceDataInfo getLanguages() {
    return languages;
  }

  public void setLanguages(AppendixTaskKeywordsDataPriceDataInfo languages) {
    this.languages = languages;
  }


  public AppendixTechnologiesDomainAnalyticsPriceData locations(AppendixTaskKeywordsDataPriceDataInfo locations) {
    this.locations = locations;
    return this;
  }

  /**
   * Get locations
   * @return locations
   */
  @javax.annotation.Nullable
  public AppendixTaskKeywordsDataPriceDataInfo getLocations() {
    return locations;
  }

  public void setLocations(AppendixTaskKeywordsDataPriceDataInfo locations) {
    this.locations = locations;
  }


  public AppendixTechnologiesDomainAnalyticsPriceData technologies(AppendixTaskKeywordsDataPriceDataInfo technologies) {
    this.technologies = technologies;
    return this;
  }

  /**
   * Get technologies
   * @return technologies
   */
  @javax.annotation.Nullable
  public AppendixTaskKeywordsDataPriceDataInfo getTechnologies() {
    return technologies;
  }

  public void setTechnologies(AppendixTaskKeywordsDataPriceDataInfo technologies) {
    this.technologies = technologies;
  }


  public AppendixTechnologiesDomainAnalyticsPriceData aggregationTechnologies(AppendixBingKeywordsDataPriceDataInfo aggregationTechnologies) {
    this.aggregationTechnologies = aggregationTechnologies;
    return this;
  }

  /**
   * Get aggregationTechnologies
   * @return aggregationTechnologies
   */
  @javax.annotation.Nullable
  public AppendixBingKeywordsDataPriceDataInfo getAggregationTechnologies() {
    return aggregationTechnologies;
  }

  public void setAggregationTechnologies(AppendixBingKeywordsDataPriceDataInfo aggregationTechnologies) {
    this.aggregationTechnologies = aggregationTechnologies;
  }


  public AppendixTechnologiesDomainAnalyticsPriceData domainsByHtmlTerms(AppendixBingKeywordsDataPriceDataInfo domainsByHtmlTerms) {
    this.domainsByHtmlTerms = domainsByHtmlTerms;
    return this;
  }

  /**
   * Get domainsByHtmlTerms
   * @return domainsByHtmlTerms
   */
  @javax.annotation.Nullable
  public AppendixBingKeywordsDataPriceDataInfo getDomainsByHtmlTerms() {
    return domainsByHtmlTerms;
  }

  public void setDomainsByHtmlTerms(AppendixBingKeywordsDataPriceDataInfo domainsByHtmlTerms) {
    this.domainsByHtmlTerms = domainsByHtmlTerms;
  }


  public AppendixTechnologiesDomainAnalyticsPriceData domainsByTechnology(AppendixBingKeywordsDataPriceDataInfo domainsByTechnology) {
    this.domainsByTechnology = domainsByTechnology;
    return this;
  }

  /**
   * Get domainsByTechnology
   * @return domainsByTechnology
   */
  @javax.annotation.Nullable
  public AppendixBingKeywordsDataPriceDataInfo getDomainsByTechnology() {
    return domainsByTechnology;
  }

  public void setDomainsByTechnology(AppendixBingKeywordsDataPriceDataInfo domainsByTechnology) {
    this.domainsByTechnology = domainsByTechnology;
  }


  public AppendixTechnologiesDomainAnalyticsPriceData domainTechnologies(AppendixBingKeywordsDataPriceDataInfo domainTechnologies) {
    this.domainTechnologies = domainTechnologies;
    return this;
  }

  /**
   * Get domainTechnologies
   * @return domainTechnologies
   */
  @javax.annotation.Nullable
  public AppendixBingKeywordsDataPriceDataInfo getDomainTechnologies() {
    return domainTechnologies;
  }

  public void setDomainTechnologies(AppendixBingKeywordsDataPriceDataInfo domainTechnologies) {
    this.domainTechnologies = domainTechnologies;
  }


  public AppendixTechnologiesDomainAnalyticsPriceData technologiesSummary(AppendixBingKeywordsDataPriceDataInfo technologiesSummary) {
    this.technologiesSummary = technologiesSummary;
    return this;
  }

  /**
   * Get technologiesSummary
   * @return technologiesSummary
   */
  @javax.annotation.Nullable
  public AppendixBingKeywordsDataPriceDataInfo getTechnologiesSummary() {
    return technologiesSummary;
  }

  public void setTechnologiesSummary(AppendixBingKeywordsDataPriceDataInfo technologiesSummary) {
    this.technologiesSummary = technologiesSummary;
  }


  public AppendixTechnologiesDomainAnalyticsPriceData technologyStats(AppendixBingKeywordsDataPriceDataInfo technologyStats) {
    this.technologyStats = technologyStats;
    return this;
  }

  /**
   * Get technologyStats
   * @return technologyStats
   */
  @javax.annotation.Nullable
  public AppendixBingKeywordsDataPriceDataInfo getTechnologyStats() {
    return technologyStats;
  }

  public void setTechnologyStats(AppendixBingKeywordsDataPriceDataInfo technologyStats) {
    this.technologyStats = technologyStats;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the AppendixTechnologiesDomainAnalyticsPriceData instance itself
   */
  public AppendixTechnologiesDomainAnalyticsPriceData putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AppendixTechnologiesDomainAnalyticsPriceData appendixTechnologiesDomainAnalyticsPriceData = (AppendixTechnologiesDomainAnalyticsPriceData) o;
    return Objects.equals(this.languages, appendixTechnologiesDomainAnalyticsPriceData.languages) &&
        Objects.equals(this.locations, appendixTechnologiesDomainAnalyticsPriceData.locations) &&
        Objects.equals(this.technologies, appendixTechnologiesDomainAnalyticsPriceData.technologies) &&
        Objects.equals(this.aggregationTechnologies, appendixTechnologiesDomainAnalyticsPriceData.aggregationTechnologies) &&
        Objects.equals(this.domainsByHtmlTerms, appendixTechnologiesDomainAnalyticsPriceData.domainsByHtmlTerms) &&
        Objects.equals(this.domainsByTechnology, appendixTechnologiesDomainAnalyticsPriceData.domainsByTechnology) &&
        Objects.equals(this.domainTechnologies, appendixTechnologiesDomainAnalyticsPriceData.domainTechnologies) &&
        Objects.equals(this.technologiesSummary, appendixTechnologiesDomainAnalyticsPriceData.technologiesSummary) &&
        Objects.equals(this.technologyStats, appendixTechnologiesDomainAnalyticsPriceData.technologyStats)&&
        Objects.equals(this.additionalProperties, appendixTechnologiesDomainAnalyticsPriceData.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(languages, locations, technologies, aggregationTechnologies, domainsByHtmlTerms, domainsByTechnology, domainTechnologies, technologiesSummary, technologyStats, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AppendixTechnologiesDomainAnalyticsPriceData {\n");
    sb.append("    languages: ").append(toIndentedString(languages)).append("\n");
    sb.append("    locations: ").append(toIndentedString(locations)).append("\n");
    sb.append("    technologies: ").append(toIndentedString(technologies)).append("\n");
    sb.append("    aggregationTechnologies: ").append(toIndentedString(aggregationTechnologies)).append("\n");
    sb.append("    domainsByHtmlTerms: ").append(toIndentedString(domainsByHtmlTerms)).append("\n");
    sb.append("    domainsByTechnology: ").append(toIndentedString(domainsByTechnology)).append("\n");
    sb.append("    domainTechnologies: ").append(toIndentedString(domainTechnologies)).append("\n");
    sb.append("    technologiesSummary: ").append(toIndentedString(technologiesSummary)).append("\n");
    sb.append("    technologyStats: ").append(toIndentedString(technologyStats)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("languages");
    openapiFields.add("locations");
    openapiFields.add("technologies");
    openapiFields.add("aggregation_technologies");
    openapiFields.add("domains_by_html_terms");
    openapiFields.add("domains_by_technology");
    openapiFields.add("domain_technologies");
    openapiFields.add("technologies_summary");
    openapiFields.add("technology_stats");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to AppendixTechnologiesDomainAnalyticsPriceData
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!AppendixTechnologiesDomainAnalyticsPriceData.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AppendixTechnologiesDomainAnalyticsPriceData is not found in the empty JSON string", AppendixTechnologiesDomainAnalyticsPriceData.openapiRequiredFields.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `languages`
      if (jsonObj.get("languages") != null && !jsonObj.get("languages").isJsonNull()) {
        AppendixTaskKeywordsDataPriceDataInfo.validateJsonElement(jsonObj.get("languages"));
      }
      // validate the optional field `locations`
      if (jsonObj.get("locations") != null && !jsonObj.get("locations").isJsonNull()) {
        AppendixTaskKeywordsDataPriceDataInfo.validateJsonElement(jsonObj.get("locations"));
      }
      // validate the optional field `technologies`
      if (jsonObj.get("technologies") != null && !jsonObj.get("technologies").isJsonNull()) {
        AppendixTaskKeywordsDataPriceDataInfo.validateJsonElement(jsonObj.get("technologies"));
      }
      // validate the optional field `aggregation_technologies`
      if (jsonObj.get("aggregation_technologies") != null && !jsonObj.get("aggregation_technologies").isJsonNull()) {
        AppendixBingKeywordsDataPriceDataInfo.validateJsonElement(jsonObj.get("aggregation_technologies"));
      }
      // validate the optional field `domains_by_html_terms`
      if (jsonObj.get("domains_by_html_terms") != null && !jsonObj.get("domains_by_html_terms").isJsonNull()) {
        AppendixBingKeywordsDataPriceDataInfo.validateJsonElement(jsonObj.get("domains_by_html_terms"));
      }
      // validate the optional field `domains_by_technology`
      if (jsonObj.get("domains_by_technology") != null && !jsonObj.get("domains_by_technology").isJsonNull()) {
        AppendixBingKeywordsDataPriceDataInfo.validateJsonElement(jsonObj.get("domains_by_technology"));
      }
      // validate the optional field `domain_technologies`
      if (jsonObj.get("domain_technologies") != null && !jsonObj.get("domain_technologies").isJsonNull()) {
        AppendixBingKeywordsDataPriceDataInfo.validateJsonElement(jsonObj.get("domain_technologies"));
      }
      // validate the optional field `technologies_summary`
      if (jsonObj.get("technologies_summary") != null && !jsonObj.get("technologies_summary").isJsonNull()) {
        AppendixBingKeywordsDataPriceDataInfo.validateJsonElement(jsonObj.get("technologies_summary"));
      }
      // validate the optional field `technology_stats`
      if (jsonObj.get("technology_stats") != null && !jsonObj.get("technology_stats").isJsonNull()) {
        AppendixBingKeywordsDataPriceDataInfo.validateJsonElement(jsonObj.get("technology_stats"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AppendixTechnologiesDomainAnalyticsPriceData.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AppendixTechnologiesDomainAnalyticsPriceData' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AppendixTechnologiesDomainAnalyticsPriceData> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AppendixTechnologiesDomainAnalyticsPriceData.class));

       return (TypeAdapter<T>) new TypeAdapter<AppendixTechnologiesDomainAnalyticsPriceData>() {
           @Override
           public void write(JsonWriter out, AppendixTechnologiesDomainAnalyticsPriceData value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additional properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   JsonElement jsonElement = gson.toJsonTree(entry.getValue());
                   if (jsonElement.isJsonArray()) {
                     obj.add(entry.getKey(), jsonElement.getAsJsonArray());
                   } else {
                     obj.add(entry.getKey(), jsonElement.getAsJsonObject());
                   }
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public AppendixTechnologiesDomainAnalyticsPriceData read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             JsonObject jsonObj = jsonElement.getAsJsonObject();
             // store additional fields in the deserialized instance
             AppendixTechnologiesDomainAnalyticsPriceData instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of AppendixTechnologiesDomainAnalyticsPriceData given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of AppendixTechnologiesDomainAnalyticsPriceData
   * @throws IOException if the JSON string is invalid with respect to AppendixTechnologiesDomainAnalyticsPriceData
   */
  public static AppendixTechnologiesDomainAnalyticsPriceData fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AppendixTechnologiesDomainAnalyticsPriceData.class);
  }

  /**
   * Convert an instance of AppendixTechnologiesDomainAnalyticsPriceData to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

