/*
 * DataForSEO API documentation
 * DataForSEO API is the starting point on your journey towards building powerful SEO software. With DataForSEO you can get all the data you need to build an efficient application while also saving your time and budget. DataForSEO API is using the REST technology for interchanging data between your application and our service. The data exchange is made through the widely used HTTP protocol, which allows applying our API to almost all programming languages.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.dataforseo.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import io.github.dataforseo.client.JSON;

/**
 * SerpYoutubeVideoCommentsTasksReadyResultInfo
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-01-17T14:14:20.254791+02:00[Europe/Kiev]", comments = "Generator version: 7.8.0")
public class SerpYoutubeVideoCommentsTasksReadyResultInfo {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_SE = "se";
  @SerializedName(SERIALIZED_NAME_SE)
  private String se;

  public static final String SERIALIZED_NAME_SE_TYPE = "se_type";
  @SerializedName(SERIALIZED_NAME_SE_TYPE)
  private String seType;

  public static final String SERIALIZED_NAME_DATE_POSTED = "date_posted";
  @SerializedName(SERIALIZED_NAME_DATE_POSTED)
  private String datePosted;

  public static final String SERIALIZED_NAME_TAG = "tag";
  @SerializedName(SERIALIZED_NAME_TAG)
  private String tag;

  public static final String SERIALIZED_NAME_ENDPOINT_REGULAR = "endpoint_regular";
  @SerializedName(SERIALIZED_NAME_ENDPOINT_REGULAR)
  private String endpointRegular;

  public static final String SERIALIZED_NAME_ENDPOINT_ADVANCED = "endpoint_advanced";
  @SerializedName(SERIALIZED_NAME_ENDPOINT_ADVANCED)
  private String endpointAdvanced;

  public static final String SERIALIZED_NAME_ENDPOINT_HTML = "endpoint_html";
  @SerializedName(SERIALIZED_NAME_ENDPOINT_HTML)
  private String endpointHtml;

  public SerpYoutubeVideoCommentsTasksReadyResultInfo() {
  }

  public SerpYoutubeVideoCommentsTasksReadyResultInfo id(String id) {
    this.id = id;
    return this;
  }

  /**
   * task identifier of the completed task unique task identifier in our system in the UUID format
   * @return id
   */
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }


  public SerpYoutubeVideoCommentsTasksReadyResultInfo se(String se) {
    this.se = se;
    return this;
  }

  /**
   * search engine specified when setting the task
   * @return se
   */
  @javax.annotation.Nullable
  public String getSe() {
    return se;
  }

  public void setSe(String se) {
    this.se = se;
  }


  public SerpYoutubeVideoCommentsTasksReadyResultInfo seType(String seType) {
    this.seType = seType;
    return this;
  }

  /**
   * type of search engine example: video_comments
   * @return seType
   */
  @javax.annotation.Nullable
  public String getSeType() {
    return seType;
  }

  public void setSeType(String seType) {
    this.seType = seType;
  }


  public SerpYoutubeVideoCommentsTasksReadyResultInfo datePosted(String datePosted) {
    this.datePosted = datePosted;
    return this;
  }

  /**
   * date when the task was posted (in the UTC format)
   * @return datePosted
   */
  @javax.annotation.Nullable
  public String getDatePosted() {
    return datePosted;
  }

  public void setDatePosted(String datePosted) {
    this.datePosted = datePosted;
  }


  public SerpYoutubeVideoCommentsTasksReadyResultInfo tag(String tag) {
    this.tag = tag;
    return this;
  }

  /**
   * user-defined task identifier
   * @return tag
   */
  @javax.annotation.Nullable
  public String getTag() {
    return tag;
  }

  public void setTag(String tag) {
    this.tag = tag;
  }


  public SerpYoutubeVideoCommentsTasksReadyResultInfo endpointRegular(String endpointRegular) {
    this.endpointRegular = endpointRegular;
    return this;
  }

  /**
   * URL for collecting the results of the SERP Regular task if SERP Regular is not supported in the specified endpoint, the value will be null
   * @return endpointRegular
   */
  @javax.annotation.Nullable
  public String getEndpointRegular() {
    return endpointRegular;
  }

  public void setEndpointRegular(String endpointRegular) {
    this.endpointRegular = endpointRegular;
  }


  public SerpYoutubeVideoCommentsTasksReadyResultInfo endpointAdvanced(String endpointAdvanced) {
    this.endpointAdvanced = endpointAdvanced;
    return this;
  }

  /**
   * URL for collecting the results of the SERP Advanced task if SERP Advanced is not supported in the specified endpoint, the value will be null
   * @return endpointAdvanced
   */
  @javax.annotation.Nullable
  public String getEndpointAdvanced() {
    return endpointAdvanced;
  }

  public void setEndpointAdvanced(String endpointAdvanced) {
    this.endpointAdvanced = endpointAdvanced;
  }


  public SerpYoutubeVideoCommentsTasksReadyResultInfo endpointHtml(String endpointHtml) {
    this.endpointHtml = endpointHtml;
    return this;
  }

  /**
   * URL for collecting the results of the SERP HTML task if SERP HTML is not supported in the specified endpoint, the value will be null
   * @return endpointHtml
   */
  @javax.annotation.Nullable
  public String getEndpointHtml() {
    return endpointHtml;
  }

  public void setEndpointHtml(String endpointHtml) {
    this.endpointHtml = endpointHtml;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the SerpYoutubeVideoCommentsTasksReadyResultInfo instance itself
   */
  public SerpYoutubeVideoCommentsTasksReadyResultInfo putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SerpYoutubeVideoCommentsTasksReadyResultInfo serpYoutubeVideoCommentsTasksReadyResultInfo = (SerpYoutubeVideoCommentsTasksReadyResultInfo) o;
    return Objects.equals(this.id, serpYoutubeVideoCommentsTasksReadyResultInfo.id) &&
        Objects.equals(this.se, serpYoutubeVideoCommentsTasksReadyResultInfo.se) &&
        Objects.equals(this.seType, serpYoutubeVideoCommentsTasksReadyResultInfo.seType) &&
        Objects.equals(this.datePosted, serpYoutubeVideoCommentsTasksReadyResultInfo.datePosted) &&
        Objects.equals(this.tag, serpYoutubeVideoCommentsTasksReadyResultInfo.tag) &&
        Objects.equals(this.endpointRegular, serpYoutubeVideoCommentsTasksReadyResultInfo.endpointRegular) &&
        Objects.equals(this.endpointAdvanced, serpYoutubeVideoCommentsTasksReadyResultInfo.endpointAdvanced) &&
        Objects.equals(this.endpointHtml, serpYoutubeVideoCommentsTasksReadyResultInfo.endpointHtml)&&
        Objects.equals(this.additionalProperties, serpYoutubeVideoCommentsTasksReadyResultInfo.additionalProperties);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, se, seType, datePosted, tag, endpointRegular, endpointAdvanced, endpointHtml, additionalProperties);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SerpYoutubeVideoCommentsTasksReadyResultInfo {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    se: ").append(toIndentedString(se)).append("\n");
    sb.append("    seType: ").append(toIndentedString(seType)).append("\n");
    sb.append("    datePosted: ").append(toIndentedString(datePosted)).append("\n");
    sb.append("    tag: ").append(toIndentedString(tag)).append("\n");
    sb.append("    endpointRegular: ").append(toIndentedString(endpointRegular)).append("\n");
    sb.append("    endpointAdvanced: ").append(toIndentedString(endpointAdvanced)).append("\n");
    sb.append("    endpointHtml: ").append(toIndentedString(endpointHtml)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("id");
    openapiFields.add("se");
    openapiFields.add("se_type");
    openapiFields.add("date_posted");
    openapiFields.add("tag");
    openapiFields.add("endpoint_regular");
    openapiFields.add("endpoint_advanced");
    openapiFields.add("endpoint_html");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to SerpYoutubeVideoCommentsTasksReadyResultInfo
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!SerpYoutubeVideoCommentsTasksReadyResultInfo.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in SerpYoutubeVideoCommentsTasksReadyResultInfo is not found in the empty JSON string", SerpYoutubeVideoCommentsTasksReadyResultInfo.openapiRequiredFields.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if ((jsonObj.get("se") != null && !jsonObj.get("se").isJsonNull()) && !jsonObj.get("se").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `se` to be a primitive type in the JSON string but got `%s`", jsonObj.get("se").toString()));
      }
      if ((jsonObj.get("se_type") != null && !jsonObj.get("se_type").isJsonNull()) && !jsonObj.get("se_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `se_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("se_type").toString()));
      }
      if ((jsonObj.get("date_posted") != null && !jsonObj.get("date_posted").isJsonNull()) && !jsonObj.get("date_posted").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `date_posted` to be a primitive type in the JSON string but got `%s`", jsonObj.get("date_posted").toString()));
      }
      if ((jsonObj.get("tag") != null && !jsonObj.get("tag").isJsonNull()) && !jsonObj.get("tag").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `tag` to be a primitive type in the JSON string but got `%s`", jsonObj.get("tag").toString()));
      }
      if ((jsonObj.get("endpoint_regular") != null && !jsonObj.get("endpoint_regular").isJsonNull()) && !jsonObj.get("endpoint_regular").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `endpoint_regular` to be a primitive type in the JSON string but got `%s`", jsonObj.get("endpoint_regular").toString()));
      }
      if ((jsonObj.get("endpoint_advanced") != null && !jsonObj.get("endpoint_advanced").isJsonNull()) && !jsonObj.get("endpoint_advanced").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `endpoint_advanced` to be a primitive type in the JSON string but got `%s`", jsonObj.get("endpoint_advanced").toString()));
      }
      if ((jsonObj.get("endpoint_html") != null && !jsonObj.get("endpoint_html").isJsonNull()) && !jsonObj.get("endpoint_html").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `endpoint_html` to be a primitive type in the JSON string but got `%s`", jsonObj.get("endpoint_html").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!SerpYoutubeVideoCommentsTasksReadyResultInfo.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'SerpYoutubeVideoCommentsTasksReadyResultInfo' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<SerpYoutubeVideoCommentsTasksReadyResultInfo> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(SerpYoutubeVideoCommentsTasksReadyResultInfo.class));

       return (TypeAdapter<T>) new TypeAdapter<SerpYoutubeVideoCommentsTasksReadyResultInfo>() {
           @Override
           public void write(JsonWriter out, SerpYoutubeVideoCommentsTasksReadyResultInfo value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additional properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   JsonElement jsonElement = gson.toJsonTree(entry.getValue());
                   if (jsonElement.isJsonArray()) {
                     obj.add(entry.getKey(), jsonElement.getAsJsonArray());
                   } else {
                     obj.add(entry.getKey(), jsonElement.getAsJsonObject());
                   }
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public SerpYoutubeVideoCommentsTasksReadyResultInfo read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             JsonObject jsonObj = jsonElement.getAsJsonObject();
             // store additional fields in the deserialized instance
             SerpYoutubeVideoCommentsTasksReadyResultInfo instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of SerpYoutubeVideoCommentsTasksReadyResultInfo given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of SerpYoutubeVideoCommentsTasksReadyResultInfo
   * @throws IOException if the JSON string is invalid with respect to SerpYoutubeVideoCommentsTasksReadyResultInfo
   */
  public static SerpYoutubeVideoCommentsTasksReadyResultInfo fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, SerpYoutubeVideoCommentsTasksReadyResultInfo.class);
  }

  /**
   * Convert an instance of SerpYoutubeVideoCommentsTasksReadyResultInfo to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

