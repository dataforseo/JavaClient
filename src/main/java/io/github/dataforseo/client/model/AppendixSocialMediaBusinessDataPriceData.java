/*
 * DataForSEO API documentation
 * DataForSEO API is the starting point on your journey towards building powerful SEO software. With DataForSEO you can get all the data you need to build an efficient application while also saving your time and budget. DataForSEO API is using the REST technology for interchanging data between your application and our service. The data exchange is made through the widely used HTTP protocol, which allows applying our API to almost all programming languages.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.dataforseo.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.github.dataforseo.client.model.AppendixBingKeywordsDataPriceDataInfo;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import io.github.dataforseo.client.JSON;

/**
 * AppendixSocialMediaBusinessDataPriceData
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-02-11T19:55:34.761968200+02:00[Europe/Kiev]", comments = "Generator version: 7.8.0")
public class AppendixSocialMediaBusinessDataPriceData {
  public static final String SERIALIZED_NAME_FACEBOOK = "facebook";
  @SerializedName(SERIALIZED_NAME_FACEBOOK)
  private AppendixBingKeywordsDataPriceDataInfo facebook;

  public static final String SERIALIZED_NAME_PINTEREST = "pinterest";
  @SerializedName(SERIALIZED_NAME_PINTEREST)
  private AppendixBingKeywordsDataPriceDataInfo pinterest;

  public static final String SERIALIZED_NAME_REDDIT = "reddit";
  @SerializedName(SERIALIZED_NAME_REDDIT)
  private AppendixBingKeywordsDataPriceDataInfo reddit;

  public AppendixSocialMediaBusinessDataPriceData() {
  }

  public AppendixSocialMediaBusinessDataPriceData facebook(AppendixBingKeywordsDataPriceDataInfo facebook) {
    this.facebook = facebook;
    return this;
  }

  /**
   * Get facebook
   * @return facebook
   */
  @javax.annotation.Nullable
  public AppendixBingKeywordsDataPriceDataInfo getFacebook() {
    return facebook;
  }

  public void setFacebook(AppendixBingKeywordsDataPriceDataInfo facebook) {
    this.facebook = facebook;
  }


  public AppendixSocialMediaBusinessDataPriceData pinterest(AppendixBingKeywordsDataPriceDataInfo pinterest) {
    this.pinterest = pinterest;
    return this;
  }

  /**
   * Get pinterest
   * @return pinterest
   */
  @javax.annotation.Nullable
  public AppendixBingKeywordsDataPriceDataInfo getPinterest() {
    return pinterest;
  }

  public void setPinterest(AppendixBingKeywordsDataPriceDataInfo pinterest) {
    this.pinterest = pinterest;
  }


  public AppendixSocialMediaBusinessDataPriceData reddit(AppendixBingKeywordsDataPriceDataInfo reddit) {
    this.reddit = reddit;
    return this;
  }

  /**
   * Get reddit
   * @return reddit
   */
  @javax.annotation.Nullable
  public AppendixBingKeywordsDataPriceDataInfo getReddit() {
    return reddit;
  }

  public void setReddit(AppendixBingKeywordsDataPriceDataInfo reddit) {
    this.reddit = reddit;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the AppendixSocialMediaBusinessDataPriceData instance itself
   */
  public AppendixSocialMediaBusinessDataPriceData putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AppendixSocialMediaBusinessDataPriceData appendixSocialMediaBusinessDataPriceData = (AppendixSocialMediaBusinessDataPriceData) o;
    return Objects.equals(this.facebook, appendixSocialMediaBusinessDataPriceData.facebook) &&
        Objects.equals(this.pinterest, appendixSocialMediaBusinessDataPriceData.pinterest) &&
        Objects.equals(this.reddit, appendixSocialMediaBusinessDataPriceData.reddit)&&
        Objects.equals(this.additionalProperties, appendixSocialMediaBusinessDataPriceData.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(facebook, pinterest, reddit, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AppendixSocialMediaBusinessDataPriceData {\n");
    sb.append("    facebook: ").append(toIndentedString(facebook)).append("\n");
    sb.append("    pinterest: ").append(toIndentedString(pinterest)).append("\n");
    sb.append("    reddit: ").append(toIndentedString(reddit)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("facebook");
    openapiFields.add("pinterest");
    openapiFields.add("reddit");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to AppendixSocialMediaBusinessDataPriceData
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!AppendixSocialMediaBusinessDataPriceData.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AppendixSocialMediaBusinessDataPriceData is not found in the empty JSON string", AppendixSocialMediaBusinessDataPriceData.openapiRequiredFields.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `facebook`
      if (jsonObj.get("facebook") != null && !jsonObj.get("facebook").isJsonNull()) {
        AppendixBingKeywordsDataPriceDataInfo.validateJsonElement(jsonObj.get("facebook"));
      }
      // validate the optional field `pinterest`
      if (jsonObj.get("pinterest") != null && !jsonObj.get("pinterest").isJsonNull()) {
        AppendixBingKeywordsDataPriceDataInfo.validateJsonElement(jsonObj.get("pinterest"));
      }
      // validate the optional field `reddit`
      if (jsonObj.get("reddit") != null && !jsonObj.get("reddit").isJsonNull()) {
        AppendixBingKeywordsDataPriceDataInfo.validateJsonElement(jsonObj.get("reddit"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AppendixSocialMediaBusinessDataPriceData.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AppendixSocialMediaBusinessDataPriceData' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AppendixSocialMediaBusinessDataPriceData> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AppendixSocialMediaBusinessDataPriceData.class));

       return (TypeAdapter<T>) new TypeAdapter<AppendixSocialMediaBusinessDataPriceData>() {
           @Override
           public void write(JsonWriter out, AppendixSocialMediaBusinessDataPriceData value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additional properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   JsonElement jsonElement = gson.toJsonTree(entry.getValue());
                   if (jsonElement.isJsonArray()) {
                     obj.add(entry.getKey(), jsonElement.getAsJsonArray());
                   } else {
                     obj.add(entry.getKey(), jsonElement.getAsJsonObject());
                   }
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public AppendixSocialMediaBusinessDataPriceData read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             JsonObject jsonObj = jsonElement.getAsJsonObject();
             // store additional fields in the deserialized instance
             AppendixSocialMediaBusinessDataPriceData instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of AppendixSocialMediaBusinessDataPriceData given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of AppendixSocialMediaBusinessDataPriceData
   * @throws IOException if the JSON string is invalid with respect to AppendixSocialMediaBusinessDataPriceData
   */
  public static AppendixSocialMediaBusinessDataPriceData fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AppendixSocialMediaBusinessDataPriceData.class);
  }

  /**
   * Convert an instance of AppendixSocialMediaBusinessDataPriceData to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

