/*
 * DataForSEO API documentation
 * DataForSEO API is the starting point on your journey towards building powerful SEO software. With DataForSEO you can get all the data you need to build an efficient application while also saving your time and budget. DataForSEO API is using the REST technology for interchanging data between your application and our service. The data exchange is made through the widely used HTTP protocol, which allows applying our API to almost all programming languages.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.dataforseo.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.github.dataforseo.client.model.PreviewImage;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import io.github.dataforseo.client.JSON;

/**
 * SerpGoogleAdsSearchTaskGetAdvancedItem
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-05-30T15:21:14.476580900+03:00[Europe/Kiev]", comments = "Generator version: 7.8.0")
public class SerpGoogleAdsSearchTaskGetAdvancedItem {
  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private String type;

  public static final String SERIALIZED_NAME_RANK_GROUP = "rank_group";
  @SerializedName(SERIALIZED_NAME_RANK_GROUP)
  private BigDecimal rankGroup;

  public static final String SERIALIZED_NAME_RANK_ABSOLUTE = "rank_absolute";
  @SerializedName(SERIALIZED_NAME_RANK_ABSOLUTE)
  private BigDecimal rankAbsolute;

  public static final String SERIALIZED_NAME_ADVERTISER_ID = "advertiser_id";
  @SerializedName(SERIALIZED_NAME_ADVERTISER_ID)
  private String advertiserId;

  public static final String SERIALIZED_NAME_CREATIVE_ID = "creative_id";
  @SerializedName(SERIALIZED_NAME_CREATIVE_ID)
  private String creativeId;

  public static final String SERIALIZED_NAME_TITLE = "title";
  @SerializedName(SERIALIZED_NAME_TITLE)
  private String title;

  public static final String SERIALIZED_NAME_URL = "url";
  @SerializedName(SERIALIZED_NAME_URL)
  private String url;

  public static final String SERIALIZED_NAME_VERIFIED = "verified";
  @SerializedName(SERIALIZED_NAME_VERIFIED)
  private Boolean verified;

  public static final String SERIALIZED_NAME_FORMAT = "format";
  @SerializedName(SERIALIZED_NAME_FORMAT)
  private String format;

  public static final String SERIALIZED_NAME_PREVIEW_IMAGE = "preview_image";
  @SerializedName(SERIALIZED_NAME_PREVIEW_IMAGE)
  private PreviewImage previewImage;

  public static final String SERIALIZED_NAME_PREVIEW_URL = "preview_url";
  @SerializedName(SERIALIZED_NAME_PREVIEW_URL)
  private String previewUrl;

  public static final String SERIALIZED_NAME_FIRST_SHOWN = "first_shown";
  @SerializedName(SERIALIZED_NAME_FIRST_SHOWN)
  private String firstShown;

  public static final String SERIALIZED_NAME_LAST_SHOWN = "last_shown";
  @SerializedName(SERIALIZED_NAME_LAST_SHOWN)
  private String lastShown;

  public SerpGoogleAdsSearchTaskGetAdvancedItem() {
  }

  public SerpGoogleAdsSearchTaskGetAdvancedItem type(String type) {
    this.type = type;
    return this;
  }

  /**
   * type of element
   * @return type
   */
  @javax.annotation.Nullable
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }


  public SerpGoogleAdsSearchTaskGetAdvancedItem rankGroup(BigDecimal rankGroup) {
    this.rankGroup = rankGroup;
    return this;
  }

  /**
   * group rank in SERP position within a group of elements with identical type values positions of elements with different type values are omitted from rank_group
   * @return rankGroup
   */
  @javax.annotation.Nullable
  public BigDecimal getRankGroup() {
    return rankGroup;
  }

  public void setRankGroup(BigDecimal rankGroup) {
    this.rankGroup = rankGroup;
  }


  public SerpGoogleAdsSearchTaskGetAdvancedItem rankAbsolute(BigDecimal rankAbsolute) {
    this.rankAbsolute = rankAbsolute;
    return this;
  }

  /**
   * absolute rank in SERP absolute position among all the elements in SERP
   * @return rankAbsolute
   */
  @javax.annotation.Nullable
  public BigDecimal getRankAbsolute() {
    return rankAbsolute;
  }

  public void setRankAbsolute(BigDecimal rankAbsolute) {
    this.rankAbsolute = rankAbsolute;
  }


  public SerpGoogleAdsSearchTaskGetAdvancedItem advertiserId(String advertiserId) {
    this.advertiserId = advertiserId;
    return this;
  }

  /**
   * unique identifier of the advertiser account
   * @return advertiserId
   */
  @javax.annotation.Nullable
  public String getAdvertiserId() {
    return advertiserId;
  }

  public void setAdvertiserId(String advertiserId) {
    this.advertiserId = advertiserId;
  }


  public SerpGoogleAdsSearchTaskGetAdvancedItem creativeId(String creativeId) {
    this.creativeId = creativeId;
    return this;
  }

  /**
   * unique identifier of the advertisement
   * @return creativeId
   */
  @javax.annotation.Nullable
  public String getCreativeId() {
    return creativeId;
  }

  public void setCreativeId(String creativeId) {
    this.creativeId = creativeId;
  }


  public SerpGoogleAdsSearchTaskGetAdvancedItem title(String title) {
    this.title = title;
    return this;
  }

  /**
   * title of the element
   * @return title
   */
  @javax.annotation.Nullable
  public String getTitle() {
    return title;
  }

  public void setTitle(String title) {
    this.title = title;
  }


  public SerpGoogleAdsSearchTaskGetAdvancedItem url(String url) {
    this.url = url;
    return this;
  }

  /**
   * search URL with refinement parameters
   * @return url
   */
  @javax.annotation.Nullable
  public String getUrl() {
    return url;
  }

  public void setUrl(String url) {
    this.url = url;
  }


  public SerpGoogleAdsSearchTaskGetAdvancedItem verified(Boolean verified) {
    this.verified = verified;
    return this;
  }

  /**
   * verified advertiser account equals true if advertiser account is verified by Google Ads
   * @return verified
   */
  @javax.annotation.Nullable
  public Boolean getVerified() {
    return verified;
  }

  public void setVerified(Boolean verified) {
    this.verified = verified;
  }


  public SerpGoogleAdsSearchTaskGetAdvancedItem format(String format) {
    this.format = format;
    return this;
  }

  /**
   * format of the advertisement possible values: text, image, video
   * @return format
   */
  @javax.annotation.Nullable
  public String getFormat() {
    return format;
  }

  public void setFormat(String format) {
    this.format = format;
  }


  public SerpGoogleAdsSearchTaskGetAdvancedItem previewImage(PreviewImage previewImage) {
    this.previewImage = previewImage;
    return this;
  }

  /**
   * Get previewImage
   * @return previewImage
   */
  @javax.annotation.Nullable
  public PreviewImage getPreviewImage() {
    return previewImage;
  }

  public void setPreviewImage(PreviewImage previewImage) {
    this.previewImage = previewImage;
  }


  public SerpGoogleAdsSearchTaskGetAdvancedItem previewUrl(String previewUrl) {
    this.previewUrl = previewUrl;
    return this;
  }

  /**
   * url pointing to the ad preview
   * @return previewUrl
   */
  @javax.annotation.Nullable
  public String getPreviewUrl() {
    return previewUrl;
  }

  public void setPreviewUrl(String previewUrl) {
    this.previewUrl = previewUrl;
  }


  public SerpGoogleAdsSearchTaskGetAdvancedItem firstShown(String firstShown) {
    this.firstShown = firstShown;
    return this;
  }

  /**
   * date and time when the ad was shown for the first time in the UTC format: “yyyy-mm-dd hh-mm-ss +00:00”
   * @return firstShown
   */
  @javax.annotation.Nullable
  public String getFirstShown() {
    return firstShown;
  }

  public void setFirstShown(String firstShown) {
    this.firstShown = firstShown;
  }


  public SerpGoogleAdsSearchTaskGetAdvancedItem lastShown(String lastShown) {
    this.lastShown = lastShown;
    return this;
  }

  /**
   * date and time when the ad was shown the last time in the UTC format: “yyyy-mm-dd hh-mm-ss +00:00”
   * @return lastShown
   */
  @javax.annotation.Nullable
  public String getLastShown() {
    return lastShown;
  }

  public void setLastShown(String lastShown) {
    this.lastShown = lastShown;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the SerpGoogleAdsSearchTaskGetAdvancedItem instance itself
   */
  public SerpGoogleAdsSearchTaskGetAdvancedItem putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SerpGoogleAdsSearchTaskGetAdvancedItem serpGoogleAdsSearchTaskGetAdvancedItem = (SerpGoogleAdsSearchTaskGetAdvancedItem) o;
    return Objects.equals(this.type, serpGoogleAdsSearchTaskGetAdvancedItem.type) &&
        Objects.equals(this.rankGroup, serpGoogleAdsSearchTaskGetAdvancedItem.rankGroup) &&
        Objects.equals(this.rankAbsolute, serpGoogleAdsSearchTaskGetAdvancedItem.rankAbsolute) &&
        Objects.equals(this.advertiserId, serpGoogleAdsSearchTaskGetAdvancedItem.advertiserId) &&
        Objects.equals(this.creativeId, serpGoogleAdsSearchTaskGetAdvancedItem.creativeId) &&
        Objects.equals(this.title, serpGoogleAdsSearchTaskGetAdvancedItem.title) &&
        Objects.equals(this.url, serpGoogleAdsSearchTaskGetAdvancedItem.url) &&
        Objects.equals(this.verified, serpGoogleAdsSearchTaskGetAdvancedItem.verified) &&
        Objects.equals(this.format, serpGoogleAdsSearchTaskGetAdvancedItem.format) &&
        Objects.equals(this.previewImage, serpGoogleAdsSearchTaskGetAdvancedItem.previewImage) &&
        Objects.equals(this.previewUrl, serpGoogleAdsSearchTaskGetAdvancedItem.previewUrl) &&
        Objects.equals(this.firstShown, serpGoogleAdsSearchTaskGetAdvancedItem.firstShown) &&
        Objects.equals(this.lastShown, serpGoogleAdsSearchTaskGetAdvancedItem.lastShown)&&
        Objects.equals(this.additionalProperties, serpGoogleAdsSearchTaskGetAdvancedItem.additionalProperties);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(type, rankGroup, rankAbsolute, advertiserId, creativeId, title, url, verified, format, previewImage, previewUrl, firstShown, lastShown, additionalProperties);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SerpGoogleAdsSearchTaskGetAdvancedItem {\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    rankGroup: ").append(toIndentedString(rankGroup)).append("\n");
    sb.append("    rankAbsolute: ").append(toIndentedString(rankAbsolute)).append("\n");
    sb.append("    advertiserId: ").append(toIndentedString(advertiserId)).append("\n");
    sb.append("    creativeId: ").append(toIndentedString(creativeId)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    verified: ").append(toIndentedString(verified)).append("\n");
    sb.append("    format: ").append(toIndentedString(format)).append("\n");
    sb.append("    previewImage: ").append(toIndentedString(previewImage)).append("\n");
    sb.append("    previewUrl: ").append(toIndentedString(previewUrl)).append("\n");
    sb.append("    firstShown: ").append(toIndentedString(firstShown)).append("\n");
    sb.append("    lastShown: ").append(toIndentedString(lastShown)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("type");
    openapiFields.add("rank_group");
    openapiFields.add("rank_absolute");
    openapiFields.add("advertiser_id");
    openapiFields.add("creative_id");
    openapiFields.add("title");
    openapiFields.add("url");
    openapiFields.add("verified");
    openapiFields.add("format");
    openapiFields.add("preview_image");
    openapiFields.add("preview_url");
    openapiFields.add("first_shown");
    openapiFields.add("last_shown");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to SerpGoogleAdsSearchTaskGetAdvancedItem
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!SerpGoogleAdsSearchTaskGetAdvancedItem.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in SerpGoogleAdsSearchTaskGetAdvancedItem is not found in the empty JSON string", SerpGoogleAdsSearchTaskGetAdvancedItem.openapiRequiredFields.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("type") != null && !jsonObj.get("type").isJsonNull()) && !jsonObj.get("type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("type").toString()));
      }
      if ((jsonObj.get("advertiser_id") != null && !jsonObj.get("advertiser_id").isJsonNull()) && !jsonObj.get("advertiser_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `advertiser_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("advertiser_id").toString()));
      }
      if ((jsonObj.get("creative_id") != null && !jsonObj.get("creative_id").isJsonNull()) && !jsonObj.get("creative_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `creative_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("creative_id").toString()));
      }
      if ((jsonObj.get("title") != null && !jsonObj.get("title").isJsonNull()) && !jsonObj.get("title").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `title` to be a primitive type in the JSON string but got `%s`", jsonObj.get("title").toString()));
      }
      if ((jsonObj.get("url") != null && !jsonObj.get("url").isJsonNull()) && !jsonObj.get("url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("url").toString()));
      }
      if ((jsonObj.get("format") != null && !jsonObj.get("format").isJsonNull()) && !jsonObj.get("format").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `format` to be a primitive type in the JSON string but got `%s`", jsonObj.get("format").toString()));
      }
      // validate the optional field `preview_image`
      if (jsonObj.get("preview_image") != null && !jsonObj.get("preview_image").isJsonNull()) {
        PreviewImage.validateJsonElement(jsonObj.get("preview_image"));
      }
      if ((jsonObj.get("preview_url") != null && !jsonObj.get("preview_url").isJsonNull()) && !jsonObj.get("preview_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `preview_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("preview_url").toString()));
      }
      if ((jsonObj.get("first_shown") != null && !jsonObj.get("first_shown").isJsonNull()) && !jsonObj.get("first_shown").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `first_shown` to be a primitive type in the JSON string but got `%s`", jsonObj.get("first_shown").toString()));
      }
      if ((jsonObj.get("last_shown") != null && !jsonObj.get("last_shown").isJsonNull()) && !jsonObj.get("last_shown").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `last_shown` to be a primitive type in the JSON string but got `%s`", jsonObj.get("last_shown").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!SerpGoogleAdsSearchTaskGetAdvancedItem.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'SerpGoogleAdsSearchTaskGetAdvancedItem' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<SerpGoogleAdsSearchTaskGetAdvancedItem> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(SerpGoogleAdsSearchTaskGetAdvancedItem.class));

       return (TypeAdapter<T>) new TypeAdapter<SerpGoogleAdsSearchTaskGetAdvancedItem>() {
           @Override
           public void write(JsonWriter out, SerpGoogleAdsSearchTaskGetAdvancedItem value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additional properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   JsonElement jsonElement = gson.toJsonTree(entry.getValue());
                   if (jsonElement.isJsonArray()) {
                     obj.add(entry.getKey(), jsonElement.getAsJsonArray());
                   } else {
                     obj.add(entry.getKey(), jsonElement.getAsJsonObject());
                   }
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public SerpGoogleAdsSearchTaskGetAdvancedItem read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             JsonObject jsonObj = jsonElement.getAsJsonObject();
             // store additional fields in the deserialized instance
             SerpGoogleAdsSearchTaskGetAdvancedItem instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of SerpGoogleAdsSearchTaskGetAdvancedItem given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of SerpGoogleAdsSearchTaskGetAdvancedItem
   * @throws IOException if the JSON string is invalid with respect to SerpGoogleAdsSearchTaskGetAdvancedItem
   */
  public static SerpGoogleAdsSearchTaskGetAdvancedItem fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, SerpGoogleAdsSearchTaskGetAdvancedItem.class);
  }

  /**
   * Convert an instance of SerpGoogleAdsSearchTaskGetAdvancedItem to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

