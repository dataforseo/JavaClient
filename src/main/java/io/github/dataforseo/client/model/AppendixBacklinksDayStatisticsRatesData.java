/*
 * DataForSEO API documentation
 * DataForSEO API is the starting point on your journey towards building powerful SEO software. With DataForSEO you can get all the data you need to build an efficient application while also saving your time and budget. DataForSEO API is using the REST technology for interchanging data between your application and our service. The data exchange is made through the widely used HTTP protocol, which allows applying our API to almost all programming languages.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.dataforseo.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.github.dataforseo.client.model.AppendixInfo;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import io.github.dataforseo.client.JSON;

/**
 * AppendixBacklinksDayStatisticsRatesData
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-09-04T13:45:49.667097300+03:00[Europe/Kiev]", comments = "Generator version: 7.8.0")
public class AppendixBacklinksDayStatisticsRatesData {
  public static final String SERIALIZED_NAME_SUMMARY = "summary";
  @SerializedName(SERIALIZED_NAME_SUMMARY)
  private AppendixInfo summary;

  public static final String SERIALIZED_NAME_HISTORY = "history";
  @SerializedName(SERIALIZED_NAME_HISTORY)
  private AppendixInfo history;

  public static final String SERIALIZED_NAME_CONTENT_DUPLICATES = "content_duplicates";
  @SerializedName(SERIALIZED_NAME_CONTENT_DUPLICATES)
  private AppendixInfo contentDuplicates;

  public static final String SERIALIZED_NAME_DOMAIN_INTERSECTION = "domain_intersection";
  @SerializedName(SERIALIZED_NAME_DOMAIN_INTERSECTION)
  private AppendixInfo domainIntersection;

  public static final String SERIALIZED_NAME_BACKLINKS = "backlinks";
  @SerializedName(SERIALIZED_NAME_BACKLINKS)
  private AppendixInfo backlinks;

  public static final String SERIALIZED_NAME_DOMAIN_PAGES = "domain_pages";
  @SerializedName(SERIALIZED_NAME_DOMAIN_PAGES)
  private AppendixInfo domainPages;

  public static final String SERIALIZED_NAME_ANCHORS = "anchors";
  @SerializedName(SERIALIZED_NAME_ANCHORS)
  private AppendixInfo anchors;

  public static final String SERIALIZED_NAME_REFERRING_DOMAINS = "referring_domains";
  @SerializedName(SERIALIZED_NAME_REFERRING_DOMAINS)
  private AppendixInfo referringDomains;

  public static final String SERIALIZED_NAME_PAGE_INTERSECTION = "page_intersection";
  @SerializedName(SERIALIZED_NAME_PAGE_INTERSECTION)
  private AppendixInfo pageIntersection;

  public static final String SERIALIZED_NAME_REFERRING_NETWORKS = "referring_networks";
  @SerializedName(SERIALIZED_NAME_REFERRING_NETWORKS)
  private AppendixInfo referringNetworks;

  public static final String SERIALIZED_NAME_BULK_RANKS = "bulk_ranks";
  @SerializedName(SERIALIZED_NAME_BULK_RANKS)
  private AppendixInfo bulkRanks;

  public static final String SERIALIZED_NAME_BULK_BACKLINKS = "bulk_backlinks";
  @SerializedName(SERIALIZED_NAME_BULK_BACKLINKS)
  private AppendixInfo bulkBacklinks;

  public static final String SERIALIZED_NAME_BULK_NEW_LOST_BACKLINKS = "bulk_new_lost_backlinks";
  @SerializedName(SERIALIZED_NAME_BULK_NEW_LOST_BACKLINKS)
  private AppendixInfo bulkNewLostBacklinks;

  public static final String SERIALIZED_NAME_BULK_NEW_LOST_REFERRING_DOMAINS = "bulk_new_lost_referring_domains";
  @SerializedName(SERIALIZED_NAME_BULK_NEW_LOST_REFERRING_DOMAINS)
  private AppendixInfo bulkNewLostReferringDomains;

  public static final String SERIALIZED_NAME_BULK_REFERRING_DOMAINS = "bulk_referring_domains";
  @SerializedName(SERIALIZED_NAME_BULK_REFERRING_DOMAINS)
  private AppendixInfo bulkReferringDomains;

  public static final String SERIALIZED_NAME_ERRORS = "errors";
  @SerializedName(SERIALIZED_NAME_ERRORS)
  private Double errors;

  public static final String SERIALIZED_NAME_DOMAIN_PAGES_SUMMARY = "domain_pages_summary";
  @SerializedName(SERIALIZED_NAME_DOMAIN_PAGES_SUMMARY)
  private AppendixInfo domainPagesSummary;

  public static final String SERIALIZED_NAME_TIMESERIES_SUMMARY = "timeseries_summary";
  @SerializedName(SERIALIZED_NAME_TIMESERIES_SUMMARY)
  private AppendixInfo timeseriesSummary;

  public static final String SERIALIZED_NAME_TIMESERIES_NEW_LOST_SUMMARY = "timeseries_new_lost_summary";
  @SerializedName(SERIALIZED_NAME_TIMESERIES_NEW_LOST_SUMMARY)
  private AppendixInfo timeseriesNewLostSummary;

  public static final String SERIALIZED_NAME_COMPETITORS = "competitors";
  @SerializedName(SERIALIZED_NAME_COMPETITORS)
  private AppendixInfo competitors;

  public static final String SERIALIZED_NAME_BULK_PAGES_SUMMARY = "bulk_pages_summary";
  @SerializedName(SERIALIZED_NAME_BULK_PAGES_SUMMARY)
  private AppendixInfo bulkPagesSummary;

  public static final String SERIALIZED_NAME_HISTORICAL_NEW_LOST_SUMMARY = "historical_new_lost_summary";
  @SerializedName(SERIALIZED_NAME_HISTORICAL_NEW_LOST_SUMMARY)
  private AppendixInfo historicalNewLostSummary;

  public static final String SERIALIZED_NAME_AVAILABLE_FILTERS = "available_filters";
  @SerializedName(SERIALIZED_NAME_AVAILABLE_FILTERS)
  private Double availableFilters;

  public static final String SERIALIZED_NAME_BULK_SPAM_SCORE = "bulk_spam_score";
  @SerializedName(SERIALIZED_NAME_BULK_SPAM_SCORE)
  private AppendixInfo bulkSpamScore;

  public static final String SERIALIZED_NAME_INDEX = "index";
  @SerializedName(SERIALIZED_NAME_INDEX)
  private Double index;

  public static final String SERIALIZED_NAME_PAGES_SUMMARY_WITH_PAGE_INFO = "pages_summary_with_page_info";
  @SerializedName(SERIALIZED_NAME_PAGES_SUMMARY_WITH_PAGE_INFO)
  private AppendixInfo pagesSummaryWithPageInfo;

  public static final String SERIALIZED_NAME_ID_LIST = "id_list";
  @SerializedName(SERIALIZED_NAME_ID_LIST)
  private Double idList;

  public AppendixBacklinksDayStatisticsRatesData() {
  }

  public AppendixBacklinksDayStatisticsRatesData summary(AppendixInfo summary) {
    this.summary = summary;
    return this;
  }

  /**
   * Get summary
   * @return summary
   */
  @javax.annotation.Nullable
  public AppendixInfo getSummary() {
    return summary;
  }

  public void setSummary(AppendixInfo summary) {
    this.summary = summary;
  }


  public AppendixBacklinksDayStatisticsRatesData history(AppendixInfo history) {
    this.history = history;
    return this;
  }

  /**
   * Get history
   * @return history
   */
  @javax.annotation.Nullable
  public AppendixInfo getHistory() {
    return history;
  }

  public void setHistory(AppendixInfo history) {
    this.history = history;
  }


  public AppendixBacklinksDayStatisticsRatesData contentDuplicates(AppendixInfo contentDuplicates) {
    this.contentDuplicates = contentDuplicates;
    return this;
  }

  /**
   * Get contentDuplicates
   * @return contentDuplicates
   */
  @javax.annotation.Nullable
  public AppendixInfo getContentDuplicates() {
    return contentDuplicates;
  }

  public void setContentDuplicates(AppendixInfo contentDuplicates) {
    this.contentDuplicates = contentDuplicates;
  }


  public AppendixBacklinksDayStatisticsRatesData domainIntersection(AppendixInfo domainIntersection) {
    this.domainIntersection = domainIntersection;
    return this;
  }

  /**
   * Get domainIntersection
   * @return domainIntersection
   */
  @javax.annotation.Nullable
  public AppendixInfo getDomainIntersection() {
    return domainIntersection;
  }

  public void setDomainIntersection(AppendixInfo domainIntersection) {
    this.domainIntersection = domainIntersection;
  }


  public AppendixBacklinksDayStatisticsRatesData backlinks(AppendixInfo backlinks) {
    this.backlinks = backlinks;
    return this;
  }

  /**
   * Get backlinks
   * @return backlinks
   */
  @javax.annotation.Nullable
  public AppendixInfo getBacklinks() {
    return backlinks;
  }

  public void setBacklinks(AppendixInfo backlinks) {
    this.backlinks = backlinks;
  }


  public AppendixBacklinksDayStatisticsRatesData domainPages(AppendixInfo domainPages) {
    this.domainPages = domainPages;
    return this;
  }

  /**
   * Get domainPages
   * @return domainPages
   */
  @javax.annotation.Nullable
  public AppendixInfo getDomainPages() {
    return domainPages;
  }

  public void setDomainPages(AppendixInfo domainPages) {
    this.domainPages = domainPages;
  }


  public AppendixBacklinksDayStatisticsRatesData anchors(AppendixInfo anchors) {
    this.anchors = anchors;
    return this;
  }

  /**
   * Get anchors
   * @return anchors
   */
  @javax.annotation.Nullable
  public AppendixInfo getAnchors() {
    return anchors;
  }

  public void setAnchors(AppendixInfo anchors) {
    this.anchors = anchors;
  }


  public AppendixBacklinksDayStatisticsRatesData referringDomains(AppendixInfo referringDomains) {
    this.referringDomains = referringDomains;
    return this;
  }

  /**
   * Get referringDomains
   * @return referringDomains
   */
  @javax.annotation.Nullable
  public AppendixInfo getReferringDomains() {
    return referringDomains;
  }

  public void setReferringDomains(AppendixInfo referringDomains) {
    this.referringDomains = referringDomains;
  }


  public AppendixBacklinksDayStatisticsRatesData pageIntersection(AppendixInfo pageIntersection) {
    this.pageIntersection = pageIntersection;
    return this;
  }

  /**
   * Get pageIntersection
   * @return pageIntersection
   */
  @javax.annotation.Nullable
  public AppendixInfo getPageIntersection() {
    return pageIntersection;
  }

  public void setPageIntersection(AppendixInfo pageIntersection) {
    this.pageIntersection = pageIntersection;
  }


  public AppendixBacklinksDayStatisticsRatesData referringNetworks(AppendixInfo referringNetworks) {
    this.referringNetworks = referringNetworks;
    return this;
  }

  /**
   * Get referringNetworks
   * @return referringNetworks
   */
  @javax.annotation.Nullable
  public AppendixInfo getReferringNetworks() {
    return referringNetworks;
  }

  public void setReferringNetworks(AppendixInfo referringNetworks) {
    this.referringNetworks = referringNetworks;
  }


  public AppendixBacklinksDayStatisticsRatesData bulkRanks(AppendixInfo bulkRanks) {
    this.bulkRanks = bulkRanks;
    return this;
  }

  /**
   * Get bulkRanks
   * @return bulkRanks
   */
  @javax.annotation.Nullable
  public AppendixInfo getBulkRanks() {
    return bulkRanks;
  }

  public void setBulkRanks(AppendixInfo bulkRanks) {
    this.bulkRanks = bulkRanks;
  }


  public AppendixBacklinksDayStatisticsRatesData bulkBacklinks(AppendixInfo bulkBacklinks) {
    this.bulkBacklinks = bulkBacklinks;
    return this;
  }

  /**
   * Get bulkBacklinks
   * @return bulkBacklinks
   */
  @javax.annotation.Nullable
  public AppendixInfo getBulkBacklinks() {
    return bulkBacklinks;
  }

  public void setBulkBacklinks(AppendixInfo bulkBacklinks) {
    this.bulkBacklinks = bulkBacklinks;
  }


  public AppendixBacklinksDayStatisticsRatesData bulkNewLostBacklinks(AppendixInfo bulkNewLostBacklinks) {
    this.bulkNewLostBacklinks = bulkNewLostBacklinks;
    return this;
  }

  /**
   * Get bulkNewLostBacklinks
   * @return bulkNewLostBacklinks
   */
  @javax.annotation.Nullable
  public AppendixInfo getBulkNewLostBacklinks() {
    return bulkNewLostBacklinks;
  }

  public void setBulkNewLostBacklinks(AppendixInfo bulkNewLostBacklinks) {
    this.bulkNewLostBacklinks = bulkNewLostBacklinks;
  }


  public AppendixBacklinksDayStatisticsRatesData bulkNewLostReferringDomains(AppendixInfo bulkNewLostReferringDomains) {
    this.bulkNewLostReferringDomains = bulkNewLostReferringDomains;
    return this;
  }

  /**
   * Get bulkNewLostReferringDomains
   * @return bulkNewLostReferringDomains
   */
  @javax.annotation.Nullable
  public AppendixInfo getBulkNewLostReferringDomains() {
    return bulkNewLostReferringDomains;
  }

  public void setBulkNewLostReferringDomains(AppendixInfo bulkNewLostReferringDomains) {
    this.bulkNewLostReferringDomains = bulkNewLostReferringDomains;
  }


  public AppendixBacklinksDayStatisticsRatesData bulkReferringDomains(AppendixInfo bulkReferringDomains) {
    this.bulkReferringDomains = bulkReferringDomains;
    return this;
  }

  /**
   * Get bulkReferringDomains
   * @return bulkReferringDomains
   */
  @javax.annotation.Nullable
  public AppendixInfo getBulkReferringDomains() {
    return bulkReferringDomains;
  }

  public void setBulkReferringDomains(AppendixInfo bulkReferringDomains) {
    this.bulkReferringDomains = bulkReferringDomains;
  }


  public AppendixBacklinksDayStatisticsRatesData errors(Double errors) {
    this.errors = errors;
    return this;
  }

  /**
   * Get errors
   * @return errors
   */
  @javax.annotation.Nullable
  public Double getErrors() {
    return errors;
  }

  public void setErrors(Double errors) {
    this.errors = errors;
  }


  public AppendixBacklinksDayStatisticsRatesData domainPagesSummary(AppendixInfo domainPagesSummary) {
    this.domainPagesSummary = domainPagesSummary;
    return this;
  }

  /**
   * Get domainPagesSummary
   * @return domainPagesSummary
   */
  @javax.annotation.Nullable
  public AppendixInfo getDomainPagesSummary() {
    return domainPagesSummary;
  }

  public void setDomainPagesSummary(AppendixInfo domainPagesSummary) {
    this.domainPagesSummary = domainPagesSummary;
  }


  public AppendixBacklinksDayStatisticsRatesData timeseriesSummary(AppendixInfo timeseriesSummary) {
    this.timeseriesSummary = timeseriesSummary;
    return this;
  }

  /**
   * Get timeseriesSummary
   * @return timeseriesSummary
   */
  @javax.annotation.Nullable
  public AppendixInfo getTimeseriesSummary() {
    return timeseriesSummary;
  }

  public void setTimeseriesSummary(AppendixInfo timeseriesSummary) {
    this.timeseriesSummary = timeseriesSummary;
  }


  public AppendixBacklinksDayStatisticsRatesData timeseriesNewLostSummary(AppendixInfo timeseriesNewLostSummary) {
    this.timeseriesNewLostSummary = timeseriesNewLostSummary;
    return this;
  }

  /**
   * Get timeseriesNewLostSummary
   * @return timeseriesNewLostSummary
   */
  @javax.annotation.Nullable
  public AppendixInfo getTimeseriesNewLostSummary() {
    return timeseriesNewLostSummary;
  }

  public void setTimeseriesNewLostSummary(AppendixInfo timeseriesNewLostSummary) {
    this.timeseriesNewLostSummary = timeseriesNewLostSummary;
  }


  public AppendixBacklinksDayStatisticsRatesData competitors(AppendixInfo competitors) {
    this.competitors = competitors;
    return this;
  }

  /**
   * Get competitors
   * @return competitors
   */
  @javax.annotation.Nullable
  public AppendixInfo getCompetitors() {
    return competitors;
  }

  public void setCompetitors(AppendixInfo competitors) {
    this.competitors = competitors;
  }


  public AppendixBacklinksDayStatisticsRatesData bulkPagesSummary(AppendixInfo bulkPagesSummary) {
    this.bulkPagesSummary = bulkPagesSummary;
    return this;
  }

  /**
   * Get bulkPagesSummary
   * @return bulkPagesSummary
   */
  @javax.annotation.Nullable
  public AppendixInfo getBulkPagesSummary() {
    return bulkPagesSummary;
  }

  public void setBulkPagesSummary(AppendixInfo bulkPagesSummary) {
    this.bulkPagesSummary = bulkPagesSummary;
  }


  public AppendixBacklinksDayStatisticsRatesData historicalNewLostSummary(AppendixInfo historicalNewLostSummary) {
    this.historicalNewLostSummary = historicalNewLostSummary;
    return this;
  }

  /**
   * Get historicalNewLostSummary
   * @return historicalNewLostSummary
   */
  @javax.annotation.Nullable
  public AppendixInfo getHistoricalNewLostSummary() {
    return historicalNewLostSummary;
  }

  public void setHistoricalNewLostSummary(AppendixInfo historicalNewLostSummary) {
    this.historicalNewLostSummary = historicalNewLostSummary;
  }


  public AppendixBacklinksDayStatisticsRatesData availableFilters(Double availableFilters) {
    this.availableFilters = availableFilters;
    return this;
  }

  /**
   * Get availableFilters
   * @return availableFilters
   */
  @javax.annotation.Nullable
  public Double getAvailableFilters() {
    return availableFilters;
  }

  public void setAvailableFilters(Double availableFilters) {
    this.availableFilters = availableFilters;
  }


  public AppendixBacklinksDayStatisticsRatesData bulkSpamScore(AppendixInfo bulkSpamScore) {
    this.bulkSpamScore = bulkSpamScore;
    return this;
  }

  /**
   * Get bulkSpamScore
   * @return bulkSpamScore
   */
  @javax.annotation.Nullable
  public AppendixInfo getBulkSpamScore() {
    return bulkSpamScore;
  }

  public void setBulkSpamScore(AppendixInfo bulkSpamScore) {
    this.bulkSpamScore = bulkSpamScore;
  }


  public AppendixBacklinksDayStatisticsRatesData index(Double index) {
    this.index = index;
    return this;
  }

  /**
   * Get index
   * @return index
   */
  @javax.annotation.Nullable
  public Double getIndex() {
    return index;
  }

  public void setIndex(Double index) {
    this.index = index;
  }


  public AppendixBacklinksDayStatisticsRatesData pagesSummaryWithPageInfo(AppendixInfo pagesSummaryWithPageInfo) {
    this.pagesSummaryWithPageInfo = pagesSummaryWithPageInfo;
    return this;
  }

  /**
   * Get pagesSummaryWithPageInfo
   * @return pagesSummaryWithPageInfo
   */
  @javax.annotation.Nullable
  public AppendixInfo getPagesSummaryWithPageInfo() {
    return pagesSummaryWithPageInfo;
  }

  public void setPagesSummaryWithPageInfo(AppendixInfo pagesSummaryWithPageInfo) {
    this.pagesSummaryWithPageInfo = pagesSummaryWithPageInfo;
  }


  public AppendixBacklinksDayStatisticsRatesData idList(Double idList) {
    this.idList = idList;
    return this;
  }

  /**
   * Get idList
   * @return idList
   */
  @javax.annotation.Nullable
  public Double getIdList() {
    return idList;
  }

  public void setIdList(Double idList) {
    this.idList = idList;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the AppendixBacklinksDayStatisticsRatesData instance itself
   */
  public AppendixBacklinksDayStatisticsRatesData putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AppendixBacklinksDayStatisticsRatesData appendixBacklinksDayStatisticsRatesData = (AppendixBacklinksDayStatisticsRatesData) o;
    return Objects.equals(this.summary, appendixBacklinksDayStatisticsRatesData.summary) &&
        Objects.equals(this.history, appendixBacklinksDayStatisticsRatesData.history) &&
        Objects.equals(this.contentDuplicates, appendixBacklinksDayStatisticsRatesData.contentDuplicates) &&
        Objects.equals(this.domainIntersection, appendixBacklinksDayStatisticsRatesData.domainIntersection) &&
        Objects.equals(this.backlinks, appendixBacklinksDayStatisticsRatesData.backlinks) &&
        Objects.equals(this.domainPages, appendixBacklinksDayStatisticsRatesData.domainPages) &&
        Objects.equals(this.anchors, appendixBacklinksDayStatisticsRatesData.anchors) &&
        Objects.equals(this.referringDomains, appendixBacklinksDayStatisticsRatesData.referringDomains) &&
        Objects.equals(this.pageIntersection, appendixBacklinksDayStatisticsRatesData.pageIntersection) &&
        Objects.equals(this.referringNetworks, appendixBacklinksDayStatisticsRatesData.referringNetworks) &&
        Objects.equals(this.bulkRanks, appendixBacklinksDayStatisticsRatesData.bulkRanks) &&
        Objects.equals(this.bulkBacklinks, appendixBacklinksDayStatisticsRatesData.bulkBacklinks) &&
        Objects.equals(this.bulkNewLostBacklinks, appendixBacklinksDayStatisticsRatesData.bulkNewLostBacklinks) &&
        Objects.equals(this.bulkNewLostReferringDomains, appendixBacklinksDayStatisticsRatesData.bulkNewLostReferringDomains) &&
        Objects.equals(this.bulkReferringDomains, appendixBacklinksDayStatisticsRatesData.bulkReferringDomains) &&
        Objects.equals(this.errors, appendixBacklinksDayStatisticsRatesData.errors) &&
        Objects.equals(this.domainPagesSummary, appendixBacklinksDayStatisticsRatesData.domainPagesSummary) &&
        Objects.equals(this.timeseriesSummary, appendixBacklinksDayStatisticsRatesData.timeseriesSummary) &&
        Objects.equals(this.timeseriesNewLostSummary, appendixBacklinksDayStatisticsRatesData.timeseriesNewLostSummary) &&
        Objects.equals(this.competitors, appendixBacklinksDayStatisticsRatesData.competitors) &&
        Objects.equals(this.bulkPagesSummary, appendixBacklinksDayStatisticsRatesData.bulkPagesSummary) &&
        Objects.equals(this.historicalNewLostSummary, appendixBacklinksDayStatisticsRatesData.historicalNewLostSummary) &&
        Objects.equals(this.availableFilters, appendixBacklinksDayStatisticsRatesData.availableFilters) &&
        Objects.equals(this.bulkSpamScore, appendixBacklinksDayStatisticsRatesData.bulkSpamScore) &&
        Objects.equals(this.index, appendixBacklinksDayStatisticsRatesData.index) &&
        Objects.equals(this.pagesSummaryWithPageInfo, appendixBacklinksDayStatisticsRatesData.pagesSummaryWithPageInfo) &&
        Objects.equals(this.idList, appendixBacklinksDayStatisticsRatesData.idList)&&
        Objects.equals(this.additionalProperties, appendixBacklinksDayStatisticsRatesData.additionalProperties);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(summary, history, contentDuplicates, domainIntersection, backlinks, domainPages, anchors, referringDomains, pageIntersection, referringNetworks, bulkRanks, bulkBacklinks, bulkNewLostBacklinks, bulkNewLostReferringDomains, bulkReferringDomains, errors, domainPagesSummary, timeseriesSummary, timeseriesNewLostSummary, competitors, bulkPagesSummary, historicalNewLostSummary, availableFilters, bulkSpamScore, index, pagesSummaryWithPageInfo, idList, additionalProperties);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AppendixBacklinksDayStatisticsRatesData {\n");
    sb.append("    summary: ").append(toIndentedString(summary)).append("\n");
    sb.append("    history: ").append(toIndentedString(history)).append("\n");
    sb.append("    contentDuplicates: ").append(toIndentedString(contentDuplicates)).append("\n");
    sb.append("    domainIntersection: ").append(toIndentedString(domainIntersection)).append("\n");
    sb.append("    backlinks: ").append(toIndentedString(backlinks)).append("\n");
    sb.append("    domainPages: ").append(toIndentedString(domainPages)).append("\n");
    sb.append("    anchors: ").append(toIndentedString(anchors)).append("\n");
    sb.append("    referringDomains: ").append(toIndentedString(referringDomains)).append("\n");
    sb.append("    pageIntersection: ").append(toIndentedString(pageIntersection)).append("\n");
    sb.append("    referringNetworks: ").append(toIndentedString(referringNetworks)).append("\n");
    sb.append("    bulkRanks: ").append(toIndentedString(bulkRanks)).append("\n");
    sb.append("    bulkBacklinks: ").append(toIndentedString(bulkBacklinks)).append("\n");
    sb.append("    bulkNewLostBacklinks: ").append(toIndentedString(bulkNewLostBacklinks)).append("\n");
    sb.append("    bulkNewLostReferringDomains: ").append(toIndentedString(bulkNewLostReferringDomains)).append("\n");
    sb.append("    bulkReferringDomains: ").append(toIndentedString(bulkReferringDomains)).append("\n");
    sb.append("    errors: ").append(toIndentedString(errors)).append("\n");
    sb.append("    domainPagesSummary: ").append(toIndentedString(domainPagesSummary)).append("\n");
    sb.append("    timeseriesSummary: ").append(toIndentedString(timeseriesSummary)).append("\n");
    sb.append("    timeseriesNewLostSummary: ").append(toIndentedString(timeseriesNewLostSummary)).append("\n");
    sb.append("    competitors: ").append(toIndentedString(competitors)).append("\n");
    sb.append("    bulkPagesSummary: ").append(toIndentedString(bulkPagesSummary)).append("\n");
    sb.append("    historicalNewLostSummary: ").append(toIndentedString(historicalNewLostSummary)).append("\n");
    sb.append("    availableFilters: ").append(toIndentedString(availableFilters)).append("\n");
    sb.append("    bulkSpamScore: ").append(toIndentedString(bulkSpamScore)).append("\n");
    sb.append("    index: ").append(toIndentedString(index)).append("\n");
    sb.append("    pagesSummaryWithPageInfo: ").append(toIndentedString(pagesSummaryWithPageInfo)).append("\n");
    sb.append("    idList: ").append(toIndentedString(idList)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("summary");
    openapiFields.add("history");
    openapiFields.add("content_duplicates");
    openapiFields.add("domain_intersection");
    openapiFields.add("backlinks");
    openapiFields.add("domain_pages");
    openapiFields.add("anchors");
    openapiFields.add("referring_domains");
    openapiFields.add("page_intersection");
    openapiFields.add("referring_networks");
    openapiFields.add("bulk_ranks");
    openapiFields.add("bulk_backlinks");
    openapiFields.add("bulk_new_lost_backlinks");
    openapiFields.add("bulk_new_lost_referring_domains");
    openapiFields.add("bulk_referring_domains");
    openapiFields.add("errors");
    openapiFields.add("domain_pages_summary");
    openapiFields.add("timeseries_summary");
    openapiFields.add("timeseries_new_lost_summary");
    openapiFields.add("competitors");
    openapiFields.add("bulk_pages_summary");
    openapiFields.add("historical_new_lost_summary");
    openapiFields.add("available_filters");
    openapiFields.add("bulk_spam_score");
    openapiFields.add("index");
    openapiFields.add("pages_summary_with_page_info");
    openapiFields.add("id_list");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to AppendixBacklinksDayStatisticsRatesData
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!AppendixBacklinksDayStatisticsRatesData.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AppendixBacklinksDayStatisticsRatesData is not found in the empty JSON string", AppendixBacklinksDayStatisticsRatesData.openapiRequiredFields.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `summary`
      if (jsonObj.get("summary") != null && !jsonObj.get("summary").isJsonNull()) {
        AppendixInfo.validateJsonElement(jsonObj.get("summary"));
      }
      // validate the optional field `history`
      if (jsonObj.get("history") != null && !jsonObj.get("history").isJsonNull()) {
        AppendixInfo.validateJsonElement(jsonObj.get("history"));
      }
      // validate the optional field `content_duplicates`
      if (jsonObj.get("content_duplicates") != null && !jsonObj.get("content_duplicates").isJsonNull()) {
        AppendixInfo.validateJsonElement(jsonObj.get("content_duplicates"));
      }
      // validate the optional field `domain_intersection`
      if (jsonObj.get("domain_intersection") != null && !jsonObj.get("domain_intersection").isJsonNull()) {
        AppendixInfo.validateJsonElement(jsonObj.get("domain_intersection"));
      }
      // validate the optional field `backlinks`
      if (jsonObj.get("backlinks") != null && !jsonObj.get("backlinks").isJsonNull()) {
        AppendixInfo.validateJsonElement(jsonObj.get("backlinks"));
      }
      // validate the optional field `domain_pages`
      if (jsonObj.get("domain_pages") != null && !jsonObj.get("domain_pages").isJsonNull()) {
        AppendixInfo.validateJsonElement(jsonObj.get("domain_pages"));
      }
      // validate the optional field `anchors`
      if (jsonObj.get("anchors") != null && !jsonObj.get("anchors").isJsonNull()) {
        AppendixInfo.validateJsonElement(jsonObj.get("anchors"));
      }
      // validate the optional field `referring_domains`
      if (jsonObj.get("referring_domains") != null && !jsonObj.get("referring_domains").isJsonNull()) {
        AppendixInfo.validateJsonElement(jsonObj.get("referring_domains"));
      }
      // validate the optional field `page_intersection`
      if (jsonObj.get("page_intersection") != null && !jsonObj.get("page_intersection").isJsonNull()) {
        AppendixInfo.validateJsonElement(jsonObj.get("page_intersection"));
      }
      // validate the optional field `referring_networks`
      if (jsonObj.get("referring_networks") != null && !jsonObj.get("referring_networks").isJsonNull()) {
        AppendixInfo.validateJsonElement(jsonObj.get("referring_networks"));
      }
      // validate the optional field `bulk_ranks`
      if (jsonObj.get("bulk_ranks") != null && !jsonObj.get("bulk_ranks").isJsonNull()) {
        AppendixInfo.validateJsonElement(jsonObj.get("bulk_ranks"));
      }
      // validate the optional field `bulk_backlinks`
      if (jsonObj.get("bulk_backlinks") != null && !jsonObj.get("bulk_backlinks").isJsonNull()) {
        AppendixInfo.validateJsonElement(jsonObj.get("bulk_backlinks"));
      }
      // validate the optional field `bulk_new_lost_backlinks`
      if (jsonObj.get("bulk_new_lost_backlinks") != null && !jsonObj.get("bulk_new_lost_backlinks").isJsonNull()) {
        AppendixInfo.validateJsonElement(jsonObj.get("bulk_new_lost_backlinks"));
      }
      // validate the optional field `bulk_new_lost_referring_domains`
      if (jsonObj.get("bulk_new_lost_referring_domains") != null && !jsonObj.get("bulk_new_lost_referring_domains").isJsonNull()) {
        AppendixInfo.validateJsonElement(jsonObj.get("bulk_new_lost_referring_domains"));
      }
      // validate the optional field `bulk_referring_domains`
      if (jsonObj.get("bulk_referring_domains") != null && !jsonObj.get("bulk_referring_domains").isJsonNull()) {
        AppendixInfo.validateJsonElement(jsonObj.get("bulk_referring_domains"));
      }
      // validate the optional field `domain_pages_summary`
      if (jsonObj.get("domain_pages_summary") != null && !jsonObj.get("domain_pages_summary").isJsonNull()) {
        AppendixInfo.validateJsonElement(jsonObj.get("domain_pages_summary"));
      }
      // validate the optional field `timeseries_summary`
      if (jsonObj.get("timeseries_summary") != null && !jsonObj.get("timeseries_summary").isJsonNull()) {
        AppendixInfo.validateJsonElement(jsonObj.get("timeseries_summary"));
      }
      // validate the optional field `timeseries_new_lost_summary`
      if (jsonObj.get("timeseries_new_lost_summary") != null && !jsonObj.get("timeseries_new_lost_summary").isJsonNull()) {
        AppendixInfo.validateJsonElement(jsonObj.get("timeseries_new_lost_summary"));
      }
      // validate the optional field `competitors`
      if (jsonObj.get("competitors") != null && !jsonObj.get("competitors").isJsonNull()) {
        AppendixInfo.validateJsonElement(jsonObj.get("competitors"));
      }
      // validate the optional field `bulk_pages_summary`
      if (jsonObj.get("bulk_pages_summary") != null && !jsonObj.get("bulk_pages_summary").isJsonNull()) {
        AppendixInfo.validateJsonElement(jsonObj.get("bulk_pages_summary"));
      }
      // validate the optional field `historical_new_lost_summary`
      if (jsonObj.get("historical_new_lost_summary") != null && !jsonObj.get("historical_new_lost_summary").isJsonNull()) {
        AppendixInfo.validateJsonElement(jsonObj.get("historical_new_lost_summary"));
      }
      // validate the optional field `bulk_spam_score`
      if (jsonObj.get("bulk_spam_score") != null && !jsonObj.get("bulk_spam_score").isJsonNull()) {
        AppendixInfo.validateJsonElement(jsonObj.get("bulk_spam_score"));
      }
      // validate the optional field `pages_summary_with_page_info`
      if (jsonObj.get("pages_summary_with_page_info") != null && !jsonObj.get("pages_summary_with_page_info").isJsonNull()) {
        AppendixInfo.validateJsonElement(jsonObj.get("pages_summary_with_page_info"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AppendixBacklinksDayStatisticsRatesData.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AppendixBacklinksDayStatisticsRatesData' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AppendixBacklinksDayStatisticsRatesData> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AppendixBacklinksDayStatisticsRatesData.class));

       return (TypeAdapter<T>) new TypeAdapter<AppendixBacklinksDayStatisticsRatesData>() {
           @Override
           public void write(JsonWriter out, AppendixBacklinksDayStatisticsRatesData value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additional properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   JsonElement jsonElement = gson.toJsonTree(entry.getValue());
                   if (jsonElement.isJsonArray()) {
                     obj.add(entry.getKey(), jsonElement.getAsJsonArray());
                   } else {
                     obj.add(entry.getKey(), jsonElement.getAsJsonObject());
                   }
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public AppendixBacklinksDayStatisticsRatesData read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             JsonObject jsonObj = jsonElement.getAsJsonObject();
             // store additional fields in the deserialized instance
             AppendixBacklinksDayStatisticsRatesData instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of AppendixBacklinksDayStatisticsRatesData given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of AppendixBacklinksDayStatisticsRatesData
   * @throws IOException if the JSON string is invalid with respect to AppendixBacklinksDayStatisticsRatesData
   */
  public static AppendixBacklinksDayStatisticsRatesData fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AppendixBacklinksDayStatisticsRatesData.class);
  }

  /**
   * Convert an instance of AppendixBacklinksDayStatisticsRatesData to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

