/*
 * DataForSEO API documentation
 * DataForSEO API is the starting point on your journey towards building powerful SEO software. With DataForSEO you can get all the data you need to build an efficient application while also saving your time and budget. DataForSEO API is using the REST technology for interchanging data between your application and our service. The data exchange is made through the widely used HTTP protocol, which allows applying our API to almost all programming languages.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.dataforseo.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.github.dataforseo.client.model.BaseGoogleFinanceTickerSearchSerpElementItem;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import io.github.dataforseo.client.JSON;

/**
 * GoogleFinanceAssetPairSerpElementItem
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-04-20T19:00:02.019506800+03:00[Europe/Kiev]", comments = "Generator version: 7.8.0")
public class GoogleFinanceAssetPairSerpElementItem extends BaseGoogleFinanceTickerSearchSerpElementItem {
  public static final String SERIALIZED_NAME_BASE_SYMBOL = "base_symbol";
  @SerializedName(SERIALIZED_NAME_BASE_SYMBOL)
  private String baseSymbol;

  public static final String SERIALIZED_NAME_QUOTE_SYMBOL = "quote_symbol";
  @SerializedName(SERIALIZED_NAME_QUOTE_SYMBOL)
  private String quoteSymbol;

  public static final String SERIALIZED_NAME_BASE_DISPLAY_NAME = "base_display_name";
  @SerializedName(SERIALIZED_NAME_BASE_DISPLAY_NAME)
  private String baseDisplayName;

  public static final String SERIALIZED_NAME_QUOTE_DISPLAY_NAME = "quote_display_name";
  @SerializedName(SERIALIZED_NAME_QUOTE_DISPLAY_NAME)
  private String quoteDisplayName;

  public static final String SERIALIZED_NAME_PRICE = "price";
  @SerializedName(SERIALIZED_NAME_PRICE)
  private Float price;

  public static final String SERIALIZED_NAME_PRICE_DELTA = "price_delta";
  @SerializedName(SERIALIZED_NAME_PRICE_DELTA)
  private Float priceDelta;

  public GoogleFinanceAssetPairSerpElementItem() {
  }

  public GoogleFinanceAssetPairSerpElementItem baseSymbol(String baseSymbol) {
    this.baseSymbol = baseSymbol;
    return this;
  }

  /**
   * identifier of the base asset in a pair example: EUR
   * @return baseSymbol
   */
  @javax.annotation.Nullable
  public String getBaseSymbol() {
    return baseSymbol;
  }

  public void setBaseSymbol(String baseSymbol) {
    this.baseSymbol = baseSymbol;
  }


  public GoogleFinanceAssetPairSerpElementItem quoteSymbol(String quoteSymbol) {
    this.quoteSymbol = quoteSymbol;
    return this;
  }

  /**
   * identifier of the quote asset in a pair example: USD
   * @return quoteSymbol
   */
  @javax.annotation.Nullable
  public String getQuoteSymbol() {
    return quoteSymbol;
  }

  public void setQuoteSymbol(String quoteSymbol) {
    this.quoteSymbol = quoteSymbol;
  }


  public GoogleFinanceAssetPairSerpElementItem baseDisplayName(String baseDisplayName) {
    this.baseDisplayName = baseDisplayName;
    return this;
  }

  /**
   * full name of the base asset in a pair example: Euro
   * @return baseDisplayName
   */
  @javax.annotation.Nullable
  public String getBaseDisplayName() {
    return baseDisplayName;
  }

  public void setBaseDisplayName(String baseDisplayName) {
    this.baseDisplayName = baseDisplayName;
  }


  public GoogleFinanceAssetPairSerpElementItem quoteDisplayName(String quoteDisplayName) {
    this.quoteDisplayName = quoteDisplayName;
    return this;
  }

  /**
   * full name of the base asset in a pair example: Euro
   * @return quoteDisplayName
   */
  @javax.annotation.Nullable
  public String getQuoteDisplayName() {
    return quoteDisplayName;
  }

  public void setQuoteDisplayName(String quoteDisplayName) {
    this.quoteDisplayName = quoteDisplayName;
  }


  public GoogleFinanceAssetPairSerpElementItem price(Float price) {
    this.price = price;
    return this;
  }

  /**
   * value of the base asset compared to the quote asset
   * @return price
   */
  @javax.annotation.Nullable
  public Float getPrice() {
    return price;
  }

  public void setPrice(Float price) {
    this.price = price;
  }


  public GoogleFinanceAssetPairSerpElementItem priceDelta(Float priceDelta) {
    this.priceDelta = priceDelta;
    return this;
  }

  /**
   * change in price change in price at a given timestamp
   * @return priceDelta
   */
  @javax.annotation.Nullable
  public Float getPriceDelta() {
    return priceDelta;
  }

  public void setPriceDelta(Float priceDelta) {
    this.priceDelta = priceDelta;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the GoogleFinanceAssetPairSerpElementItem instance itself
   */
  public GoogleFinanceAssetPairSerpElementItem putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleFinanceAssetPairSerpElementItem googleFinanceAssetPairSerpElementItem = (GoogleFinanceAssetPairSerpElementItem) o;
    return Objects.equals(this.baseSymbol, googleFinanceAssetPairSerpElementItem.baseSymbol) &&
        Objects.equals(this.quoteSymbol, googleFinanceAssetPairSerpElementItem.quoteSymbol) &&
        Objects.equals(this.baseDisplayName, googleFinanceAssetPairSerpElementItem.baseDisplayName) &&
        Objects.equals(this.quoteDisplayName, googleFinanceAssetPairSerpElementItem.quoteDisplayName) &&
        Objects.equals(this.price, googleFinanceAssetPairSerpElementItem.price) &&
        Objects.equals(this.priceDelta, googleFinanceAssetPairSerpElementItem.priceDelta)&&
        Objects.equals(this.additionalProperties, googleFinanceAssetPairSerpElementItem.additionalProperties) &&
        super.equals(o);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(baseSymbol, quoteSymbol, baseDisplayName, quoteDisplayName, price, priceDelta, super.hashCode(), additionalProperties);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleFinanceAssetPairSerpElementItem {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    baseSymbol: ").append(toIndentedString(baseSymbol)).append("\n");
    sb.append("    quoteSymbol: ").append(toIndentedString(quoteSymbol)).append("\n");
    sb.append("    baseDisplayName: ").append(toIndentedString(baseDisplayName)).append("\n");
    sb.append("    quoteDisplayName: ").append(toIndentedString(quoteDisplayName)).append("\n");
    sb.append("    price: ").append(toIndentedString(price)).append("\n");
    sb.append("    priceDelta: ").append(toIndentedString(priceDelta)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("type");
    openapiFields.add("rank_group");
    openapiFields.add("rank_absolute");
    openapiFields.add("identifier");
    openapiFields.add("displayed_name");
    openapiFields.add("url");
    openapiFields.add("location");
    openapiFields.add("trend");
    openapiFields.add("timestamp");
    openapiFields.add("percentage_delta");
    openapiFields.add("base_symbol");
    openapiFields.add("quote_symbol");
    openapiFields.add("base_display_name");
    openapiFields.add("quote_display_name");
    openapiFields.add("price");
    openapiFields.add("price_delta");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleFinanceAssetPairSerpElementItem
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleFinanceAssetPairSerpElementItem.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleFinanceAssetPairSerpElementItem is not found in the empty JSON string", GoogleFinanceAssetPairSerpElementItem.openapiRequiredFields.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("base_symbol") != null && !jsonObj.get("base_symbol").isJsonNull()) && !jsonObj.get("base_symbol").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `base_symbol` to be a primitive type in the JSON string but got `%s`", jsonObj.get("base_symbol").toString()));
      }
      if ((jsonObj.get("quote_symbol") != null && !jsonObj.get("quote_symbol").isJsonNull()) && !jsonObj.get("quote_symbol").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `quote_symbol` to be a primitive type in the JSON string but got `%s`", jsonObj.get("quote_symbol").toString()));
      }
      if ((jsonObj.get("base_display_name") != null && !jsonObj.get("base_display_name").isJsonNull()) && !jsonObj.get("base_display_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `base_display_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("base_display_name").toString()));
      }
      if ((jsonObj.get("quote_display_name") != null && !jsonObj.get("quote_display_name").isJsonNull()) && !jsonObj.get("quote_display_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `quote_display_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("quote_display_name").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleFinanceAssetPairSerpElementItem.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleFinanceAssetPairSerpElementItem' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleFinanceAssetPairSerpElementItem> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleFinanceAssetPairSerpElementItem.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleFinanceAssetPairSerpElementItem>() {
           @Override
           public void write(JsonWriter out, GoogleFinanceAssetPairSerpElementItem value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additional properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   JsonElement jsonElement = gson.toJsonTree(entry.getValue());
                   if (jsonElement.isJsonArray()) {
                     obj.add(entry.getKey(), jsonElement.getAsJsonArray());
                   } else {
                     obj.add(entry.getKey(), jsonElement.getAsJsonObject());
                   }
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleFinanceAssetPairSerpElementItem read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             JsonObject jsonObj = jsonElement.getAsJsonObject();
             // store additional fields in the deserialized instance
             GoogleFinanceAssetPairSerpElementItem instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleFinanceAssetPairSerpElementItem given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleFinanceAssetPairSerpElementItem
   * @throws IOException if the JSON string is invalid with respect to GoogleFinanceAssetPairSerpElementItem
   */
  public static GoogleFinanceAssetPairSerpElementItem fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleFinanceAssetPairSerpElementItem.class);
  }

  /**
   * Convert an instance of GoogleFinanceAssetPairSerpElementItem to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

