/*
 * DataForSEO API documentation
 * DataForSEO API is the starting point on your journey towards building powerful SEO software. With DataForSEO you can get all the data you need to build an efficient application while also saving your time and budget. DataForSEO API is using the REST technology for interchanging data between your application and our service. The data exchange is made through the widely used HTTP protocol, which allows applying our API to almost all programming languages.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.dataforseo.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.github.dataforseo.client.model.ImagesElement;
import io.github.dataforseo.client.model.RatingInfo;
import io.github.dataforseo.client.model.ReviewHighlights;
import io.github.dataforseo.client.model.Source;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import io.github.dataforseo.client.JSON;

/**
 * BusinessDataGoogleExtendedReviewsTaskGetItem
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-03-10T21:39:12.196275300+02:00[Europe/Kiev]", comments = "Generator version: 7.8.0")
public class BusinessDataGoogleExtendedReviewsTaskGetItem {
  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private String type;

  public static final String SERIALIZED_NAME_RANK_GROUP = "rank_group";
  @SerializedName(SERIALIZED_NAME_RANK_GROUP)
  private Integer rankGroup;

  public static final String SERIALIZED_NAME_RANK_ABSOLUTE = "rank_absolute";
  @SerializedName(SERIALIZED_NAME_RANK_ABSOLUTE)
  private Integer rankAbsolute;

  public static final String SERIALIZED_NAME_POSITION = "position";
  @SerializedName(SERIALIZED_NAME_POSITION)
  private String position;

  public static final String SERIALIZED_NAME_XPATH = "xpath";
  @SerializedName(SERIALIZED_NAME_XPATH)
  private String xpath;

  public static final String SERIALIZED_NAME_REVIEW_TEXT = "review_text";
  @SerializedName(SERIALIZED_NAME_REVIEW_TEXT)
  private String reviewText;

  public static final String SERIALIZED_NAME_ORIGINAL_REVIEW_TEXT = "original_review_text";
  @SerializedName(SERIALIZED_NAME_ORIGINAL_REVIEW_TEXT)
  private String originalReviewText;

  public static final String SERIALIZED_NAME_TIME_AGO = "time_ago";
  @SerializedName(SERIALIZED_NAME_TIME_AGO)
  private String timeAgo;

  public static final String SERIALIZED_NAME_TIMESTAMP = "timestamp";
  @SerializedName(SERIALIZED_NAME_TIMESTAMP)
  private String timestamp;

  public static final String SERIALIZED_NAME_RATING = "rating";
  @SerializedName(SERIALIZED_NAME_RATING)
  private RatingInfo rating;

  public static final String SERIALIZED_NAME_REVIEWS_COUNT = "reviews_count";
  @SerializedName(SERIALIZED_NAME_REVIEWS_COUNT)
  private Long reviewsCount;

  public static final String SERIALIZED_NAME_PHOTOS_COUNT = "photos_count";
  @SerializedName(SERIALIZED_NAME_PHOTOS_COUNT)
  private Long photosCount;

  public static final String SERIALIZED_NAME_LOCAL_GUIDE = "local_guide";
  @SerializedName(SERIALIZED_NAME_LOCAL_GUIDE)
  private Boolean localGuide;

  public static final String SERIALIZED_NAME_PROFILE_NAME = "profile_name";
  @SerializedName(SERIALIZED_NAME_PROFILE_NAME)
  private String profileName;

  public static final String SERIALIZED_NAME_PROFILE_URL = "profile_url";
  @SerializedName(SERIALIZED_NAME_PROFILE_URL)
  private String profileUrl;

  public static final String SERIALIZED_NAME_REVIEW_URL = "review_url";
  @SerializedName(SERIALIZED_NAME_REVIEW_URL)
  private String reviewUrl;

  public static final String SERIALIZED_NAME_PROFILE_IMAGE_URL = "profile_image_url";
  @SerializedName(SERIALIZED_NAME_PROFILE_IMAGE_URL)
  private String profileImageUrl;

  public static final String SERIALIZED_NAME_OWNER_ANSWER = "owner_answer";
  @SerializedName(SERIALIZED_NAME_OWNER_ANSWER)
  private String ownerAnswer;

  public static final String SERIALIZED_NAME_ORIGINAL_OWNER_ANSWER = "original_owner_answer";
  @SerializedName(SERIALIZED_NAME_ORIGINAL_OWNER_ANSWER)
  private String originalOwnerAnswer;

  public static final String SERIALIZED_NAME_OWNER_TIME_AGO = "owner_time_ago";
  @SerializedName(SERIALIZED_NAME_OWNER_TIME_AGO)
  private String ownerTimeAgo;

  public static final String SERIALIZED_NAME_OWNER_TIMESTAMP = "owner_timestamp";
  @SerializedName(SERIALIZED_NAME_OWNER_TIMESTAMP)
  private String ownerTimestamp;

  public static final String SERIALIZED_NAME_REVIEW_ID = "review_id";
  @SerializedName(SERIALIZED_NAME_REVIEW_ID)
  private String reviewId;

  public static final String SERIALIZED_NAME_IMAGES = "images";
  @SerializedName(SERIALIZED_NAME_IMAGES)
  private List<ImagesElement> images;

  public static final String SERIALIZED_NAME_REVIEW_HIGHLIGHTS = "review_highlights";
  @SerializedName(SERIALIZED_NAME_REVIEW_HIGHLIGHTS)
  private List<ReviewHighlights> reviewHighlights;

  public static final String SERIALIZED_NAME_SOURCE = "source";
  @SerializedName(SERIALIZED_NAME_SOURCE)
  private Source source;

  public BusinessDataGoogleExtendedReviewsTaskGetItem() {
  }

  public BusinessDataGoogleExtendedReviewsTaskGetItem type(String type) {
    this.type = type;
    return this;
  }

  /**
   * type of element
   * @return type
   */
  @javax.annotation.Nullable
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }


  public BusinessDataGoogleExtendedReviewsTaskGetItem rankGroup(Integer rankGroup) {
    this.rankGroup = rankGroup;
    return this;
  }

  /**
   * position within a group of elements with identical type values positions of elements with different type values are omitted from rank_group
   * @return rankGroup
   */
  @javax.annotation.Nullable
  public Integer getRankGroup() {
    return rankGroup;
  }

  public void setRankGroup(Integer rankGroup) {
    this.rankGroup = rankGroup;
  }


  public BusinessDataGoogleExtendedReviewsTaskGetItem rankAbsolute(Integer rankAbsolute) {
    this.rankAbsolute = rankAbsolute;
    return this;
  }

  /**
   * absolute rank among all the listed reviews absolute position among all reviews on the list
   * @return rankAbsolute
   */
  @javax.annotation.Nullable
  public Integer getRankAbsolute() {
    return rankAbsolute;
  }

  public void setRankAbsolute(Integer rankAbsolute) {
    this.rankAbsolute = rankAbsolute;
  }


  public BusinessDataGoogleExtendedReviewsTaskGetItem position(String position) {
    this.position = position;
    return this;
  }

  /**
   * the alignment of the review in SERP can take the following values: right
   * @return position
   */
  @javax.annotation.Nullable
  public String getPosition() {
    return position;
  }

  public void setPosition(String position) {
    this.position = position;
  }


  public BusinessDataGoogleExtendedReviewsTaskGetItem xpath(String xpath) {
    this.xpath = xpath;
    return this;
  }

  /**
   * the XPath of the review
   * @return xpath
   */
  @javax.annotation.Nullable
  public String getXpath() {
    return xpath;
  }

  public void setXpath(String xpath) {
    this.xpath = xpath;
  }


  public BusinessDataGoogleExtendedReviewsTaskGetItem reviewText(String reviewText) {
    this.reviewText = reviewText;
    return this;
  }

  /**
   * the content of the review
   * @return reviewText
   */
  @javax.annotation.Nullable
  public String getReviewText() {
    return reviewText;
  }

  public void setReviewText(String reviewText) {
    this.reviewText = reviewText;
  }


  public BusinessDataGoogleExtendedReviewsTaskGetItem originalReviewText(String originalReviewText) {
    this.originalReviewText = originalReviewText;
    return this;
  }

  /**
   * original content of the review the original content of the review, no auto-translate applied
   * @return originalReviewText
   */
  @javax.annotation.Nullable
  public String getOriginalReviewText() {
    return originalReviewText;
  }

  public void setOriginalReviewText(String originalReviewText) {
    this.originalReviewText = originalReviewText;
  }


  public BusinessDataGoogleExtendedReviewsTaskGetItem timeAgo(String timeAgo) {
    this.timeAgo = timeAgo;
    return this;
  }

  /**
   * the time of publication indicates the time (in the ‘time ago’ format) when the review was listed
   * @return timeAgo
   */
  @javax.annotation.Nullable
  public String getTimeAgo() {
    return timeAgo;
  }

  public void setTimeAgo(String timeAgo) {
    this.timeAgo = timeAgo;
  }


  public BusinessDataGoogleExtendedReviewsTaskGetItem timestamp(String timestamp) {
    this.timestamp = timestamp;
    return this;
  }

  /**
   * date and time when a review was published in the UTC format: “yyyy-mm-dd hh-mm-ss +00:00” example: 2019-11-15 12:57:46 +00:00
   * @return timestamp
   */
  @javax.annotation.Nullable
  public String getTimestamp() {
    return timestamp;
  }

  public void setTimestamp(String timestamp) {
    this.timestamp = timestamp;
  }


  public BusinessDataGoogleExtendedReviewsTaskGetItem rating(RatingInfo rating) {
    this.rating = rating;
    return this;
  }

  /**
   * Get rating
   * @return rating
   */
  @javax.annotation.Nullable
  public RatingInfo getRating() {
    return rating;
  }

  public void setRating(RatingInfo rating) {
    this.rating = rating;
  }


  public BusinessDataGoogleExtendedReviewsTaskGetItem reviewsCount(Long reviewsCount) {
    this.reviewsCount = reviewsCount;
    return this;
  }

  /**
   * total number of reviews submitted by the reviewer
   * @return reviewsCount
   */
  @javax.annotation.Nullable
  public Long getReviewsCount() {
    return reviewsCount;
  }

  public void setReviewsCount(Long reviewsCount) {
    this.reviewsCount = reviewsCount;
  }


  public BusinessDataGoogleExtendedReviewsTaskGetItem photosCount(Long photosCount) {
    this.photosCount = photosCount;
    return this;
  }

  /**
   * total number of photos submitted by the reviewer
   * @return photosCount
   */
  @javax.annotation.Nullable
  public Long getPhotosCount() {
    return photosCount;
  }

  public void setPhotosCount(Long photosCount) {
    this.photosCount = photosCount;
  }


  public BusinessDataGoogleExtendedReviewsTaskGetItem localGuide(Boolean localGuide) {
    this.localGuide = localGuide;
    return this;
  }

  /**
   * indicates whether the reviewer has a ‘local guide’ status
   * @return localGuide
   */
  @javax.annotation.Nullable
  public Boolean getLocalGuide() {
    return localGuide;
  }

  public void setLocalGuide(Boolean localGuide) {
    this.localGuide = localGuide;
  }


  public BusinessDataGoogleExtendedReviewsTaskGetItem profileName(String profileName) {
    this.profileName = profileName;
    return this;
  }

  /**
   * profile name of the reviewer
   * @return profileName
   */
  @javax.annotation.Nullable
  public String getProfileName() {
    return profileName;
  }

  public void setProfileName(String profileName) {
    this.profileName = profileName;
  }


  public BusinessDataGoogleExtendedReviewsTaskGetItem profileUrl(String profileUrl) {
    this.profileUrl = profileUrl;
    return this;
  }

  /**
   * URL of the reviewer’s profile
   * @return profileUrl
   */
  @javax.annotation.Nullable
  public String getProfileUrl() {
    return profileUrl;
  }

  public void setProfileUrl(String profileUrl) {
    this.profileUrl = profileUrl;
  }


  public BusinessDataGoogleExtendedReviewsTaskGetItem reviewUrl(String reviewUrl) {
    this.reviewUrl = reviewUrl;
    return this;
  }

  /**
   * the URL of the review
   * @return reviewUrl
   */
  @javax.annotation.Nullable
  public String getReviewUrl() {
    return reviewUrl;
  }

  public void setReviewUrl(String reviewUrl) {
    this.reviewUrl = reviewUrl;
  }


  public BusinessDataGoogleExtendedReviewsTaskGetItem profileImageUrl(String profileImageUrl) {
    this.profileImageUrl = profileImageUrl;
    return this;
  }

  /**
   * URL of the reviewer’s profile image
   * @return profileImageUrl
   */
  @javax.annotation.Nullable
  public String getProfileImageUrl() {
    return profileImageUrl;
  }

  public void setProfileImageUrl(String profileImageUrl) {
    this.profileImageUrl = profileImageUrl;
  }


  public BusinessDataGoogleExtendedReviewsTaskGetItem ownerAnswer(String ownerAnswer) {
    this.ownerAnswer = ownerAnswer;
    return this;
  }

  /**
   * text of the owner’s response the owner’s response to the review
   * @return ownerAnswer
   */
  @javax.annotation.Nullable
  public String getOwnerAnswer() {
    return ownerAnswer;
  }

  public void setOwnerAnswer(String ownerAnswer) {
    this.ownerAnswer = ownerAnswer;
  }


  public BusinessDataGoogleExtendedReviewsTaskGetItem originalOwnerAnswer(String originalOwnerAnswer) {
    this.originalOwnerAnswer = originalOwnerAnswer;
    return this;
  }

  /**
   * original text of the owner’s response the original response to the review, no auto-translate applied
   * @return originalOwnerAnswer
   */
  @javax.annotation.Nullable
  public String getOriginalOwnerAnswer() {
    return originalOwnerAnswer;
  }

  public void setOriginalOwnerAnswer(String originalOwnerAnswer) {
    this.originalOwnerAnswer = originalOwnerAnswer;
  }


  public BusinessDataGoogleExtendedReviewsTaskGetItem ownerTimeAgo(String ownerTimeAgo) {
    this.ownerTimeAgo = ownerTimeAgo;
    return this;
  }

  /**
   * publication time indicates the time (in the ‘time ago’ format) when the owner submitted the response to the review
   * @return ownerTimeAgo
   */
  @javax.annotation.Nullable
  public String getOwnerTimeAgo() {
    return ownerTimeAgo;
  }

  public void setOwnerTimeAgo(String ownerTimeAgo) {
    this.ownerTimeAgo = ownerTimeAgo;
  }


  public BusinessDataGoogleExtendedReviewsTaskGetItem ownerTimestamp(String ownerTimestamp) {
    this.ownerTimestamp = ownerTimestamp;
    return this;
  }

  /**
   * date and time of the owner’s reply to the review in the UTC format: “yyyy-mm-dd hh-mm-ss +00:00” example: 2019-11-15 12:57:46 +00:00
   * @return ownerTimestamp
   */
  @javax.annotation.Nullable
  public String getOwnerTimestamp() {
    return ownerTimestamp;
  }

  public void setOwnerTimestamp(String ownerTimestamp) {
    this.ownerTimestamp = ownerTimestamp;
  }


  public BusinessDataGoogleExtendedReviewsTaskGetItem reviewId(String reviewId) {
    this.reviewId = reviewId;
    return this;
  }

  /**
   * the unique identifier of a review on Google example: ChZDSUhNMG9nS0VJQ0FnSUMxbHFyMFlnEAE
   * @return reviewId
   */
  @javax.annotation.Nullable
  public String getReviewId() {
    return reviewId;
  }

  public void setReviewId(String reviewId) {
    this.reviewId = reviewId;
  }


  public BusinessDataGoogleExtendedReviewsTaskGetItem images(List<ImagesElement> images) {
    this.images = images;
    return this;
  }

  public BusinessDataGoogleExtendedReviewsTaskGetItem addImagesItem(ImagesElement imagesItem) {
    if (this.images == null) {
      this.images = new ArrayList<>();
    }
    this.images.add(imagesItem);
    return this;
  }

  /**
   * images submitted by the reviewer
   * @return images
   */
  @javax.annotation.Nullable
  public List<ImagesElement> getImages() {
    return images;
  }

  public void setImages(List<ImagesElement> images) {
    this.images = images;
  }


  public BusinessDataGoogleExtendedReviewsTaskGetItem reviewHighlights(List<ReviewHighlights> reviewHighlights) {
    this.reviewHighlights = reviewHighlights;
    return this;
  }

  public BusinessDataGoogleExtendedReviewsTaskGetItem addReviewHighlightsItem(ReviewHighlights reviewHighlightsItem) {
    if (this.reviewHighlights == null) {
      this.reviewHighlights = new ArrayList<>();
    }
    this.reviewHighlights.add(reviewHighlightsItem);
    return this;
  }

  /**
   * review highlights contains highlighted review criteria and assessments
   * @return reviewHighlights
   */
  @javax.annotation.Nullable
  public List<ReviewHighlights> getReviewHighlights() {
    return reviewHighlights;
  }

  public void setReviewHighlights(List<ReviewHighlights> reviewHighlights) {
    this.reviewHighlights = reviewHighlights;
  }


  public BusinessDataGoogleExtendedReviewsTaskGetItem source(Source source) {
    this.source = source;
    return this;
  }

  /**
   * Get source
   * @return source
   */
  @javax.annotation.Nullable
  public Source getSource() {
    return source;
  }

  public void setSource(Source source) {
    this.source = source;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the BusinessDataGoogleExtendedReviewsTaskGetItem instance itself
   */
  public BusinessDataGoogleExtendedReviewsTaskGetItem putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BusinessDataGoogleExtendedReviewsTaskGetItem businessDataGoogleExtendedReviewsTaskGetItem = (BusinessDataGoogleExtendedReviewsTaskGetItem) o;
    return Objects.equals(this.type, businessDataGoogleExtendedReviewsTaskGetItem.type) &&
        Objects.equals(this.rankGroup, businessDataGoogleExtendedReviewsTaskGetItem.rankGroup) &&
        Objects.equals(this.rankAbsolute, businessDataGoogleExtendedReviewsTaskGetItem.rankAbsolute) &&
        Objects.equals(this.position, businessDataGoogleExtendedReviewsTaskGetItem.position) &&
        Objects.equals(this.xpath, businessDataGoogleExtendedReviewsTaskGetItem.xpath) &&
        Objects.equals(this.reviewText, businessDataGoogleExtendedReviewsTaskGetItem.reviewText) &&
        Objects.equals(this.originalReviewText, businessDataGoogleExtendedReviewsTaskGetItem.originalReviewText) &&
        Objects.equals(this.timeAgo, businessDataGoogleExtendedReviewsTaskGetItem.timeAgo) &&
        Objects.equals(this.timestamp, businessDataGoogleExtendedReviewsTaskGetItem.timestamp) &&
        Objects.equals(this.rating, businessDataGoogleExtendedReviewsTaskGetItem.rating) &&
        Objects.equals(this.reviewsCount, businessDataGoogleExtendedReviewsTaskGetItem.reviewsCount) &&
        Objects.equals(this.photosCount, businessDataGoogleExtendedReviewsTaskGetItem.photosCount) &&
        Objects.equals(this.localGuide, businessDataGoogleExtendedReviewsTaskGetItem.localGuide) &&
        Objects.equals(this.profileName, businessDataGoogleExtendedReviewsTaskGetItem.profileName) &&
        Objects.equals(this.profileUrl, businessDataGoogleExtendedReviewsTaskGetItem.profileUrl) &&
        Objects.equals(this.reviewUrl, businessDataGoogleExtendedReviewsTaskGetItem.reviewUrl) &&
        Objects.equals(this.profileImageUrl, businessDataGoogleExtendedReviewsTaskGetItem.profileImageUrl) &&
        Objects.equals(this.ownerAnswer, businessDataGoogleExtendedReviewsTaskGetItem.ownerAnswer) &&
        Objects.equals(this.originalOwnerAnswer, businessDataGoogleExtendedReviewsTaskGetItem.originalOwnerAnswer) &&
        Objects.equals(this.ownerTimeAgo, businessDataGoogleExtendedReviewsTaskGetItem.ownerTimeAgo) &&
        Objects.equals(this.ownerTimestamp, businessDataGoogleExtendedReviewsTaskGetItem.ownerTimestamp) &&
        Objects.equals(this.reviewId, businessDataGoogleExtendedReviewsTaskGetItem.reviewId) &&
        Objects.equals(this.images, businessDataGoogleExtendedReviewsTaskGetItem.images) &&
        Objects.equals(this.reviewHighlights, businessDataGoogleExtendedReviewsTaskGetItem.reviewHighlights) &&
        Objects.equals(this.source, businessDataGoogleExtendedReviewsTaskGetItem.source)&&
        Objects.equals(this.additionalProperties, businessDataGoogleExtendedReviewsTaskGetItem.additionalProperties);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(type, rankGroup, rankAbsolute, position, xpath, reviewText, originalReviewText, timeAgo, timestamp, rating, reviewsCount, photosCount, localGuide, profileName, profileUrl, reviewUrl, profileImageUrl, ownerAnswer, originalOwnerAnswer, ownerTimeAgo, ownerTimestamp, reviewId, images, reviewHighlights, source, additionalProperties);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BusinessDataGoogleExtendedReviewsTaskGetItem {\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    rankGroup: ").append(toIndentedString(rankGroup)).append("\n");
    sb.append("    rankAbsolute: ").append(toIndentedString(rankAbsolute)).append("\n");
    sb.append("    position: ").append(toIndentedString(position)).append("\n");
    sb.append("    xpath: ").append(toIndentedString(xpath)).append("\n");
    sb.append("    reviewText: ").append(toIndentedString(reviewText)).append("\n");
    sb.append("    originalReviewText: ").append(toIndentedString(originalReviewText)).append("\n");
    sb.append("    timeAgo: ").append(toIndentedString(timeAgo)).append("\n");
    sb.append("    timestamp: ").append(toIndentedString(timestamp)).append("\n");
    sb.append("    rating: ").append(toIndentedString(rating)).append("\n");
    sb.append("    reviewsCount: ").append(toIndentedString(reviewsCount)).append("\n");
    sb.append("    photosCount: ").append(toIndentedString(photosCount)).append("\n");
    sb.append("    localGuide: ").append(toIndentedString(localGuide)).append("\n");
    sb.append("    profileName: ").append(toIndentedString(profileName)).append("\n");
    sb.append("    profileUrl: ").append(toIndentedString(profileUrl)).append("\n");
    sb.append("    reviewUrl: ").append(toIndentedString(reviewUrl)).append("\n");
    sb.append("    profileImageUrl: ").append(toIndentedString(profileImageUrl)).append("\n");
    sb.append("    ownerAnswer: ").append(toIndentedString(ownerAnswer)).append("\n");
    sb.append("    originalOwnerAnswer: ").append(toIndentedString(originalOwnerAnswer)).append("\n");
    sb.append("    ownerTimeAgo: ").append(toIndentedString(ownerTimeAgo)).append("\n");
    sb.append("    ownerTimestamp: ").append(toIndentedString(ownerTimestamp)).append("\n");
    sb.append("    reviewId: ").append(toIndentedString(reviewId)).append("\n");
    sb.append("    images: ").append(toIndentedString(images)).append("\n");
    sb.append("    reviewHighlights: ").append(toIndentedString(reviewHighlights)).append("\n");
    sb.append("    source: ").append(toIndentedString(source)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("type");
    openapiFields.add("rank_group");
    openapiFields.add("rank_absolute");
    openapiFields.add("position");
    openapiFields.add("xpath");
    openapiFields.add("review_text");
    openapiFields.add("original_review_text");
    openapiFields.add("time_ago");
    openapiFields.add("timestamp");
    openapiFields.add("rating");
    openapiFields.add("reviews_count");
    openapiFields.add("photos_count");
    openapiFields.add("local_guide");
    openapiFields.add("profile_name");
    openapiFields.add("profile_url");
    openapiFields.add("review_url");
    openapiFields.add("profile_image_url");
    openapiFields.add("owner_answer");
    openapiFields.add("original_owner_answer");
    openapiFields.add("owner_time_ago");
    openapiFields.add("owner_timestamp");
    openapiFields.add("review_id");
    openapiFields.add("images");
    openapiFields.add("review_highlights");
    openapiFields.add("source");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to BusinessDataGoogleExtendedReviewsTaskGetItem
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!BusinessDataGoogleExtendedReviewsTaskGetItem.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in BusinessDataGoogleExtendedReviewsTaskGetItem is not found in the empty JSON string", BusinessDataGoogleExtendedReviewsTaskGetItem.openapiRequiredFields.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("type") != null && !jsonObj.get("type").isJsonNull()) && !jsonObj.get("type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("type").toString()));
      }
      if ((jsonObj.get("position") != null && !jsonObj.get("position").isJsonNull()) && !jsonObj.get("position").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `position` to be a primitive type in the JSON string but got `%s`", jsonObj.get("position").toString()));
      }
      if ((jsonObj.get("xpath") != null && !jsonObj.get("xpath").isJsonNull()) && !jsonObj.get("xpath").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `xpath` to be a primitive type in the JSON string but got `%s`", jsonObj.get("xpath").toString()));
      }
      if ((jsonObj.get("review_text") != null && !jsonObj.get("review_text").isJsonNull()) && !jsonObj.get("review_text").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `review_text` to be a primitive type in the JSON string but got `%s`", jsonObj.get("review_text").toString()));
      }
      if ((jsonObj.get("original_review_text") != null && !jsonObj.get("original_review_text").isJsonNull()) && !jsonObj.get("original_review_text").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `original_review_text` to be a primitive type in the JSON string but got `%s`", jsonObj.get("original_review_text").toString()));
      }
      if ((jsonObj.get("time_ago") != null && !jsonObj.get("time_ago").isJsonNull()) && !jsonObj.get("time_ago").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `time_ago` to be a primitive type in the JSON string but got `%s`", jsonObj.get("time_ago").toString()));
      }
      if ((jsonObj.get("timestamp") != null && !jsonObj.get("timestamp").isJsonNull()) && !jsonObj.get("timestamp").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `timestamp` to be a primitive type in the JSON string but got `%s`", jsonObj.get("timestamp").toString()));
      }
      // validate the optional field `rating`
      if (jsonObj.get("rating") != null && !jsonObj.get("rating").isJsonNull()) {
        RatingInfo.validateJsonElement(jsonObj.get("rating"));
      }
      if ((jsonObj.get("profile_name") != null && !jsonObj.get("profile_name").isJsonNull()) && !jsonObj.get("profile_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `profile_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("profile_name").toString()));
      }
      if ((jsonObj.get("profile_url") != null && !jsonObj.get("profile_url").isJsonNull()) && !jsonObj.get("profile_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `profile_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("profile_url").toString()));
      }
      if ((jsonObj.get("review_url") != null && !jsonObj.get("review_url").isJsonNull()) && !jsonObj.get("review_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `review_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("review_url").toString()));
      }
      if ((jsonObj.get("profile_image_url") != null && !jsonObj.get("profile_image_url").isJsonNull()) && !jsonObj.get("profile_image_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `profile_image_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("profile_image_url").toString()));
      }
      if ((jsonObj.get("owner_answer") != null && !jsonObj.get("owner_answer").isJsonNull()) && !jsonObj.get("owner_answer").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `owner_answer` to be a primitive type in the JSON string but got `%s`", jsonObj.get("owner_answer").toString()));
      }
      if ((jsonObj.get("original_owner_answer") != null && !jsonObj.get("original_owner_answer").isJsonNull()) && !jsonObj.get("original_owner_answer").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `original_owner_answer` to be a primitive type in the JSON string but got `%s`", jsonObj.get("original_owner_answer").toString()));
      }
      if ((jsonObj.get("owner_time_ago") != null && !jsonObj.get("owner_time_ago").isJsonNull()) && !jsonObj.get("owner_time_ago").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `owner_time_ago` to be a primitive type in the JSON string but got `%s`", jsonObj.get("owner_time_ago").toString()));
      }
      if ((jsonObj.get("owner_timestamp") != null && !jsonObj.get("owner_timestamp").isJsonNull()) && !jsonObj.get("owner_timestamp").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `owner_timestamp` to be a primitive type in the JSON string but got `%s`", jsonObj.get("owner_timestamp").toString()));
      }
      if ((jsonObj.get("review_id") != null && !jsonObj.get("review_id").isJsonNull()) && !jsonObj.get("review_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `review_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("review_id").toString()));
      }
      if (jsonObj.get("images") != null && !jsonObj.get("images").isJsonNull()) {
        JsonArray jsonArrayimages = jsonObj.getAsJsonArray("images");
        if (jsonArrayimages != null) {
          // ensure the json data is an array
          if (!jsonObj.get("images").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `images` to be an array in the JSON string but got `%s`", jsonObj.get("images").toString()));
          }

          // validate the optional field `images` (array)
          for (int i = 0; i < jsonArrayimages.size(); i++) {
            ImagesElement.validateJsonElement(jsonArrayimages.get(i));
          };
        }
      }
      if (jsonObj.get("review_highlights") != null && !jsonObj.get("review_highlights").isJsonNull()) {
        JsonArray jsonArrayreviewHighlights = jsonObj.getAsJsonArray("review_highlights");
        if (jsonArrayreviewHighlights != null) {
          // ensure the json data is an array
          if (!jsonObj.get("review_highlights").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `review_highlights` to be an array in the JSON string but got `%s`", jsonObj.get("review_highlights").toString()));
          }

          // validate the optional field `review_highlights` (array)
          for (int i = 0; i < jsonArrayreviewHighlights.size(); i++) {
            ReviewHighlights.validateJsonElement(jsonArrayreviewHighlights.get(i));
          };
        }
      }
      // validate the optional field `source`
      if (jsonObj.get("source") != null && !jsonObj.get("source").isJsonNull()) {
        Source.validateJsonElement(jsonObj.get("source"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!BusinessDataGoogleExtendedReviewsTaskGetItem.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'BusinessDataGoogleExtendedReviewsTaskGetItem' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<BusinessDataGoogleExtendedReviewsTaskGetItem> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(BusinessDataGoogleExtendedReviewsTaskGetItem.class));

       return (TypeAdapter<T>) new TypeAdapter<BusinessDataGoogleExtendedReviewsTaskGetItem>() {
           @Override
           public void write(JsonWriter out, BusinessDataGoogleExtendedReviewsTaskGetItem value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additional properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   JsonElement jsonElement = gson.toJsonTree(entry.getValue());
                   if (jsonElement.isJsonArray()) {
                     obj.add(entry.getKey(), jsonElement.getAsJsonArray());
                   } else {
                     obj.add(entry.getKey(), jsonElement.getAsJsonObject());
                   }
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public BusinessDataGoogleExtendedReviewsTaskGetItem read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             JsonObject jsonObj = jsonElement.getAsJsonObject();
             // store additional fields in the deserialized instance
             BusinessDataGoogleExtendedReviewsTaskGetItem instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of BusinessDataGoogleExtendedReviewsTaskGetItem given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of BusinessDataGoogleExtendedReviewsTaskGetItem
   * @throws IOException if the JSON string is invalid with respect to BusinessDataGoogleExtendedReviewsTaskGetItem
   */
  public static BusinessDataGoogleExtendedReviewsTaskGetItem fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, BusinessDataGoogleExtendedReviewsTaskGetItem.class);
  }

  /**
   * Convert an instance of BusinessDataGoogleExtendedReviewsTaskGetItem to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

