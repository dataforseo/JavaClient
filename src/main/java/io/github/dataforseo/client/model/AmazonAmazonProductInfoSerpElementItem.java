/*
 * DataForSEO API documentation
 * DataForSEO API is the starting point on your journey towards building powerful SEO software. With DataForSEO you can get all the data you need to build an efficient application while also saving your time and budget. DataForSEO API is using the REST technology for interchanging data between your application and our service. The data exchange is made through the widely used HTTP protocol, which allows applying our API to almost all programming languages.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.dataforseo.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.github.dataforseo.client.model.AmazonApplicableVouchersItem;
import io.github.dataforseo.client.model.AmazonProductNewerModelInfo;
import io.github.dataforseo.client.model.BaseAmazonSerpElementItem;
import io.github.dataforseo.client.model.BaseProductInformationItem;
import io.github.dataforseo.client.model.ProductCategoryInfo;
import io.github.dataforseo.client.model.RatingElement;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import io.github.dataforseo.client.JSON;

/**
 * AmazonAmazonProductInfoSerpElementItem
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-05-30T15:21:14.476580900+03:00[Europe/Kiev]", comments = "Generator version: 7.8.0")
public class AmazonAmazonProductInfoSerpElementItem extends BaseAmazonSerpElementItem {
  public static final String SERIALIZED_NAME_TITLE = "title";
  @SerializedName(SERIALIZED_NAME_TITLE)
  private String title;

  public static final String SERIALIZED_NAME_DETAILS = "details";
  @SerializedName(SERIALIZED_NAME_DETAILS)
  private String details;

  public static final String SERIALIZED_NAME_IMAGE_URL = "image_url";
  @SerializedName(SERIALIZED_NAME_IMAGE_URL)
  private String imageUrl;

  public static final String SERIALIZED_NAME_AUTHOR = "author";
  @SerializedName(SERIALIZED_NAME_AUTHOR)
  private String author;

  public static final String SERIALIZED_NAME_DATA_ASIN = "data_asin";
  @SerializedName(SERIALIZED_NAME_DATA_ASIN)
  private String dataAsin;

  public static final String SERIALIZED_NAME_PARENT_ASIN = "parent_asin";
  @SerializedName(SERIALIZED_NAME_PARENT_ASIN)
  private String parentAsin;

  public static final String SERIALIZED_NAME_PRODUCT_ASINS = "product_asins";
  @SerializedName(SERIALIZED_NAME_PRODUCT_ASINS)
  private List<String> productAsins;

  public static final String SERIALIZED_NAME_PRICE_FROM = "price_from";
  @SerializedName(SERIALIZED_NAME_PRICE_FROM)
  private Float priceFrom;

  public static final String SERIALIZED_NAME_PRICE_TO = "price_to";
  @SerializedName(SERIALIZED_NAME_PRICE_TO)
  private Float priceTo;

  public static final String SERIALIZED_NAME_CURRENCY = "currency";
  @SerializedName(SERIALIZED_NAME_CURRENCY)
  private String currency;

  public static final String SERIALIZED_NAME_IS_AMAZON_CHOICE = "is_amazon_choice";
  @SerializedName(SERIALIZED_NAME_IS_AMAZON_CHOICE)
  private Boolean isAmazonChoice;

  public static final String SERIALIZED_NAME_RATING = "rating";
  @SerializedName(SERIALIZED_NAME_RATING)
  private RatingElement rating;

  public static final String SERIALIZED_NAME_IS_NEWER_MODEL_AVAILABLE = "is_newer_model_available";
  @SerializedName(SERIALIZED_NAME_IS_NEWER_MODEL_AVAILABLE)
  private Boolean isNewerModelAvailable;

  public static final String SERIALIZED_NAME_APPLICABLE_VOUCHERS = "applicable_vouchers";
  @SerializedName(SERIALIZED_NAME_APPLICABLE_VOUCHERS)
  private List<AmazonApplicableVouchersItem> applicableVouchers;

  public static final String SERIALIZED_NAME_NEWER_MODEL = "newer_model";
  @SerializedName(SERIALIZED_NAME_NEWER_MODEL)
  private AmazonProductNewerModelInfo newerModel;

  public static final String SERIALIZED_NAME_CATEGORIES = "categories";
  @SerializedName(SERIALIZED_NAME_CATEGORIES)
  private List<ProductCategoryInfo> categories;

  public static final String SERIALIZED_NAME_PRODUCT_INFORMATION = "product_information";
  @SerializedName(SERIALIZED_NAME_PRODUCT_INFORMATION)
  private List<BaseProductInformationItem> productInformation;

  public static final String SERIALIZED_NAME_PRODUCT_IMAGES_LIST = "product_images_list";
  @SerializedName(SERIALIZED_NAME_PRODUCT_IMAGES_LIST)
  private List<String> productImagesList;

  public static final String SERIALIZED_NAME_PRODUCT_VIDEOS_LIST = "product_videos_list";
  @SerializedName(SERIALIZED_NAME_PRODUCT_VIDEOS_LIST)
  private List<String> productVideosList;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_IS_AVAILABLE = "is_available";
  @SerializedName(SERIALIZED_NAME_IS_AVAILABLE)
  private Boolean isAvailable;

  public static final String SERIALIZED_NAME_TOP_LOCAL_REVIEWS = "top_local_reviews";
  @SerializedName(SERIALIZED_NAME_TOP_LOCAL_REVIEWS)
  private List<BaseAmazonSerpElementItem> topLocalReviews;

  public static final String SERIALIZED_NAME_TOP_GLOBAL_REVIEWS = "top_global_reviews";
  @SerializedName(SERIALIZED_NAME_TOP_GLOBAL_REVIEWS)
  private List<BaseAmazonSerpElementItem> topGlobalReviews;

  public AmazonAmazonProductInfoSerpElementItem() {
  }

  public AmazonAmazonProductInfoSerpElementItem title(String title) {
    this.title = title;
    return this;
  }

  /**
   * product title
   * @return title
   */
  @javax.annotation.Nullable
  public String getTitle() {
    return title;
  }

  public void setTitle(String title) {
    this.title = title;
  }


  public AmazonAmazonProductInfoSerpElementItem details(String details) {
    this.details = details;
    return this;
  }

  /**
   * product specs and other details
   * @return details
   */
  @javax.annotation.Nullable
  public String getDetails() {
    return details;
  }

  public void setDetails(String details) {
    this.details = details;
  }


  public AmazonAmazonProductInfoSerpElementItem imageUrl(String imageUrl) {
    this.imageUrl = imageUrl;
    return this;
  }

  /**
   * the URL of the product image
   * @return imageUrl
   */
  @javax.annotation.Nullable
  public String getImageUrl() {
    return imageUrl;
  }

  public void setImageUrl(String imageUrl) {
    this.imageUrl = imageUrl;
  }


  public AmazonAmazonProductInfoSerpElementItem author(String author) {
    this.author = author;
    return this;
  }

  /**
   * product brand name
   * @return author
   */
  @javax.annotation.Nullable
  public String getAuthor() {
    return author;
  }

  public void setAuthor(String author) {
    this.author = author;
  }


  public AmazonAmazonProductInfoSerpElementItem dataAsin(String dataAsin) {
    this.dataAsin = dataAsin;
    return this;
  }

  /**
   * ASIN of the product received in a POST array
   * @return dataAsin
   */
  @javax.annotation.Nullable
  public String getDataAsin() {
    return dataAsin;
  }

  public void setDataAsin(String dataAsin) {
    this.dataAsin = dataAsin;
  }


  public AmazonAmazonProductInfoSerpElementItem parentAsin(String parentAsin) {
    this.parentAsin = parentAsin;
    return this;
  }

  /**
   * parent ASIN of the product
   * @return parentAsin
   */
  @javax.annotation.Nullable
  public String getParentAsin() {
    return parentAsin;
  }

  public void setParentAsin(String parentAsin) {
    this.parentAsin = parentAsin;
  }


  public AmazonAmazonProductInfoSerpElementItem productAsins(List<String> productAsins) {
    this.productAsins = productAsins;
    return this;
  }

  public AmazonAmazonProductInfoSerpElementItem addProductAsinsItem(String productAsinsItem) {
    if (this.productAsins == null) {
      this.productAsins = new ArrayList<>();
    }
    this.productAsins.add(productAsinsItem);
    return this;
  }

  /**
   * ASINs of all found product modifications
   * @return productAsins
   */
  @javax.annotation.Nullable
  public List<String> getProductAsins() {
    return productAsins;
  }

  public void setProductAsins(List<String> productAsins) {
    this.productAsins = productAsins;
  }


  public AmazonAmazonProductInfoSerpElementItem priceFrom(Float priceFrom) {
    this.priceFrom = priceFrom;
    return this;
  }

  /**
   * the lower limit of the product price range example: 49.98
   * @return priceFrom
   */
  @javax.annotation.Nullable
  public Float getPriceFrom() {
    return priceFrom;
  }

  public void setPriceFrom(Float priceFrom) {
    this.priceFrom = priceFrom;
  }


  public AmazonAmazonProductInfoSerpElementItem priceTo(Float priceTo) {
    this.priceTo = priceTo;
    return this;
  }

  /**
   * the upper limit of the product price range example: 384.99
   * @return priceTo
   */
  @javax.annotation.Nullable
  public Float getPriceTo() {
    return priceTo;
  }

  public void setPriceTo(Float priceTo) {
    this.priceTo = priceTo;
  }


  public AmazonAmazonProductInfoSerpElementItem currency(String currency) {
    this.currency = currency;
    return this;
  }

  /**
   * currency in the ISO format example: USD
   * @return currency
   */
  @javax.annotation.Nullable
  public String getCurrency() {
    return currency;
  }

  public void setCurrency(String currency) {
    this.currency = currency;
  }


  public AmazonAmazonProductInfoSerpElementItem isAmazonChoice(Boolean isAmazonChoice) {
    this.isAmazonChoice = isAmazonChoice;
    return this;
  }

  /**
   * “Amazon’s choice” label if the value is true, the product is marked with the “Amazon’s choice” label
   * @return isAmazonChoice
   */
  @javax.annotation.Nullable
  public Boolean getIsAmazonChoice() {
    return isAmazonChoice;
  }

  public void setIsAmazonChoice(Boolean isAmazonChoice) {
    this.isAmazonChoice = isAmazonChoice;
  }


  public AmazonAmazonProductInfoSerpElementItem rating(RatingElement rating) {
    this.rating = rating;
    return this;
  }

  /**
   * Get rating
   * @return rating
   */
  @javax.annotation.Nullable
  public RatingElement getRating() {
    return rating;
  }

  public void setRating(RatingElement rating) {
    this.rating = rating;
  }


  public AmazonAmazonProductInfoSerpElementItem isNewerModelAvailable(Boolean isNewerModelAvailable) {
    this.isNewerModelAvailable = isNewerModelAvailable;
    return this;
  }

  /**
   * indicates whether the newer model of the product is available
   * @return isNewerModelAvailable
   */
  @javax.annotation.Nullable
  public Boolean getIsNewerModelAvailable() {
    return isNewerModelAvailable;
  }

  public void setIsNewerModelAvailable(Boolean isNewerModelAvailable) {
    this.isNewerModelAvailable = isNewerModelAvailable;
  }


  public AmazonAmazonProductInfoSerpElementItem applicableVouchers(List<AmazonApplicableVouchersItem> applicableVouchers) {
    this.applicableVouchers = applicableVouchers;
    return this;
  }

  public AmazonAmazonProductInfoSerpElementItem addApplicableVouchersItem(AmazonApplicableVouchersItem applicableVouchersItem) {
    if (this.applicableVouchers == null) {
      this.applicableVouchers = new ArrayList<>();
    }
    this.applicableVouchers.add(applicableVouchersItem);
    return this;
  }

  /**
   * array of objects containing information about applicable vouchers
   * @return applicableVouchers
   */
  @javax.annotation.Nullable
  public List<AmazonApplicableVouchersItem> getApplicableVouchers() {
    return applicableVouchers;
  }

  public void setApplicableVouchers(List<AmazonApplicableVouchersItem> applicableVouchers) {
    this.applicableVouchers = applicableVouchers;
  }


  public AmazonAmazonProductInfoSerpElementItem newerModel(AmazonProductNewerModelInfo newerModel) {
    this.newerModel = newerModel;
    return this;
  }

  /**
   * Get newerModel
   * @return newerModel
   */
  @javax.annotation.Nullable
  public AmazonProductNewerModelInfo getNewerModel() {
    return newerModel;
  }

  public void setNewerModel(AmazonProductNewerModelInfo newerModel) {
    this.newerModel = newerModel;
  }


  public AmazonAmazonProductInfoSerpElementItem categories(List<ProductCategoryInfo> categories) {
    this.categories = categories;
    return this;
  }

  public AmazonAmazonProductInfoSerpElementItem addCategoriesItem(ProductCategoryInfo categoriesItem) {
    if (this.categories == null) {
      this.categories = new ArrayList<>();
    }
    this.categories.add(categoriesItem);
    return this;
  }

  /**
   * contains related product categories
   * @return categories
   */
  @javax.annotation.Nullable
  public List<ProductCategoryInfo> getCategories() {
    return categories;
  }

  public void setCategories(List<ProductCategoryInfo> categories) {
    this.categories = categories;
  }


  public AmazonAmazonProductInfoSerpElementItem productInformation(List<BaseProductInformationItem> productInformation) {
    this.productInformation = productInformation;
    return this;
  }

  public AmazonAmazonProductInfoSerpElementItem addProductInformationItem(BaseProductInformationItem productInformationItem) {
    if (this.productInformation == null) {
      this.productInformation = new ArrayList<>();
    }
    this.productInformation.add(productInformationItem);
    return this;
  }

  /**
   * contains related product information
   * @return productInformation
   */
  @javax.annotation.Nullable
  public List<BaseProductInformationItem> getProductInformation() {
    return productInformation;
  }

  public void setProductInformation(List<BaseProductInformationItem> productInformation) {
    this.productInformation = productInformation;
  }


  public AmazonAmazonProductInfoSerpElementItem productImagesList(List<String> productImagesList) {
    this.productImagesList = productImagesList;
    return this;
  }

  public AmazonAmazonProductInfoSerpElementItem addProductImagesListItem(String productImagesListItem) {
    if (this.productImagesList == null) {
      this.productImagesList = new ArrayList<>();
    }
    this.productImagesList.add(productImagesListItem);
    return this;
  }

  /**
   * contains URLs for all images of the product displayed on the left side of the main image
   * @return productImagesList
   */
  @javax.annotation.Nullable
  public List<String> getProductImagesList() {
    return productImagesList;
  }

  public void setProductImagesList(List<String> productImagesList) {
    this.productImagesList = productImagesList;
  }


  public AmazonAmazonProductInfoSerpElementItem productVideosList(List<String> productVideosList) {
    this.productVideosList = productVideosList;
    return this;
  }

  public AmazonAmazonProductInfoSerpElementItem addProductVideosListItem(String productVideosListItem) {
    if (this.productVideosList == null) {
      this.productVideosList = new ArrayList<>();
    }
    this.productVideosList.add(productVideosListItem);
    return this;
  }

  /**
   * contains URLs for all videos of the product displayed on the right side of the main video
   * @return productVideosList
   */
  @javax.annotation.Nullable
  public List<String> getProductVideosList() {
    return productVideosList;
  }

  public void setProductVideosList(List<String> productVideosList) {
    this.productVideosList = productVideosList;
  }


  public AmazonAmazonProductInfoSerpElementItem description(String description) {
    this.description = description;
    return this;
  }

  /**
   * contains description of the product
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public AmazonAmazonProductInfoSerpElementItem isAvailable(Boolean isAvailable) {
    this.isAvailable = isAvailable;
    return this;
  }

  /**
   * indicates whether the product is available for ordering if the value is true, the product can be ordered
   * @return isAvailable
   */
  @javax.annotation.Nullable
  public Boolean getIsAvailable() {
    return isAvailable;
  }

  public void setIsAvailable(Boolean isAvailable) {
    this.isAvailable = isAvailable;
  }


  public AmazonAmazonProductInfoSerpElementItem topLocalReviews(List<BaseAmazonSerpElementItem> topLocalReviews) {
    this.topLocalReviews = topLocalReviews;
    return this;
  }

  public AmazonAmazonProductInfoSerpElementItem addTopLocalReviewsItem(BaseAmazonSerpElementItem topLocalReviewsItem) {
    if (this.topLocalReviews == null) {
      this.topLocalReviews = new ArrayList<>();
    }
    this.topLocalReviews.add(topLocalReviewsItem);
    return this;
  }

  /**
   * array of objects with top reviews from target location to obtain additional local reviews, you can specify the load_more_local_reviews parameter in Task POST
   * @return topLocalReviews
   */
  @javax.annotation.Nullable
  public List<BaseAmazonSerpElementItem> getTopLocalReviews() {
    return topLocalReviews;
  }

  public void setTopLocalReviews(List<BaseAmazonSerpElementItem> topLocalReviews) {
    this.topLocalReviews = topLocalReviews;
  }


  public AmazonAmazonProductInfoSerpElementItem topGlobalReviews(List<BaseAmazonSerpElementItem> topGlobalReviews) {
    this.topGlobalReviews = topGlobalReviews;
    return this;
  }

  public AmazonAmazonProductInfoSerpElementItem addTopGlobalReviewsItem(BaseAmazonSerpElementItem topGlobalReviewsItem) {
    if (this.topGlobalReviews == null) {
      this.topGlobalReviews = new ArrayList<>();
    }
    this.topGlobalReviews.add(topGlobalReviewsItem);
    return this;
  }

  /**
   * array of objects with top reviews from around the world
   * @return topGlobalReviews
   */
  @javax.annotation.Nullable
  public List<BaseAmazonSerpElementItem> getTopGlobalReviews() {
    return topGlobalReviews;
  }

  public void setTopGlobalReviews(List<BaseAmazonSerpElementItem> topGlobalReviews) {
    this.topGlobalReviews = topGlobalReviews;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the AmazonAmazonProductInfoSerpElementItem instance itself
   */
  public AmazonAmazonProductInfoSerpElementItem putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AmazonAmazonProductInfoSerpElementItem amazonAmazonProductInfoSerpElementItem = (AmazonAmazonProductInfoSerpElementItem) o;
    return Objects.equals(this.title, amazonAmazonProductInfoSerpElementItem.title) &&
        Objects.equals(this.details, amazonAmazonProductInfoSerpElementItem.details) &&
        Objects.equals(this.imageUrl, amazonAmazonProductInfoSerpElementItem.imageUrl) &&
        Objects.equals(this.author, amazonAmazonProductInfoSerpElementItem.author) &&
        Objects.equals(this.dataAsin, amazonAmazonProductInfoSerpElementItem.dataAsin) &&
        Objects.equals(this.parentAsin, amazonAmazonProductInfoSerpElementItem.parentAsin) &&
        Objects.equals(this.productAsins, amazonAmazonProductInfoSerpElementItem.productAsins) &&
        Objects.equals(this.priceFrom, amazonAmazonProductInfoSerpElementItem.priceFrom) &&
        Objects.equals(this.priceTo, amazonAmazonProductInfoSerpElementItem.priceTo) &&
        Objects.equals(this.currency, amazonAmazonProductInfoSerpElementItem.currency) &&
        Objects.equals(this.isAmazonChoice, amazonAmazonProductInfoSerpElementItem.isAmazonChoice) &&
        Objects.equals(this.rating, amazonAmazonProductInfoSerpElementItem.rating) &&
        Objects.equals(this.isNewerModelAvailable, amazonAmazonProductInfoSerpElementItem.isNewerModelAvailable) &&
        Objects.equals(this.applicableVouchers, amazonAmazonProductInfoSerpElementItem.applicableVouchers) &&
        Objects.equals(this.newerModel, amazonAmazonProductInfoSerpElementItem.newerModel) &&
        Objects.equals(this.categories, amazonAmazonProductInfoSerpElementItem.categories) &&
        Objects.equals(this.productInformation, amazonAmazonProductInfoSerpElementItem.productInformation) &&
        Objects.equals(this.productImagesList, amazonAmazonProductInfoSerpElementItem.productImagesList) &&
        Objects.equals(this.productVideosList, amazonAmazonProductInfoSerpElementItem.productVideosList) &&
        Objects.equals(this.description, amazonAmazonProductInfoSerpElementItem.description) &&
        Objects.equals(this.isAvailable, amazonAmazonProductInfoSerpElementItem.isAvailable) &&
        Objects.equals(this.topLocalReviews, amazonAmazonProductInfoSerpElementItem.topLocalReviews) &&
        Objects.equals(this.topGlobalReviews, amazonAmazonProductInfoSerpElementItem.topGlobalReviews)&&
        Objects.equals(this.additionalProperties, amazonAmazonProductInfoSerpElementItem.additionalProperties) &&
        super.equals(o);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(title, details, imageUrl, author, dataAsin, parentAsin, productAsins, priceFrom, priceTo, currency, isAmazonChoice, rating, isNewerModelAvailable, applicableVouchers, newerModel, categories, productInformation, productImagesList, productVideosList, description, isAvailable, topLocalReviews, topGlobalReviews, super.hashCode(), additionalProperties);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AmazonAmazonProductInfoSerpElementItem {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    details: ").append(toIndentedString(details)).append("\n");
    sb.append("    imageUrl: ").append(toIndentedString(imageUrl)).append("\n");
    sb.append("    author: ").append(toIndentedString(author)).append("\n");
    sb.append("    dataAsin: ").append(toIndentedString(dataAsin)).append("\n");
    sb.append("    parentAsin: ").append(toIndentedString(parentAsin)).append("\n");
    sb.append("    productAsins: ").append(toIndentedString(productAsins)).append("\n");
    sb.append("    priceFrom: ").append(toIndentedString(priceFrom)).append("\n");
    sb.append("    priceTo: ").append(toIndentedString(priceTo)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    isAmazonChoice: ").append(toIndentedString(isAmazonChoice)).append("\n");
    sb.append("    rating: ").append(toIndentedString(rating)).append("\n");
    sb.append("    isNewerModelAvailable: ").append(toIndentedString(isNewerModelAvailable)).append("\n");
    sb.append("    applicableVouchers: ").append(toIndentedString(applicableVouchers)).append("\n");
    sb.append("    newerModel: ").append(toIndentedString(newerModel)).append("\n");
    sb.append("    categories: ").append(toIndentedString(categories)).append("\n");
    sb.append("    productInformation: ").append(toIndentedString(productInformation)).append("\n");
    sb.append("    productImagesList: ").append(toIndentedString(productImagesList)).append("\n");
    sb.append("    productVideosList: ").append(toIndentedString(productVideosList)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    isAvailable: ").append(toIndentedString(isAvailable)).append("\n");
    sb.append("    topLocalReviews: ").append(toIndentedString(topLocalReviews)).append("\n");
    sb.append("    topGlobalReviews: ").append(toIndentedString(topGlobalReviews)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("type");
    openapiFields.add("rank_group");
    openapiFields.add("rank_absolute");
    openapiFields.add("position");
    openapiFields.add("xpath");
    openapiFields.add("title");
    openapiFields.add("details");
    openapiFields.add("image_url");
    openapiFields.add("author");
    openapiFields.add("data_asin");
    openapiFields.add("parent_asin");
    openapiFields.add("product_asins");
    openapiFields.add("price_from");
    openapiFields.add("price_to");
    openapiFields.add("currency");
    openapiFields.add("is_amazon_choice");
    openapiFields.add("rating");
    openapiFields.add("is_newer_model_available");
    openapiFields.add("applicable_vouchers");
    openapiFields.add("newer_model");
    openapiFields.add("categories");
    openapiFields.add("product_information");
    openapiFields.add("product_images_list");
    openapiFields.add("product_videos_list");
    openapiFields.add("description");
    openapiFields.add("is_available");
    openapiFields.add("top_local_reviews");
    openapiFields.add("top_global_reviews");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to AmazonAmazonProductInfoSerpElementItem
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!AmazonAmazonProductInfoSerpElementItem.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AmazonAmazonProductInfoSerpElementItem is not found in the empty JSON string", AmazonAmazonProductInfoSerpElementItem.openapiRequiredFields.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("title") != null && !jsonObj.get("title").isJsonNull()) && !jsonObj.get("title").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `title` to be a primitive type in the JSON string but got `%s`", jsonObj.get("title").toString()));
      }
      if ((jsonObj.get("details") != null && !jsonObj.get("details").isJsonNull()) && !jsonObj.get("details").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `details` to be a primitive type in the JSON string but got `%s`", jsonObj.get("details").toString()));
      }
      if ((jsonObj.get("image_url") != null && !jsonObj.get("image_url").isJsonNull()) && !jsonObj.get("image_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `image_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("image_url").toString()));
      }
      if ((jsonObj.get("author") != null && !jsonObj.get("author").isJsonNull()) && !jsonObj.get("author").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `author` to be a primitive type in the JSON string but got `%s`", jsonObj.get("author").toString()));
      }
      if ((jsonObj.get("data_asin") != null && !jsonObj.get("data_asin").isJsonNull()) && !jsonObj.get("data_asin").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `data_asin` to be a primitive type in the JSON string but got `%s`", jsonObj.get("data_asin").toString()));
      }
      if ((jsonObj.get("parent_asin") != null && !jsonObj.get("parent_asin").isJsonNull()) && !jsonObj.get("parent_asin").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `parent_asin` to be a primitive type in the JSON string but got `%s`", jsonObj.get("parent_asin").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("product_asins") != null && !jsonObj.get("product_asins").isJsonNull() && !jsonObj.get("product_asins").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `product_asins` to be an array in the JSON string but got `%s`", jsonObj.get("product_asins").toString()));
      }
      if ((jsonObj.get("currency") != null && !jsonObj.get("currency").isJsonNull()) && !jsonObj.get("currency").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `currency` to be a primitive type in the JSON string but got `%s`", jsonObj.get("currency").toString()));
      }
      // validate the optional field `rating`
      if (jsonObj.get("rating") != null && !jsonObj.get("rating").isJsonNull()) {
        RatingElement.validateJsonElement(jsonObj.get("rating"));
      }
      if (jsonObj.get("applicable_vouchers") != null && !jsonObj.get("applicable_vouchers").isJsonNull()) {
        JsonArray jsonArrayapplicableVouchers = jsonObj.getAsJsonArray("applicable_vouchers");
        if (jsonArrayapplicableVouchers != null) {
          // ensure the json data is an array
          if (!jsonObj.get("applicable_vouchers").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `applicable_vouchers` to be an array in the JSON string but got `%s`", jsonObj.get("applicable_vouchers").toString()));
          }

          // validate the optional field `applicable_vouchers` (array)
          for (int i = 0; i < jsonArrayapplicableVouchers.size(); i++) {
            AmazonApplicableVouchersItem.validateJsonElement(jsonArrayapplicableVouchers.get(i));
          };
        }
      }
      // validate the optional field `newer_model`
      if (jsonObj.get("newer_model") != null && !jsonObj.get("newer_model").isJsonNull()) {
        AmazonProductNewerModelInfo.validateJsonElement(jsonObj.get("newer_model"));
      }
      if (jsonObj.get("categories") != null && !jsonObj.get("categories").isJsonNull()) {
        JsonArray jsonArraycategories = jsonObj.getAsJsonArray("categories");
        if (jsonArraycategories != null) {
          // ensure the json data is an array
          if (!jsonObj.get("categories").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `categories` to be an array in the JSON string but got `%s`", jsonObj.get("categories").toString()));
          }

          // validate the optional field `categories` (array)
          for (int i = 0; i < jsonArraycategories.size(); i++) {
            ProductCategoryInfo.validateJsonElement(jsonArraycategories.get(i));
          };
        }
      }
      if (jsonObj.get("product_information") != null && !jsonObj.get("product_information").isJsonNull()) {
        JsonArray jsonArrayproductInformation = jsonObj.getAsJsonArray("product_information");
        if (jsonArrayproductInformation != null) {
          // ensure the json data is an array
          if (!jsonObj.get("product_information").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `product_information` to be an array in the JSON string but got `%s`", jsonObj.get("product_information").toString()));
          }

          // validate the optional field `product_information` (array)
          for (int i = 0; i < jsonArrayproductInformation.size(); i++) {
            BaseProductInformationItem.validateJsonElement(jsonArrayproductInformation.get(i));
          };
        }
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("product_images_list") != null && !jsonObj.get("product_images_list").isJsonNull() && !jsonObj.get("product_images_list").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `product_images_list` to be an array in the JSON string but got `%s`", jsonObj.get("product_images_list").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("product_videos_list") != null && !jsonObj.get("product_videos_list").isJsonNull() && !jsonObj.get("product_videos_list").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `product_videos_list` to be an array in the JSON string but got `%s`", jsonObj.get("product_videos_list").toString()));
      }
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      if (jsonObj.get("top_local_reviews") != null && !jsonObj.get("top_local_reviews").isJsonNull()) {
        JsonArray jsonArraytopLocalReviews = jsonObj.getAsJsonArray("top_local_reviews");
        if (jsonArraytopLocalReviews != null) {
          // ensure the json data is an array
          if (!jsonObj.get("top_local_reviews").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `top_local_reviews` to be an array in the JSON string but got `%s`", jsonObj.get("top_local_reviews").toString()));
          }

          // validate the optional field `top_local_reviews` (array)
          for (int i = 0; i < jsonArraytopLocalReviews.size(); i++) {
            BaseAmazonSerpElementItem.validateJsonElement(jsonArraytopLocalReviews.get(i));
          };
        }
      }
      if (jsonObj.get("top_global_reviews") != null && !jsonObj.get("top_global_reviews").isJsonNull()) {
        JsonArray jsonArraytopGlobalReviews = jsonObj.getAsJsonArray("top_global_reviews");
        if (jsonArraytopGlobalReviews != null) {
          // ensure the json data is an array
          if (!jsonObj.get("top_global_reviews").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `top_global_reviews` to be an array in the JSON string but got `%s`", jsonObj.get("top_global_reviews").toString()));
          }

          // validate the optional field `top_global_reviews` (array)
          for (int i = 0; i < jsonArraytopGlobalReviews.size(); i++) {
            BaseAmazonSerpElementItem.validateJsonElement(jsonArraytopGlobalReviews.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AmazonAmazonProductInfoSerpElementItem.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AmazonAmazonProductInfoSerpElementItem' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AmazonAmazonProductInfoSerpElementItem> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AmazonAmazonProductInfoSerpElementItem.class));

       return (TypeAdapter<T>) new TypeAdapter<AmazonAmazonProductInfoSerpElementItem>() {
           @Override
           public void write(JsonWriter out, AmazonAmazonProductInfoSerpElementItem value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additional properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   JsonElement jsonElement = gson.toJsonTree(entry.getValue());
                   if (jsonElement.isJsonArray()) {
                     obj.add(entry.getKey(), jsonElement.getAsJsonArray());
                   } else {
                     obj.add(entry.getKey(), jsonElement.getAsJsonObject());
                   }
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public AmazonAmazonProductInfoSerpElementItem read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             JsonObject jsonObj = jsonElement.getAsJsonObject();
             // store additional fields in the deserialized instance
             AmazonAmazonProductInfoSerpElementItem instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of AmazonAmazonProductInfoSerpElementItem given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of AmazonAmazonProductInfoSerpElementItem
   * @throws IOException if the JSON string is invalid with respect to AmazonAmazonProductInfoSerpElementItem
   */
  public static AmazonAmazonProductInfoSerpElementItem fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AmazonAmazonProductInfoSerpElementItem.class);
  }

  /**
   * Convert an instance of AmazonAmazonProductInfoSerpElementItem to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

