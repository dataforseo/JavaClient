/*
 * DataForSEO API documentation
 * DataForSEO API is the starting point on your journey towards building powerful SEO software. With DataForSEO you can get all the data you need to build an efficient application while also saving your time and budget. DataForSEO API is using the REST technology for interchanging data between your application and our service. The data exchange is made through the widely used HTTP protocol, which allows applying our API to almost all programming languages.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.dataforseo.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.github.dataforseo.client.model.EstCInfo;
import io.github.dataforseo.client.model.EstInfo;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import io.github.dataforseo.client.JSON;

/**
 * KeywordsDataBingAudienceEstimationLiveResultInfo
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-03-10T21:39:12.196275300+02:00[Europe/Kiev]", comments = "Generator version: 7.8.0")
public class KeywordsDataBingAudienceEstimationLiveResultInfo {
  public static final String SERIALIZED_NAME_EST_IMPRESSIONS = "est_impressions";
  @SerializedName(SERIALIZED_NAME_EST_IMPRESSIONS)
  private EstInfo estImpressions;

  public static final String SERIALIZED_NAME_EST_AUDIENCE_SIZE = "est_audience_size";
  @SerializedName(SERIALIZED_NAME_EST_AUDIENCE_SIZE)
  private EstInfo estAudienceSize;

  public static final String SERIALIZED_NAME_EST_CLICKS = "est_clicks";
  @SerializedName(SERIALIZED_NAME_EST_CLICKS)
  private EstInfo estClicks;

  public static final String SERIALIZED_NAME_EST_SPEND = "est_spend";
  @SerializedName(SERIALIZED_NAME_EST_SPEND)
  private EstInfo estSpend;

  public static final String SERIALIZED_NAME_EST_COST_PER_EVENT = "est_cost_per_event";
  @SerializedName(SERIALIZED_NAME_EST_COST_PER_EVENT)
  private EstCInfo estCostPerEvent;

  public static final String SERIALIZED_NAME_EST_CTR = "est_ctr";
  @SerializedName(SERIALIZED_NAME_EST_CTR)
  private EstCInfo estCtr;

  public static final String SERIALIZED_NAME_SUGGESTED_BID = "suggested_bid";
  @SerializedName(SERIALIZED_NAME_SUGGESTED_BID)
  private Float suggestedBid;

  public static final String SERIALIZED_NAME_SUGGESTED_BUDGET = "suggested_budget";
  @SerializedName(SERIALIZED_NAME_SUGGESTED_BUDGET)
  private Double suggestedBudget;

  public static final String SERIALIZED_NAME_EVENTS_LOST_TO_BID = "events_lost_to_bid";
  @SerializedName(SERIALIZED_NAME_EVENTS_LOST_TO_BID)
  private Long eventsLostToBid;

  public static final String SERIALIZED_NAME_EVENTS_LOST_TO_BUDGET = "events_lost_to_budget";
  @SerializedName(SERIALIZED_NAME_EVENTS_LOST_TO_BUDGET)
  private Integer eventsLostToBudget;

  public static final String SERIALIZED_NAME_EST_REACH_AUDIENCE_SIZE = "est_reach_audience_size";
  @SerializedName(SERIALIZED_NAME_EST_REACH_AUDIENCE_SIZE)
  private Long estReachAudienceSize;

  public static final String SERIALIZED_NAME_EST_REACH_IMPRESSIONS = "est_reach_impressions";
  @SerializedName(SERIALIZED_NAME_EST_REACH_IMPRESSIONS)
  private Long estReachImpressions;

  public static final String SERIALIZED_NAME_CURRENCY = "currency";
  @SerializedName(SERIALIZED_NAME_CURRENCY)
  private String currency;

  public KeywordsDataBingAudienceEstimationLiveResultInfo() {
  }

  public KeywordsDataBingAudienceEstimationLiveResultInfo estImpressions(EstInfo estImpressions) {
    this.estImpressions = estImpressions;
    return this;
  }

  /**
   * Get estImpressions
   * @return estImpressions
   */
  @javax.annotation.Nullable
  public EstInfo getEstImpressions() {
    return estImpressions;
  }

  public void setEstImpressions(EstInfo estImpressions) {
    this.estImpressions = estImpressions;
  }


  public KeywordsDataBingAudienceEstimationLiveResultInfo estAudienceSize(EstInfo estAudienceSize) {
    this.estAudienceSize = estAudienceSize;
    return this;
  }

  /**
   * Get estAudienceSize
   * @return estAudienceSize
   */
  @javax.annotation.Nullable
  public EstInfo getEstAudienceSize() {
    return estAudienceSize;
  }

  public void setEstAudienceSize(EstInfo estAudienceSize) {
    this.estAudienceSize = estAudienceSize;
  }


  public KeywordsDataBingAudienceEstimationLiveResultInfo estClicks(EstInfo estClicks) {
    this.estClicks = estClicks;
    return this;
  }

  /**
   * Get estClicks
   * @return estClicks
   */
  @javax.annotation.Nullable
  public EstInfo getEstClicks() {
    return estClicks;
  }

  public void setEstClicks(EstInfo estClicks) {
    this.estClicks = estClicks;
  }


  public KeywordsDataBingAudienceEstimationLiveResultInfo estSpend(EstInfo estSpend) {
    this.estSpend = estSpend;
    return this;
  }

  /**
   * Get estSpend
   * @return estSpend
   */
  @javax.annotation.Nullable
  public EstInfo getEstSpend() {
    return estSpend;
  }

  public void setEstSpend(EstInfo estSpend) {
    this.estSpend = estSpend;
  }


  public KeywordsDataBingAudienceEstimationLiveResultInfo estCostPerEvent(EstCInfo estCostPerEvent) {
    this.estCostPerEvent = estCostPerEvent;
    return this;
  }

  /**
   * Get estCostPerEvent
   * @return estCostPerEvent
   */
  @javax.annotation.Nullable
  public EstCInfo getEstCostPerEvent() {
    return estCostPerEvent;
  }

  public void setEstCostPerEvent(EstCInfo estCostPerEvent) {
    this.estCostPerEvent = estCostPerEvent;
  }


  public KeywordsDataBingAudienceEstimationLiveResultInfo estCtr(EstCInfo estCtr) {
    this.estCtr = estCtr;
    return this;
  }

  /**
   * Get estCtr
   * @return estCtr
   */
  @javax.annotation.Nullable
  public EstCInfo getEstCtr() {
    return estCtr;
  }

  public void setEstCtr(EstCInfo estCtr) {
    this.estCtr = estCtr;
  }


  public KeywordsDataBingAudienceEstimationLiveResultInfo suggestedBid(Float suggestedBid) {
    this.suggestedBid = suggestedBid;
    return this;
  }

  /**
   * suggested bid value under the current targeting
   * @return suggestedBid
   */
  @javax.annotation.Nullable
  public Float getSuggestedBid() {
    return suggestedBid;
  }

  public void setSuggestedBid(Float suggestedBid) {
    this.suggestedBid = suggestedBid;
  }


  public KeywordsDataBingAudienceEstimationLiveResultInfo suggestedBudget(Double suggestedBudget) {
    this.suggestedBudget = suggestedBudget;
    return this;
  }

  /**
   * suggested daily budget value under the current targeting and bid
   * @return suggestedBudget
   */
  @javax.annotation.Nullable
  public Double getSuggestedBudget() {
    return suggestedBudget;
  }

  public void setSuggestedBudget(Double suggestedBudget) {
    this.suggestedBudget = suggestedBudget;
  }


  public KeywordsDataBingAudienceEstimationLiveResultInfo eventsLostToBid(Long eventsLostToBid) {
    this.eventsLostToBid = eventsLostToBid;
    return this;
  }

  /**
   * indicates event lost count due to insufficient input bid
   * @return eventsLostToBid
   */
  @javax.annotation.Nullable
  public Long getEventsLostToBid() {
    return eventsLostToBid;
  }

  public void setEventsLostToBid(Long eventsLostToBid) {
    this.eventsLostToBid = eventsLostToBid;
  }


  public KeywordsDataBingAudienceEstimationLiveResultInfo eventsLostToBudget(Integer eventsLostToBudget) {
    this.eventsLostToBudget = eventsLostToBudget;
    return this;
  }

  /**
   * indicates the event lost count due to insufficient input budget
   * @return eventsLostToBudget
   */
  @javax.annotation.Nullable
  public Integer getEventsLostToBudget() {
    return eventsLostToBudget;
  }

  public void setEventsLostToBudget(Integer eventsLostToBudget) {
    this.eventsLostToBudget = eventsLostToBudget;
  }


  public KeywordsDataBingAudienceEstimationLiveResultInfo estReachAudienceSize(Long estReachAudienceSize) {
    this.estReachAudienceSize = estReachAudienceSize;
    return this;
  }

  /**
   * monthly estimated user count
   * @return estReachAudienceSize
   */
  @javax.annotation.Nullable
  public Long getEstReachAudienceSize() {
    return estReachAudienceSize;
  }

  public void setEstReachAudienceSize(Long estReachAudienceSize) {
    this.estReachAudienceSize = estReachAudienceSize;
  }


  public KeywordsDataBingAudienceEstimationLiveResultInfo estReachImpressions(Long estReachImpressions) {
    this.estReachImpressions = estReachImpressions;
    return this;
  }

  /**
   * monthly estimated impressions
   * @return estReachImpressions
   */
  @javax.annotation.Nullable
  public Long getEstReachImpressions() {
    return estReachImpressions;
  }

  public void setEstReachImpressions(Long estReachImpressions) {
    this.estReachImpressions = estReachImpressions;
  }


  public KeywordsDataBingAudienceEstimationLiveResultInfo currency(String currency) {
    this.currency = currency;
    return this;
  }

  /**
   * currency name example: USDollar
   * @return currency
   */
  @javax.annotation.Nullable
  public String getCurrency() {
    return currency;
  }

  public void setCurrency(String currency) {
    this.currency = currency;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the KeywordsDataBingAudienceEstimationLiveResultInfo instance itself
   */
  public KeywordsDataBingAudienceEstimationLiveResultInfo putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    KeywordsDataBingAudienceEstimationLiveResultInfo keywordsDataBingAudienceEstimationLiveResultInfo = (KeywordsDataBingAudienceEstimationLiveResultInfo) o;
    return Objects.equals(this.estImpressions, keywordsDataBingAudienceEstimationLiveResultInfo.estImpressions) &&
        Objects.equals(this.estAudienceSize, keywordsDataBingAudienceEstimationLiveResultInfo.estAudienceSize) &&
        Objects.equals(this.estClicks, keywordsDataBingAudienceEstimationLiveResultInfo.estClicks) &&
        Objects.equals(this.estSpend, keywordsDataBingAudienceEstimationLiveResultInfo.estSpend) &&
        Objects.equals(this.estCostPerEvent, keywordsDataBingAudienceEstimationLiveResultInfo.estCostPerEvent) &&
        Objects.equals(this.estCtr, keywordsDataBingAudienceEstimationLiveResultInfo.estCtr) &&
        Objects.equals(this.suggestedBid, keywordsDataBingAudienceEstimationLiveResultInfo.suggestedBid) &&
        Objects.equals(this.suggestedBudget, keywordsDataBingAudienceEstimationLiveResultInfo.suggestedBudget) &&
        Objects.equals(this.eventsLostToBid, keywordsDataBingAudienceEstimationLiveResultInfo.eventsLostToBid) &&
        Objects.equals(this.eventsLostToBudget, keywordsDataBingAudienceEstimationLiveResultInfo.eventsLostToBudget) &&
        Objects.equals(this.estReachAudienceSize, keywordsDataBingAudienceEstimationLiveResultInfo.estReachAudienceSize) &&
        Objects.equals(this.estReachImpressions, keywordsDataBingAudienceEstimationLiveResultInfo.estReachImpressions) &&
        Objects.equals(this.currency, keywordsDataBingAudienceEstimationLiveResultInfo.currency)&&
        Objects.equals(this.additionalProperties, keywordsDataBingAudienceEstimationLiveResultInfo.additionalProperties);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(estImpressions, estAudienceSize, estClicks, estSpend, estCostPerEvent, estCtr, suggestedBid, suggestedBudget, eventsLostToBid, eventsLostToBudget, estReachAudienceSize, estReachImpressions, currency, additionalProperties);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class KeywordsDataBingAudienceEstimationLiveResultInfo {\n");
    sb.append("    estImpressions: ").append(toIndentedString(estImpressions)).append("\n");
    sb.append("    estAudienceSize: ").append(toIndentedString(estAudienceSize)).append("\n");
    sb.append("    estClicks: ").append(toIndentedString(estClicks)).append("\n");
    sb.append("    estSpend: ").append(toIndentedString(estSpend)).append("\n");
    sb.append("    estCostPerEvent: ").append(toIndentedString(estCostPerEvent)).append("\n");
    sb.append("    estCtr: ").append(toIndentedString(estCtr)).append("\n");
    sb.append("    suggestedBid: ").append(toIndentedString(suggestedBid)).append("\n");
    sb.append("    suggestedBudget: ").append(toIndentedString(suggestedBudget)).append("\n");
    sb.append("    eventsLostToBid: ").append(toIndentedString(eventsLostToBid)).append("\n");
    sb.append("    eventsLostToBudget: ").append(toIndentedString(eventsLostToBudget)).append("\n");
    sb.append("    estReachAudienceSize: ").append(toIndentedString(estReachAudienceSize)).append("\n");
    sb.append("    estReachImpressions: ").append(toIndentedString(estReachImpressions)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("est_impressions");
    openapiFields.add("est_audience_size");
    openapiFields.add("est_clicks");
    openapiFields.add("est_spend");
    openapiFields.add("est_cost_per_event");
    openapiFields.add("est_ctr");
    openapiFields.add("suggested_bid");
    openapiFields.add("suggested_budget");
    openapiFields.add("events_lost_to_bid");
    openapiFields.add("events_lost_to_budget");
    openapiFields.add("est_reach_audience_size");
    openapiFields.add("est_reach_impressions");
    openapiFields.add("currency");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to KeywordsDataBingAudienceEstimationLiveResultInfo
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!KeywordsDataBingAudienceEstimationLiveResultInfo.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in KeywordsDataBingAudienceEstimationLiveResultInfo is not found in the empty JSON string", KeywordsDataBingAudienceEstimationLiveResultInfo.openapiRequiredFields.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `est_impressions`
      if (jsonObj.get("est_impressions") != null && !jsonObj.get("est_impressions").isJsonNull()) {
        EstInfo.validateJsonElement(jsonObj.get("est_impressions"));
      }
      // validate the optional field `est_audience_size`
      if (jsonObj.get("est_audience_size") != null && !jsonObj.get("est_audience_size").isJsonNull()) {
        EstInfo.validateJsonElement(jsonObj.get("est_audience_size"));
      }
      // validate the optional field `est_clicks`
      if (jsonObj.get("est_clicks") != null && !jsonObj.get("est_clicks").isJsonNull()) {
        EstInfo.validateJsonElement(jsonObj.get("est_clicks"));
      }
      // validate the optional field `est_spend`
      if (jsonObj.get("est_spend") != null && !jsonObj.get("est_spend").isJsonNull()) {
        EstInfo.validateJsonElement(jsonObj.get("est_spend"));
      }
      // validate the optional field `est_cost_per_event`
      if (jsonObj.get("est_cost_per_event") != null && !jsonObj.get("est_cost_per_event").isJsonNull()) {
        EstCInfo.validateJsonElement(jsonObj.get("est_cost_per_event"));
      }
      // validate the optional field `est_ctr`
      if (jsonObj.get("est_ctr") != null && !jsonObj.get("est_ctr").isJsonNull()) {
        EstCInfo.validateJsonElement(jsonObj.get("est_ctr"));
      }
      if ((jsonObj.get("currency") != null && !jsonObj.get("currency").isJsonNull()) && !jsonObj.get("currency").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `currency` to be a primitive type in the JSON string but got `%s`", jsonObj.get("currency").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!KeywordsDataBingAudienceEstimationLiveResultInfo.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'KeywordsDataBingAudienceEstimationLiveResultInfo' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<KeywordsDataBingAudienceEstimationLiveResultInfo> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(KeywordsDataBingAudienceEstimationLiveResultInfo.class));

       return (TypeAdapter<T>) new TypeAdapter<KeywordsDataBingAudienceEstimationLiveResultInfo>() {
           @Override
           public void write(JsonWriter out, KeywordsDataBingAudienceEstimationLiveResultInfo value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additional properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   JsonElement jsonElement = gson.toJsonTree(entry.getValue());
                   if (jsonElement.isJsonArray()) {
                     obj.add(entry.getKey(), jsonElement.getAsJsonArray());
                   } else {
                     obj.add(entry.getKey(), jsonElement.getAsJsonObject());
                   }
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public KeywordsDataBingAudienceEstimationLiveResultInfo read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             JsonObject jsonObj = jsonElement.getAsJsonObject();
             // store additional fields in the deserialized instance
             KeywordsDataBingAudienceEstimationLiveResultInfo instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of KeywordsDataBingAudienceEstimationLiveResultInfo given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of KeywordsDataBingAudienceEstimationLiveResultInfo
   * @throws IOException if the JSON string is invalid with respect to KeywordsDataBingAudienceEstimationLiveResultInfo
   */
  public static KeywordsDataBingAudienceEstimationLiveResultInfo fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, KeywordsDataBingAudienceEstimationLiveResultInfo.class);
  }

  /**
   * Convert an instance of KeywordsDataBingAudienceEstimationLiveResultInfo to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

