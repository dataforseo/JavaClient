/*
 * DataForSEO API documentation
 * DataForSEO API is the starting point on your journey towards building powerful SEO software. With DataForSEO you can get all the data you need to build an efficient application while also saving your time and budget. DataForSEO API is using the REST technology for interchanging data between your application and our service. The data exchange is made through the widely used HTTP protocol, which allows applying our API to almost all programming languages.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.dataforseo.client.api;

import io.github.dataforseo.client.ApiCallback;
import io.github.dataforseo.client.ApiClient;
import io.github.dataforseo.client.ApiException;
import io.github.dataforseo.client.ApiResponse;
import io.github.dataforseo.client.Configuration;
import io.github.dataforseo.client.Pair;
import io.github.dataforseo.client.ProgressRequestBody;
import io.github.dataforseo.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import io.github.dataforseo.client.model.DataforseoLabsAmazonBulkSearchVolumeLiveRequestInfo;
import io.github.dataforseo.client.model.DataforseoLabsAmazonBulkSearchVolumeLiveResponseInfo;
import io.github.dataforseo.client.model.DataforseoLabsAmazonProductCompetitorsLiveRequestInfo;
import io.github.dataforseo.client.model.DataforseoLabsAmazonProductCompetitorsLiveResponseInfo;
import io.github.dataforseo.client.model.DataforseoLabsAmazonProductKeywordIntersectionsLiveRequestInfo;
import io.github.dataforseo.client.model.DataforseoLabsAmazonProductKeywordIntersectionsLiveResponseInfo;
import io.github.dataforseo.client.model.DataforseoLabsAmazonProductRankOverviewLiveRequestInfo;
import io.github.dataforseo.client.model.DataforseoLabsAmazonProductRankOverviewLiveResponseInfo;
import io.github.dataforseo.client.model.DataforseoLabsAmazonRankedKeywordsLiveRequestInfo;
import io.github.dataforseo.client.model.DataforseoLabsAmazonRankedKeywordsLiveResponseInfo;
import io.github.dataforseo.client.model.DataforseoLabsAmazonRelatedKeywordsLiveRequestInfo;
import io.github.dataforseo.client.model.DataforseoLabsAmazonRelatedKeywordsLiveResponseInfo;
import io.github.dataforseo.client.model.DataforseoLabsAppleAppCompetitorsLiveRequestInfo;
import io.github.dataforseo.client.model.DataforseoLabsAppleAppCompetitorsLiveResponseInfo;
import io.github.dataforseo.client.model.DataforseoLabsAppleAppIntersectionLiveRequestInfo;
import io.github.dataforseo.client.model.DataforseoLabsAppleAppIntersectionLiveResponseInfo;
import io.github.dataforseo.client.model.DataforseoLabsAppleBulkAppMetricsLiveRequestInfo;
import io.github.dataforseo.client.model.DataforseoLabsAppleBulkAppMetricsLiveResponseInfo;
import io.github.dataforseo.client.model.DataforseoLabsAppleKeywordsForAppLiveRequestInfo;
import io.github.dataforseo.client.model.DataforseoLabsAppleKeywordsForAppLiveResponseInfo;
import io.github.dataforseo.client.model.DataforseoLabsAvailableFiltersResponseInfo;
import io.github.dataforseo.client.model.DataforseoLabsBingBulkKeywordDifficultyLiveRequestInfo;
import io.github.dataforseo.client.model.DataforseoLabsBingBulkKeywordDifficultyLiveResponseInfo;
import io.github.dataforseo.client.model.DataforseoLabsBingBulkTrafficEstimationLiveRequestInfo;
import io.github.dataforseo.client.model.DataforseoLabsBingBulkTrafficEstimationLiveResponseInfo;
import io.github.dataforseo.client.model.DataforseoLabsBingCompetitorsDomainLiveRequestInfo;
import io.github.dataforseo.client.model.DataforseoLabsBingCompetitorsDomainLiveResponseInfo;
import io.github.dataforseo.client.model.DataforseoLabsBingDomainIntersectionLiveRequestInfo;
import io.github.dataforseo.client.model.DataforseoLabsBingDomainIntersectionLiveResponseInfo;
import io.github.dataforseo.client.model.DataforseoLabsBingDomainRankOverviewLiveRequestInfo;
import io.github.dataforseo.client.model.DataforseoLabsBingDomainRankOverviewLiveResponseInfo;
import io.github.dataforseo.client.model.DataforseoLabsBingPageIntersectionLiveRequestInfo;
import io.github.dataforseo.client.model.DataforseoLabsBingPageIntersectionLiveResponseInfo;
import io.github.dataforseo.client.model.DataforseoLabsBingRankedKeywordsLiveRequestInfo;
import io.github.dataforseo.client.model.DataforseoLabsBingRankedKeywordsLiveResponseInfo;
import io.github.dataforseo.client.model.DataforseoLabsBingRelatedKeywordsLiveRequestInfo;
import io.github.dataforseo.client.model.DataforseoLabsBingRelatedKeywordsLiveResponseInfo;
import io.github.dataforseo.client.model.DataforseoLabsBingRelevantPagesLiveRequestInfo;
import io.github.dataforseo.client.model.DataforseoLabsBingRelevantPagesLiveResponseInfo;
import io.github.dataforseo.client.model.DataforseoLabsBingSerpCompetitorsLiveRequestInfo;
import io.github.dataforseo.client.model.DataforseoLabsBingSerpCompetitorsLiveResponseInfo;
import io.github.dataforseo.client.model.DataforseoLabsBingSubdomainsLiveRequestInfo;
import io.github.dataforseo.client.model.DataforseoLabsBingSubdomainsLiveResponseInfo;
import io.github.dataforseo.client.model.DataforseoLabsCategoriesResponseInfo;
import io.github.dataforseo.client.model.DataforseoLabsErrorsRequestInfo;
import io.github.dataforseo.client.model.DataforseoLabsErrorsResponseInfo;
import io.github.dataforseo.client.model.DataforseoLabsGoogleAppCompetitorsLiveRequestInfo;
import io.github.dataforseo.client.model.DataforseoLabsGoogleAppCompetitorsLiveResponseInfo;
import io.github.dataforseo.client.model.DataforseoLabsGoogleAppIntersectionLiveRequestInfo;
import io.github.dataforseo.client.model.DataforseoLabsGoogleAppIntersectionLiveResponseInfo;
import io.github.dataforseo.client.model.DataforseoLabsGoogleAvailableHistoryResponseInfo;
import io.github.dataforseo.client.model.DataforseoLabsGoogleBulkAppMetricsLiveRequestInfo;
import io.github.dataforseo.client.model.DataforseoLabsGoogleBulkAppMetricsLiveResponseInfo;
import io.github.dataforseo.client.model.DataforseoLabsGoogleBulkKeywordDifficultyLiveRequestInfo;
import io.github.dataforseo.client.model.DataforseoLabsGoogleBulkKeywordDifficultyLiveResponseInfo;
import io.github.dataforseo.client.model.DataforseoLabsGoogleBulkTrafficEstimationLiveRequestInfo;
import io.github.dataforseo.client.model.DataforseoLabsGoogleBulkTrafficEstimationLiveResponseInfo;
import io.github.dataforseo.client.model.DataforseoLabsGoogleCategoriesForDomainLiveRequestInfo;
import io.github.dataforseo.client.model.DataforseoLabsGoogleCategoriesForDomainLiveResponseInfo;
import io.github.dataforseo.client.model.DataforseoLabsGoogleCategoriesForKeywordsLanguagesResponseInfo;
import io.github.dataforseo.client.model.DataforseoLabsGoogleCategoriesForKeywordsLiveRequestInfo;
import io.github.dataforseo.client.model.DataforseoLabsGoogleCategoriesForKeywordsLiveResponseInfo;
import io.github.dataforseo.client.model.DataforseoLabsGoogleCompetitorsDomainLiveRequestInfo;
import io.github.dataforseo.client.model.DataforseoLabsGoogleCompetitorsDomainLiveResponseInfo;
import io.github.dataforseo.client.model.DataforseoLabsGoogleDomainIntersectionLiveRequestInfo;
import io.github.dataforseo.client.model.DataforseoLabsGoogleDomainIntersectionLiveResponseInfo;
import io.github.dataforseo.client.model.DataforseoLabsGoogleDomainMetricsByCategoriesLiveRequestInfo;
import io.github.dataforseo.client.model.DataforseoLabsGoogleDomainMetricsByCategoriesLiveResponseInfo;
import io.github.dataforseo.client.model.DataforseoLabsGoogleDomainRankOverviewLiveRequestInfo;
import io.github.dataforseo.client.model.DataforseoLabsGoogleDomainRankOverviewLiveResponseInfo;
import io.github.dataforseo.client.model.DataforseoLabsGoogleDomainWhoisOverviewLiveRequestInfo;
import io.github.dataforseo.client.model.DataforseoLabsGoogleDomainWhoisOverviewLiveResponseInfo;
import io.github.dataforseo.client.model.DataforseoLabsGoogleHistoricalBulkTrafficEstimationLiveRequestInfo;
import io.github.dataforseo.client.model.DataforseoLabsGoogleHistoricalBulkTrafficEstimationLiveResponseInfo;
import io.github.dataforseo.client.model.DataforseoLabsGoogleHistoricalRankOverviewLiveRequestInfo;
import io.github.dataforseo.client.model.DataforseoLabsGoogleHistoricalRankOverviewLiveResponseInfo;
import io.github.dataforseo.client.model.DataforseoLabsGoogleHistoricalSearchVolumeLiveRequestInfo;
import io.github.dataforseo.client.model.DataforseoLabsGoogleHistoricalSearchVolumeLiveResponseInfo;
import io.github.dataforseo.client.model.DataforseoLabsGoogleHistoricalSerpsLiveRequestInfo;
import io.github.dataforseo.client.model.DataforseoLabsGoogleHistoricalSerpsLiveResponseInfo;
import io.github.dataforseo.client.model.DataforseoLabsGoogleKeywordIdeasLiveRequestInfo;
import io.github.dataforseo.client.model.DataforseoLabsGoogleKeywordIdeasLiveResponseInfo;
import io.github.dataforseo.client.model.DataforseoLabsGoogleKeywordSuggestionsLiveRequestInfo;
import io.github.dataforseo.client.model.DataforseoLabsGoogleKeywordSuggestionsLiveResponseInfo;
import io.github.dataforseo.client.model.DataforseoLabsGoogleKeywordsForAppLiveRequestInfo;
import io.github.dataforseo.client.model.DataforseoLabsGoogleKeywordsForAppLiveResponseInfo;
import io.github.dataforseo.client.model.DataforseoLabsGoogleKeywordsForCategoriesLiveRequestInfo;
import io.github.dataforseo.client.model.DataforseoLabsGoogleKeywordsForCategoriesLiveResponseInfo;
import io.github.dataforseo.client.model.DataforseoLabsGoogleKeywordsForSiteLiveRequestInfo;
import io.github.dataforseo.client.model.DataforseoLabsGoogleKeywordsForSiteLiveResponseInfo;
import io.github.dataforseo.client.model.DataforseoLabsGooglePageIntersectionLiveRequestInfo;
import io.github.dataforseo.client.model.DataforseoLabsGooglePageIntersectionLiveResponseInfo;
import io.github.dataforseo.client.model.DataforseoLabsGoogleRankedKeywordsLiveRequestInfo;
import io.github.dataforseo.client.model.DataforseoLabsGoogleRankedKeywordsLiveResponseInfo;
import io.github.dataforseo.client.model.DataforseoLabsGoogleRelatedKeywordsLiveRequestInfo;
import io.github.dataforseo.client.model.DataforseoLabsGoogleRelatedKeywordsLiveResponseInfo;
import io.github.dataforseo.client.model.DataforseoLabsGoogleRelevantPagesLiveRequestInfo;
import io.github.dataforseo.client.model.DataforseoLabsGoogleRelevantPagesLiveResponseInfo;
import io.github.dataforseo.client.model.DataforseoLabsGoogleSearchIntentLiveRequestInfo;
import io.github.dataforseo.client.model.DataforseoLabsGoogleSearchIntentLiveResponseInfo;
import io.github.dataforseo.client.model.DataforseoLabsGoogleSerpCompetitorsLiveRequestInfo;
import io.github.dataforseo.client.model.DataforseoLabsGoogleSerpCompetitorsLiveResponseInfo;
import io.github.dataforseo.client.model.DataforseoLabsGoogleSubdomainsLiveRequestInfo;
import io.github.dataforseo.client.model.DataforseoLabsGoogleSubdomainsLiveResponseInfo;
import io.github.dataforseo.client.model.DataforseoLabsGoogleTopSearchesLiveRequestInfo;
import io.github.dataforseo.client.model.DataforseoLabsGoogleTopSearchesLiveResponseInfo;
import io.github.dataforseo.client.model.DataforseoLabsIdListRequestInfo;
import io.github.dataforseo.client.model.DataforseoLabsIdListResponseInfo;
import io.github.dataforseo.client.model.DataforseoLabsLocationsAndLanguagesResponseInfo;
import io.github.dataforseo.client.model.DataforseoLabsStatusResponseInfo;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class DataforseoLabsApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public DataforseoLabsApi() {
        this(Configuration.getDefaultApiClient());
    }

    public DataforseoLabsApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for amazonBulkSearchVolumeLive
     * @param dataforseoLabsAmazonBulkSearchVolumeLiveRequestInfo  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call amazonBulkSearchVolumeLiveCall(List<DataforseoLabsAmazonBulkSearchVolumeLiveRequestInfo> dataforseoLabsAmazonBulkSearchVolumeLiveRequestInfo, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = dataforseoLabsAmazonBulkSearchVolumeLiveRequestInfo;

        // create path and map variables
        String localVarPath = "/v3/dataforseo_labs/amazon/bulk_search_volume/live";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "basicAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call amazonBulkSearchVolumeLiveValidateBeforeCall(List<DataforseoLabsAmazonBulkSearchVolumeLiveRequestInfo> dataforseoLabsAmazonBulkSearchVolumeLiveRequestInfo, final ApiCallback _callback) throws ApiException {
        return amazonBulkSearchVolumeLiveCall(dataforseoLabsAmazonBulkSearchVolumeLiveRequestInfo, _callback);

    }

    /**
     * 
     * ‌ This endpoint will provide you with search volume values for a maximum of 1,000 keywords in one API request. Here search volume represents the approximate number of monthly searches for a keyword on Amazon. The returned results are specific to the keywords, location, and language parameters specified in a POST request. for more info please visit &#39;https://docs.dataforseo.com/v3/dataforseo_labs/amazon/bulk_search_volume/live/?bash&#39;
     * @param dataforseoLabsAmazonBulkSearchVolumeLiveRequestInfo  (optional)
     * @return DataforseoLabsAmazonBulkSearchVolumeLiveResponseInfo
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public DataforseoLabsAmazonBulkSearchVolumeLiveResponseInfo amazonBulkSearchVolumeLive(List<DataforseoLabsAmazonBulkSearchVolumeLiveRequestInfo> dataforseoLabsAmazonBulkSearchVolumeLiveRequestInfo) throws ApiException {
        ApiResponse<DataforseoLabsAmazonBulkSearchVolumeLiveResponseInfo> localVarResp = amazonBulkSearchVolumeLiveWithHttpInfo(dataforseoLabsAmazonBulkSearchVolumeLiveRequestInfo);
        return localVarResp.getData();
    }

    /**
     * 
     * ‌ This endpoint will provide you with search volume values for a maximum of 1,000 keywords in one API request. Here search volume represents the approximate number of monthly searches for a keyword on Amazon. The returned results are specific to the keywords, location, and language parameters specified in a POST request. for more info please visit &#39;https://docs.dataforseo.com/v3/dataforseo_labs/amazon/bulk_search_volume/live/?bash&#39;
     * @param dataforseoLabsAmazonBulkSearchVolumeLiveRequestInfo  (optional)
     * @return ApiResponse&lt;DataforseoLabsAmazonBulkSearchVolumeLiveResponseInfo&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<DataforseoLabsAmazonBulkSearchVolumeLiveResponseInfo> amazonBulkSearchVolumeLiveWithHttpInfo(List<DataforseoLabsAmazonBulkSearchVolumeLiveRequestInfo> dataforseoLabsAmazonBulkSearchVolumeLiveRequestInfo) throws ApiException {
        okhttp3.Call localVarCall = amazonBulkSearchVolumeLiveValidateBeforeCall(dataforseoLabsAmazonBulkSearchVolumeLiveRequestInfo, null);
        Type localVarReturnType = new TypeToken<DataforseoLabsAmazonBulkSearchVolumeLiveResponseInfo>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * ‌ This endpoint will provide you with search volume values for a maximum of 1,000 keywords in one API request. Here search volume represents the approximate number of monthly searches for a keyword on Amazon. The returned results are specific to the keywords, location, and language parameters specified in a POST request. for more info please visit &#39;https://docs.dataforseo.com/v3/dataforseo_labs/amazon/bulk_search_volume/live/?bash&#39;
     * @param dataforseoLabsAmazonBulkSearchVolumeLiveRequestInfo  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call amazonBulkSearchVolumeLiveAsync(List<DataforseoLabsAmazonBulkSearchVolumeLiveRequestInfo> dataforseoLabsAmazonBulkSearchVolumeLiveRequestInfo, final ApiCallback<DataforseoLabsAmazonBulkSearchVolumeLiveResponseInfo> _callback) throws ApiException {

        okhttp3.Call localVarCall = amazonBulkSearchVolumeLiveValidateBeforeCall(dataforseoLabsAmazonBulkSearchVolumeLiveRequestInfo, _callback);
        Type localVarReturnType = new TypeToken<DataforseoLabsAmazonBulkSearchVolumeLiveResponseInfo>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for amazonProductCompetitorsLive
     * @param dataforseoLabsAmazonProductCompetitorsLiveRequestInfo  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call amazonProductCompetitorsLiveCall(List<DataforseoLabsAmazonProductCompetitorsLiveRequestInfo> dataforseoLabsAmazonProductCompetitorsLiveRequestInfo, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = dataforseoLabsAmazonProductCompetitorsLiveRequestInfo;

        // create path and map variables
        String localVarPath = "/v3/dataforseo_labs/amazon/product_competitors/live";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "basicAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call amazonProductCompetitorsLiveValidateBeforeCall(List<DataforseoLabsAmazonProductCompetitorsLiveRequestInfo> dataforseoLabsAmazonProductCompetitorsLiveRequestInfo, final ApiCallback _callback) throws ApiException {
        return amazonProductCompetitorsLiveCall(dataforseoLabsAmazonProductCompetitorsLiveRequestInfo, _callback);

    }

    /**
     * 
     * ‌ This endpoint will provide you with a list of products that intersect with a target asin in Amazon SERPs. The data can help you identify product competitors for any listing published on Amazon. The returned results are specific to the asin as well as the location and language parameters specified in a POST request. for more info please visit &#39;https://docs.dataforseo.com/v3/dataforseo_labs/amazon/product_competitors/live/?bash&#39;
     * @param dataforseoLabsAmazonProductCompetitorsLiveRequestInfo  (optional)
     * @return DataforseoLabsAmazonProductCompetitorsLiveResponseInfo
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public DataforseoLabsAmazonProductCompetitorsLiveResponseInfo amazonProductCompetitorsLive(List<DataforseoLabsAmazonProductCompetitorsLiveRequestInfo> dataforseoLabsAmazonProductCompetitorsLiveRequestInfo) throws ApiException {
        ApiResponse<DataforseoLabsAmazonProductCompetitorsLiveResponseInfo> localVarResp = amazonProductCompetitorsLiveWithHttpInfo(dataforseoLabsAmazonProductCompetitorsLiveRequestInfo);
        return localVarResp.getData();
    }

    /**
     * 
     * ‌ This endpoint will provide you with a list of products that intersect with a target asin in Amazon SERPs. The data can help you identify product competitors for any listing published on Amazon. The returned results are specific to the asin as well as the location and language parameters specified in a POST request. for more info please visit &#39;https://docs.dataforseo.com/v3/dataforseo_labs/amazon/product_competitors/live/?bash&#39;
     * @param dataforseoLabsAmazonProductCompetitorsLiveRequestInfo  (optional)
     * @return ApiResponse&lt;DataforseoLabsAmazonProductCompetitorsLiveResponseInfo&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<DataforseoLabsAmazonProductCompetitorsLiveResponseInfo> amazonProductCompetitorsLiveWithHttpInfo(List<DataforseoLabsAmazonProductCompetitorsLiveRequestInfo> dataforseoLabsAmazonProductCompetitorsLiveRequestInfo) throws ApiException {
        okhttp3.Call localVarCall = amazonProductCompetitorsLiveValidateBeforeCall(dataforseoLabsAmazonProductCompetitorsLiveRequestInfo, null);
        Type localVarReturnType = new TypeToken<DataforseoLabsAmazonProductCompetitorsLiveResponseInfo>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * ‌ This endpoint will provide you with a list of products that intersect with a target asin in Amazon SERPs. The data can help you identify product competitors for any listing published on Amazon. The returned results are specific to the asin as well as the location and language parameters specified in a POST request. for more info please visit &#39;https://docs.dataforseo.com/v3/dataforseo_labs/amazon/product_competitors/live/?bash&#39;
     * @param dataforseoLabsAmazonProductCompetitorsLiveRequestInfo  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call amazonProductCompetitorsLiveAsync(List<DataforseoLabsAmazonProductCompetitorsLiveRequestInfo> dataforseoLabsAmazonProductCompetitorsLiveRequestInfo, final ApiCallback<DataforseoLabsAmazonProductCompetitorsLiveResponseInfo> _callback) throws ApiException {

        okhttp3.Call localVarCall = amazonProductCompetitorsLiveValidateBeforeCall(dataforseoLabsAmazonProductCompetitorsLiveRequestInfo, _callback);
        Type localVarReturnType = new TypeToken<DataforseoLabsAmazonProductCompetitorsLiveResponseInfo>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for amazonProductKeywordIntersectionsLive
     * @param dataforseoLabsAmazonProductKeywordIntersectionsLiveRequestInfo  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call amazonProductKeywordIntersectionsLiveCall(List<DataforseoLabsAmazonProductKeywordIntersectionsLiveRequestInfo> dataforseoLabsAmazonProductKeywordIntersectionsLiveRequestInfo, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = dataforseoLabsAmazonProductKeywordIntersectionsLiveRequestInfo;

        // create path and map variables
        String localVarPath = "/v3/dataforseo_labs/amazon/product_keyword_intersections/live";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "basicAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call amazonProductKeywordIntersectionsLiveValidateBeforeCall(List<DataforseoLabsAmazonProductKeywordIntersectionsLiveRequestInfo> dataforseoLabsAmazonProductKeywordIntersectionsLiveRequestInfo, final ApiCallback _callback) throws ApiException {
        return amazonProductKeywordIntersectionsLiveCall(dataforseoLabsAmazonProductKeywordIntersectionsLiveRequestInfo, _callback);

    }

    /**
     * 
     * ‌ This endpoint will provide you with a list of keywords for which the target products intersect in Amazon SERP. The returned results are specific to the asins specified in a POST request. Learn more about ASIN in this help center article. for more info please visit &#39;https://docs.dataforseo.com/v3/dataforseo_labs/amazon/product_keyword_intersections/live/?bash&#39;
     * @param dataforseoLabsAmazonProductKeywordIntersectionsLiveRequestInfo  (optional)
     * @return DataforseoLabsAmazonProductKeywordIntersectionsLiveResponseInfo
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public DataforseoLabsAmazonProductKeywordIntersectionsLiveResponseInfo amazonProductKeywordIntersectionsLive(List<DataforseoLabsAmazonProductKeywordIntersectionsLiveRequestInfo> dataforseoLabsAmazonProductKeywordIntersectionsLiveRequestInfo) throws ApiException {
        ApiResponse<DataforseoLabsAmazonProductKeywordIntersectionsLiveResponseInfo> localVarResp = amazonProductKeywordIntersectionsLiveWithHttpInfo(dataforseoLabsAmazonProductKeywordIntersectionsLiveRequestInfo);
        return localVarResp.getData();
    }

    /**
     * 
     * ‌ This endpoint will provide you with a list of keywords for which the target products intersect in Amazon SERP. The returned results are specific to the asins specified in a POST request. Learn more about ASIN in this help center article. for more info please visit &#39;https://docs.dataforseo.com/v3/dataforseo_labs/amazon/product_keyword_intersections/live/?bash&#39;
     * @param dataforseoLabsAmazonProductKeywordIntersectionsLiveRequestInfo  (optional)
     * @return ApiResponse&lt;DataforseoLabsAmazonProductKeywordIntersectionsLiveResponseInfo&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<DataforseoLabsAmazonProductKeywordIntersectionsLiveResponseInfo> amazonProductKeywordIntersectionsLiveWithHttpInfo(List<DataforseoLabsAmazonProductKeywordIntersectionsLiveRequestInfo> dataforseoLabsAmazonProductKeywordIntersectionsLiveRequestInfo) throws ApiException {
        okhttp3.Call localVarCall = amazonProductKeywordIntersectionsLiveValidateBeforeCall(dataforseoLabsAmazonProductKeywordIntersectionsLiveRequestInfo, null);
        Type localVarReturnType = new TypeToken<DataforseoLabsAmazonProductKeywordIntersectionsLiveResponseInfo>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * ‌ This endpoint will provide you with a list of keywords for which the target products intersect in Amazon SERP. The returned results are specific to the asins specified in a POST request. Learn more about ASIN in this help center article. for more info please visit &#39;https://docs.dataforseo.com/v3/dataforseo_labs/amazon/product_keyword_intersections/live/?bash&#39;
     * @param dataforseoLabsAmazonProductKeywordIntersectionsLiveRequestInfo  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call amazonProductKeywordIntersectionsLiveAsync(List<DataforseoLabsAmazonProductKeywordIntersectionsLiveRequestInfo> dataforseoLabsAmazonProductKeywordIntersectionsLiveRequestInfo, final ApiCallback<DataforseoLabsAmazonProductKeywordIntersectionsLiveResponseInfo> _callback) throws ApiException {

        okhttp3.Call localVarCall = amazonProductKeywordIntersectionsLiveValidateBeforeCall(dataforseoLabsAmazonProductKeywordIntersectionsLiveRequestInfo, _callback);
        Type localVarReturnType = new TypeToken<DataforseoLabsAmazonProductKeywordIntersectionsLiveResponseInfo>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for amazonProductRankOverviewLive
     * @param dataforseoLabsAmazonProductRankOverviewLiveRequestInfo  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call amazonProductRankOverviewLiveCall(List<DataforseoLabsAmazonProductRankOverviewLiveRequestInfo> dataforseoLabsAmazonProductRankOverviewLiveRequestInfo, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = dataforseoLabsAmazonProductRankOverviewLiveRequestInfo;

        // create path and map variables
        String localVarPath = "/v3/dataforseo_labs/amazon/product_rank_overview/live";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "basicAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call amazonProductRankOverviewLiveValidateBeforeCall(List<DataforseoLabsAmazonProductRankOverviewLiveRequestInfo> dataforseoLabsAmazonProductRankOverviewLiveRequestInfo, final ApiCallback _callback) throws ApiException {
        return amazonProductRankOverviewLiveCall(dataforseoLabsAmazonProductRankOverviewLiveRequestInfo, _callback);

    }

    /**
     * 
     * ‌ This endpoint will provide you with ranking data from organic and paid Amazon SERPs for the target products. The returned results are specific to the asins specified in a POST request. Learn more about ASIN in this help center article. for more info please visit &#39;https://docs.dataforseo.com/v3/dataforseo_labs/amazon/product_rank_overview/live/?bash&#39;
     * @param dataforseoLabsAmazonProductRankOverviewLiveRequestInfo  (optional)
     * @return DataforseoLabsAmazonProductRankOverviewLiveResponseInfo
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public DataforseoLabsAmazonProductRankOverviewLiveResponseInfo amazonProductRankOverviewLive(List<DataforseoLabsAmazonProductRankOverviewLiveRequestInfo> dataforseoLabsAmazonProductRankOverviewLiveRequestInfo) throws ApiException {
        ApiResponse<DataforseoLabsAmazonProductRankOverviewLiveResponseInfo> localVarResp = amazonProductRankOverviewLiveWithHttpInfo(dataforseoLabsAmazonProductRankOverviewLiveRequestInfo);
        return localVarResp.getData();
    }

    /**
     * 
     * ‌ This endpoint will provide you with ranking data from organic and paid Amazon SERPs for the target products. The returned results are specific to the asins specified in a POST request. Learn more about ASIN in this help center article. for more info please visit &#39;https://docs.dataforseo.com/v3/dataforseo_labs/amazon/product_rank_overview/live/?bash&#39;
     * @param dataforseoLabsAmazonProductRankOverviewLiveRequestInfo  (optional)
     * @return ApiResponse&lt;DataforseoLabsAmazonProductRankOverviewLiveResponseInfo&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<DataforseoLabsAmazonProductRankOverviewLiveResponseInfo> amazonProductRankOverviewLiveWithHttpInfo(List<DataforseoLabsAmazonProductRankOverviewLiveRequestInfo> dataforseoLabsAmazonProductRankOverviewLiveRequestInfo) throws ApiException {
        okhttp3.Call localVarCall = amazonProductRankOverviewLiveValidateBeforeCall(dataforseoLabsAmazonProductRankOverviewLiveRequestInfo, null);
        Type localVarReturnType = new TypeToken<DataforseoLabsAmazonProductRankOverviewLiveResponseInfo>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * ‌ This endpoint will provide you with ranking data from organic and paid Amazon SERPs for the target products. The returned results are specific to the asins specified in a POST request. Learn more about ASIN in this help center article. for more info please visit &#39;https://docs.dataforseo.com/v3/dataforseo_labs/amazon/product_rank_overview/live/?bash&#39;
     * @param dataforseoLabsAmazonProductRankOverviewLiveRequestInfo  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call amazonProductRankOverviewLiveAsync(List<DataforseoLabsAmazonProductRankOverviewLiveRequestInfo> dataforseoLabsAmazonProductRankOverviewLiveRequestInfo, final ApiCallback<DataforseoLabsAmazonProductRankOverviewLiveResponseInfo> _callback) throws ApiException {

        okhttp3.Call localVarCall = amazonProductRankOverviewLiveValidateBeforeCall(dataforseoLabsAmazonProductRankOverviewLiveRequestInfo, _callback);
        Type localVarReturnType = new TypeToken<DataforseoLabsAmazonProductRankOverviewLiveResponseInfo>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for amazonRankedKeywordsLive
     * @param dataforseoLabsAmazonRankedKeywordsLiveRequestInfo  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call amazonRankedKeywordsLiveCall(List<DataforseoLabsAmazonRankedKeywordsLiveRequestInfo> dataforseoLabsAmazonRankedKeywordsLiveRequestInfo, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = dataforseoLabsAmazonRankedKeywordsLiveRequestInfo;

        // create path and map variables
        String localVarPath = "/v3/dataforseo_labs/amazon/ranked_keywords/live";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "basicAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call amazonRankedKeywordsLiveValidateBeforeCall(List<DataforseoLabsAmazonRankedKeywordsLiveRequestInfo> dataforseoLabsAmazonRankedKeywordsLiveRequestInfo, final ApiCallback _callback) throws ApiException {
        return amazonRankedKeywordsLiveCall(dataforseoLabsAmazonRankedKeywordsLiveRequestInfo, _callback);

    }

    /**
     * 
     * ‌ This endpoint will provide you with a list of keywords the target product ranks for on Amazon. The returned results are specific to the asin specified in a POST request. Learn more about ASIN in this help center article. for more info please visit &#39;https://docs.dataforseo.com/v3/dataforseo_labs/amazon/ranked_keywords/live/?bash&#39;
     * @param dataforseoLabsAmazonRankedKeywordsLiveRequestInfo  (optional)
     * @return DataforseoLabsAmazonRankedKeywordsLiveResponseInfo
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public DataforseoLabsAmazonRankedKeywordsLiveResponseInfo amazonRankedKeywordsLive(List<DataforseoLabsAmazonRankedKeywordsLiveRequestInfo> dataforseoLabsAmazonRankedKeywordsLiveRequestInfo) throws ApiException {
        ApiResponse<DataforseoLabsAmazonRankedKeywordsLiveResponseInfo> localVarResp = amazonRankedKeywordsLiveWithHttpInfo(dataforseoLabsAmazonRankedKeywordsLiveRequestInfo);
        return localVarResp.getData();
    }

    /**
     * 
     * ‌ This endpoint will provide you with a list of keywords the target product ranks for on Amazon. The returned results are specific to the asin specified in a POST request. Learn more about ASIN in this help center article. for more info please visit &#39;https://docs.dataforseo.com/v3/dataforseo_labs/amazon/ranked_keywords/live/?bash&#39;
     * @param dataforseoLabsAmazonRankedKeywordsLiveRequestInfo  (optional)
     * @return ApiResponse&lt;DataforseoLabsAmazonRankedKeywordsLiveResponseInfo&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<DataforseoLabsAmazonRankedKeywordsLiveResponseInfo> amazonRankedKeywordsLiveWithHttpInfo(List<DataforseoLabsAmazonRankedKeywordsLiveRequestInfo> dataforseoLabsAmazonRankedKeywordsLiveRequestInfo) throws ApiException {
        okhttp3.Call localVarCall = amazonRankedKeywordsLiveValidateBeforeCall(dataforseoLabsAmazonRankedKeywordsLiveRequestInfo, null);
        Type localVarReturnType = new TypeToken<DataforseoLabsAmazonRankedKeywordsLiveResponseInfo>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * ‌ This endpoint will provide you with a list of keywords the target product ranks for on Amazon. The returned results are specific to the asin specified in a POST request. Learn more about ASIN in this help center article. for more info please visit &#39;https://docs.dataforseo.com/v3/dataforseo_labs/amazon/ranked_keywords/live/?bash&#39;
     * @param dataforseoLabsAmazonRankedKeywordsLiveRequestInfo  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call amazonRankedKeywordsLiveAsync(List<DataforseoLabsAmazonRankedKeywordsLiveRequestInfo> dataforseoLabsAmazonRankedKeywordsLiveRequestInfo, final ApiCallback<DataforseoLabsAmazonRankedKeywordsLiveResponseInfo> _callback) throws ApiException {

        okhttp3.Call localVarCall = amazonRankedKeywordsLiveValidateBeforeCall(dataforseoLabsAmazonRankedKeywordsLiveRequestInfo, _callback);
        Type localVarReturnType = new TypeToken<DataforseoLabsAmazonRankedKeywordsLiveResponseInfo>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for amazonRelatedKeywordsLive
     * @param dataforseoLabsAmazonRelatedKeywordsLiveRequestInfo  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call amazonRelatedKeywordsLiveCall(List<DataforseoLabsAmazonRelatedKeywordsLiveRequestInfo> dataforseoLabsAmazonRelatedKeywordsLiveRequestInfo, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = dataforseoLabsAmazonRelatedKeywordsLiveRequestInfo;

        // create path and map variables
        String localVarPath = "/v3/dataforseo_labs/amazon/related_keywords/live";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "basicAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call amazonRelatedKeywordsLiveValidateBeforeCall(List<DataforseoLabsAmazonRelatedKeywordsLiveRequestInfo> dataforseoLabsAmazonRelatedKeywordsLiveRequestInfo, final ApiCallback _callback) throws ApiException {
        return amazonRelatedKeywordsLiveCall(dataforseoLabsAmazonRelatedKeywordsLiveRequestInfo, _callback);

    }

    /**
     * 
     * ‌‌ The Related Keywords endpoint provides keywords appearing in the  \&quot;Related Searches\&quot; section on Amazon. for more info please visit &#39;https://docs.dataforseo.com/v3/dataforseo_labs/amazon/related_keywords/live/?bash&#39;
     * @param dataforseoLabsAmazonRelatedKeywordsLiveRequestInfo  (optional)
     * @return DataforseoLabsAmazonRelatedKeywordsLiveResponseInfo
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public DataforseoLabsAmazonRelatedKeywordsLiveResponseInfo amazonRelatedKeywordsLive(List<DataforseoLabsAmazonRelatedKeywordsLiveRequestInfo> dataforseoLabsAmazonRelatedKeywordsLiveRequestInfo) throws ApiException {
        ApiResponse<DataforseoLabsAmazonRelatedKeywordsLiveResponseInfo> localVarResp = amazonRelatedKeywordsLiveWithHttpInfo(dataforseoLabsAmazonRelatedKeywordsLiveRequestInfo);
        return localVarResp.getData();
    }

    /**
     * 
     * ‌‌ The Related Keywords endpoint provides keywords appearing in the  \&quot;Related Searches\&quot; section on Amazon. for more info please visit &#39;https://docs.dataforseo.com/v3/dataforseo_labs/amazon/related_keywords/live/?bash&#39;
     * @param dataforseoLabsAmazonRelatedKeywordsLiveRequestInfo  (optional)
     * @return ApiResponse&lt;DataforseoLabsAmazonRelatedKeywordsLiveResponseInfo&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<DataforseoLabsAmazonRelatedKeywordsLiveResponseInfo> amazonRelatedKeywordsLiveWithHttpInfo(List<DataforseoLabsAmazonRelatedKeywordsLiveRequestInfo> dataforseoLabsAmazonRelatedKeywordsLiveRequestInfo) throws ApiException {
        okhttp3.Call localVarCall = amazonRelatedKeywordsLiveValidateBeforeCall(dataforseoLabsAmazonRelatedKeywordsLiveRequestInfo, null);
        Type localVarReturnType = new TypeToken<DataforseoLabsAmazonRelatedKeywordsLiveResponseInfo>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * ‌‌ The Related Keywords endpoint provides keywords appearing in the  \&quot;Related Searches\&quot; section on Amazon. for more info please visit &#39;https://docs.dataforseo.com/v3/dataforseo_labs/amazon/related_keywords/live/?bash&#39;
     * @param dataforseoLabsAmazonRelatedKeywordsLiveRequestInfo  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call amazonRelatedKeywordsLiveAsync(List<DataforseoLabsAmazonRelatedKeywordsLiveRequestInfo> dataforseoLabsAmazonRelatedKeywordsLiveRequestInfo, final ApiCallback<DataforseoLabsAmazonRelatedKeywordsLiveResponseInfo> _callback) throws ApiException {

        okhttp3.Call localVarCall = amazonRelatedKeywordsLiveValidateBeforeCall(dataforseoLabsAmazonRelatedKeywordsLiveRequestInfo, _callback);
        Type localVarReturnType = new TypeToken<DataforseoLabsAmazonRelatedKeywordsLiveResponseInfo>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for appleAppCompetitorsLive
     * @param dataforseoLabsAppleAppCompetitorsLiveRequestInfo  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call appleAppCompetitorsLiveCall(List<DataforseoLabsAppleAppCompetitorsLiveRequestInfo> dataforseoLabsAppleAppCompetitorsLiveRequestInfo, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = dataforseoLabsAppleAppCompetitorsLiveRequestInfo;

        // create path and map variables
        String localVarPath = "/v3/dataforseo_labs/apple/app_competitors/live";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "basicAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call appleAppCompetitorsLiveValidateBeforeCall(List<DataforseoLabsAppleAppCompetitorsLiveRequestInfo> dataforseoLabsAppleAppCompetitorsLiveRequestInfo, final ApiCallback _callback) throws ApiException {
        return appleAppCompetitorsLiveCall(dataforseoLabsAppleAppCompetitorsLiveRequestInfo, _callback);

    }

    /**
     * 
     * ‌ This endpoint will provide you with a list of mobile applications that intersect with the target app for its ranking keywords on App Store. You will obtain the IDs of competitor apps along with search volume and ranking data on competitor ranking keywords. for more info please visit &#39;https://docs.dataforseo.com/v3/dataforseo_labs/apple/app_competitors/live/?bash&#39;
     * @param dataforseoLabsAppleAppCompetitorsLiveRequestInfo  (optional)
     * @return DataforseoLabsAppleAppCompetitorsLiveResponseInfo
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public DataforseoLabsAppleAppCompetitorsLiveResponseInfo appleAppCompetitorsLive(List<DataforseoLabsAppleAppCompetitorsLiveRequestInfo> dataforseoLabsAppleAppCompetitorsLiveRequestInfo) throws ApiException {
        ApiResponse<DataforseoLabsAppleAppCompetitorsLiveResponseInfo> localVarResp = appleAppCompetitorsLiveWithHttpInfo(dataforseoLabsAppleAppCompetitorsLiveRequestInfo);
        return localVarResp.getData();
    }

    /**
     * 
     * ‌ This endpoint will provide you with a list of mobile applications that intersect with the target app for its ranking keywords on App Store. You will obtain the IDs of competitor apps along with search volume and ranking data on competitor ranking keywords. for more info please visit &#39;https://docs.dataforseo.com/v3/dataforseo_labs/apple/app_competitors/live/?bash&#39;
     * @param dataforseoLabsAppleAppCompetitorsLiveRequestInfo  (optional)
     * @return ApiResponse&lt;DataforseoLabsAppleAppCompetitorsLiveResponseInfo&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<DataforseoLabsAppleAppCompetitorsLiveResponseInfo> appleAppCompetitorsLiveWithHttpInfo(List<DataforseoLabsAppleAppCompetitorsLiveRequestInfo> dataforseoLabsAppleAppCompetitorsLiveRequestInfo) throws ApiException {
        okhttp3.Call localVarCall = appleAppCompetitorsLiveValidateBeforeCall(dataforseoLabsAppleAppCompetitorsLiveRequestInfo, null);
        Type localVarReturnType = new TypeToken<DataforseoLabsAppleAppCompetitorsLiveResponseInfo>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * ‌ This endpoint will provide you with a list of mobile applications that intersect with the target app for its ranking keywords on App Store. You will obtain the IDs of competitor apps along with search volume and ranking data on competitor ranking keywords. for more info please visit &#39;https://docs.dataforseo.com/v3/dataforseo_labs/apple/app_competitors/live/?bash&#39;
     * @param dataforseoLabsAppleAppCompetitorsLiveRequestInfo  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call appleAppCompetitorsLiveAsync(List<DataforseoLabsAppleAppCompetitorsLiveRequestInfo> dataforseoLabsAppleAppCompetitorsLiveRequestInfo, final ApiCallback<DataforseoLabsAppleAppCompetitorsLiveResponseInfo> _callback) throws ApiException {

        okhttp3.Call localVarCall = appleAppCompetitorsLiveValidateBeforeCall(dataforseoLabsAppleAppCompetitorsLiveRequestInfo, _callback);
        Type localVarReturnType = new TypeToken<DataforseoLabsAppleAppCompetitorsLiveResponseInfo>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for appleAppIntersectionLive
     * @param dataforseoLabsAppleAppIntersectionLiveRequestInfo  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call appleAppIntersectionLiveCall(List<DataforseoLabsAppleAppIntersectionLiveRequestInfo> dataforseoLabsAppleAppIntersectionLiveRequestInfo, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = dataforseoLabsAppleAppIntersectionLiveRequestInfo;

        // create path and map variables
        String localVarPath = "/v3/dataforseo_labs/apple/app_intersection/live";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "basicAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call appleAppIntersectionLiveValidateBeforeCall(List<DataforseoLabsAppleAppIntersectionLiveRequestInfo> dataforseoLabsAppleAppIntersectionLiveRequestInfo, final ApiCallback _callback) throws ApiException {
        return appleAppIntersectionLiveCall(dataforseoLabsAppleAppIntersectionLiveRequestInfo, _callback);

    }

    /**
     * 
     * ‌ This endpoint will provide you with a list of keywords for which the mobile applications specified in the app_ids object rank within the same App Store SERP. for more info please visit &#39;https://docs.dataforseo.com/v3/dataforseo_labs/apple/app_intersection/live/?bash&#39;
     * @param dataforseoLabsAppleAppIntersectionLiveRequestInfo  (optional)
     * @return DataforseoLabsAppleAppIntersectionLiveResponseInfo
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public DataforseoLabsAppleAppIntersectionLiveResponseInfo appleAppIntersectionLive(List<DataforseoLabsAppleAppIntersectionLiveRequestInfo> dataforseoLabsAppleAppIntersectionLiveRequestInfo) throws ApiException {
        ApiResponse<DataforseoLabsAppleAppIntersectionLiveResponseInfo> localVarResp = appleAppIntersectionLiveWithHttpInfo(dataforseoLabsAppleAppIntersectionLiveRequestInfo);
        return localVarResp.getData();
    }

    /**
     * 
     * ‌ This endpoint will provide you with a list of keywords for which the mobile applications specified in the app_ids object rank within the same App Store SERP. for more info please visit &#39;https://docs.dataforseo.com/v3/dataforseo_labs/apple/app_intersection/live/?bash&#39;
     * @param dataforseoLabsAppleAppIntersectionLiveRequestInfo  (optional)
     * @return ApiResponse&lt;DataforseoLabsAppleAppIntersectionLiveResponseInfo&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<DataforseoLabsAppleAppIntersectionLiveResponseInfo> appleAppIntersectionLiveWithHttpInfo(List<DataforseoLabsAppleAppIntersectionLiveRequestInfo> dataforseoLabsAppleAppIntersectionLiveRequestInfo) throws ApiException {
        okhttp3.Call localVarCall = appleAppIntersectionLiveValidateBeforeCall(dataforseoLabsAppleAppIntersectionLiveRequestInfo, null);
        Type localVarReturnType = new TypeToken<DataforseoLabsAppleAppIntersectionLiveResponseInfo>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * ‌ This endpoint will provide you with a list of keywords for which the mobile applications specified in the app_ids object rank within the same App Store SERP. for more info please visit &#39;https://docs.dataforseo.com/v3/dataforseo_labs/apple/app_intersection/live/?bash&#39;
     * @param dataforseoLabsAppleAppIntersectionLiveRequestInfo  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call appleAppIntersectionLiveAsync(List<DataforseoLabsAppleAppIntersectionLiveRequestInfo> dataforseoLabsAppleAppIntersectionLiveRequestInfo, final ApiCallback<DataforseoLabsAppleAppIntersectionLiveResponseInfo> _callback) throws ApiException {

        okhttp3.Call localVarCall = appleAppIntersectionLiveValidateBeforeCall(dataforseoLabsAppleAppIntersectionLiveRequestInfo, _callback);
        Type localVarReturnType = new TypeToken<DataforseoLabsAppleAppIntersectionLiveResponseInfo>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for appleBulkAppMetricsLive
     * @param dataforseoLabsAppleBulkAppMetricsLiveRequestInfo  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call appleBulkAppMetricsLiveCall(List<DataforseoLabsAppleBulkAppMetricsLiveRequestInfo> dataforseoLabsAppleBulkAppMetricsLiveRequestInfo, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = dataforseoLabsAppleBulkAppMetricsLiveRequestInfo;

        // create path and map variables
        String localVarPath = "/v3/dataforseo_labs/apple/bulk_app_metrics/live";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "basicAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call appleBulkAppMetricsLiveValidateBeforeCall(List<DataforseoLabsAppleBulkAppMetricsLiveRequestInfo> dataforseoLabsAppleBulkAppMetricsLiveRequestInfo, final ApiCallback _callback) throws ApiException {
        return appleBulkAppMetricsLiveCall(dataforseoLabsAppleBulkAppMetricsLiveRequestInfo, _callback);

    }

    /**
     * 
     * ‌ This endpoint will provide you with ranking metrics for up to 1000 App Store applications. for more info please visit &#39;https://docs.dataforseo.com/v3/dataforseo_labs/apple/bulk_app_metrics/live/?bash&#39;
     * @param dataforseoLabsAppleBulkAppMetricsLiveRequestInfo  (optional)
     * @return DataforseoLabsAppleBulkAppMetricsLiveResponseInfo
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public DataforseoLabsAppleBulkAppMetricsLiveResponseInfo appleBulkAppMetricsLive(List<DataforseoLabsAppleBulkAppMetricsLiveRequestInfo> dataforseoLabsAppleBulkAppMetricsLiveRequestInfo) throws ApiException {
        ApiResponse<DataforseoLabsAppleBulkAppMetricsLiveResponseInfo> localVarResp = appleBulkAppMetricsLiveWithHttpInfo(dataforseoLabsAppleBulkAppMetricsLiveRequestInfo);
        return localVarResp.getData();
    }

    /**
     * 
     * ‌ This endpoint will provide you with ranking metrics for up to 1000 App Store applications. for more info please visit &#39;https://docs.dataforseo.com/v3/dataforseo_labs/apple/bulk_app_metrics/live/?bash&#39;
     * @param dataforseoLabsAppleBulkAppMetricsLiveRequestInfo  (optional)
     * @return ApiResponse&lt;DataforseoLabsAppleBulkAppMetricsLiveResponseInfo&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<DataforseoLabsAppleBulkAppMetricsLiveResponseInfo> appleBulkAppMetricsLiveWithHttpInfo(List<DataforseoLabsAppleBulkAppMetricsLiveRequestInfo> dataforseoLabsAppleBulkAppMetricsLiveRequestInfo) throws ApiException {
        okhttp3.Call localVarCall = appleBulkAppMetricsLiveValidateBeforeCall(dataforseoLabsAppleBulkAppMetricsLiveRequestInfo, null);
        Type localVarReturnType = new TypeToken<DataforseoLabsAppleBulkAppMetricsLiveResponseInfo>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * ‌ This endpoint will provide you with ranking metrics for up to 1000 App Store applications. for more info please visit &#39;https://docs.dataforseo.com/v3/dataforseo_labs/apple/bulk_app_metrics/live/?bash&#39;
     * @param dataforseoLabsAppleBulkAppMetricsLiveRequestInfo  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call appleBulkAppMetricsLiveAsync(List<DataforseoLabsAppleBulkAppMetricsLiveRequestInfo> dataforseoLabsAppleBulkAppMetricsLiveRequestInfo, final ApiCallback<DataforseoLabsAppleBulkAppMetricsLiveResponseInfo> _callback) throws ApiException {

        okhttp3.Call localVarCall = appleBulkAppMetricsLiveValidateBeforeCall(dataforseoLabsAppleBulkAppMetricsLiveRequestInfo, _callback);
        Type localVarReturnType = new TypeToken<DataforseoLabsAppleBulkAppMetricsLiveResponseInfo>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for appleKeywordsForAppLive
     * @param dataforseoLabsAppleKeywordsForAppLiveRequestInfo  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call appleKeywordsForAppLiveCall(List<DataforseoLabsAppleKeywordsForAppLiveRequestInfo> dataforseoLabsAppleKeywordsForAppLiveRequestInfo, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = dataforseoLabsAppleKeywordsForAppLiveRequestInfo;

        // create path and map variables
        String localVarPath = "/v3/dataforseo_labs/apple/keywords_for_app/live";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "basicAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call appleKeywordsForAppLiveValidateBeforeCall(List<DataforseoLabsAppleKeywordsForAppLiveRequestInfo> dataforseoLabsAppleKeywordsForAppLiveRequestInfo, final ApiCallback _callback) throws ApiException {
        return appleKeywordsForAppLiveCall(dataforseoLabsAppleKeywordsForAppLiveRequestInfo, _callback);

    }

    /**
     * 
     * ‌ This endpoint will provide you with a list of keywords for which the target app ranks on App Store. You will obtain keyword data and discover the app’s ranking position for each returned keyword. for more info please visit &#39;https://docs.dataforseo.com/v3/dataforseo_labs/apple/keywords_for_app/live/?bash&#39;
     * @param dataforseoLabsAppleKeywordsForAppLiveRequestInfo  (optional)
     * @return DataforseoLabsAppleKeywordsForAppLiveResponseInfo
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public DataforseoLabsAppleKeywordsForAppLiveResponseInfo appleKeywordsForAppLive(List<DataforseoLabsAppleKeywordsForAppLiveRequestInfo> dataforseoLabsAppleKeywordsForAppLiveRequestInfo) throws ApiException {
        ApiResponse<DataforseoLabsAppleKeywordsForAppLiveResponseInfo> localVarResp = appleKeywordsForAppLiveWithHttpInfo(dataforseoLabsAppleKeywordsForAppLiveRequestInfo);
        return localVarResp.getData();
    }

    /**
     * 
     * ‌ This endpoint will provide you with a list of keywords for which the target app ranks on App Store. You will obtain keyword data and discover the app’s ranking position for each returned keyword. for more info please visit &#39;https://docs.dataforseo.com/v3/dataforseo_labs/apple/keywords_for_app/live/?bash&#39;
     * @param dataforseoLabsAppleKeywordsForAppLiveRequestInfo  (optional)
     * @return ApiResponse&lt;DataforseoLabsAppleKeywordsForAppLiveResponseInfo&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<DataforseoLabsAppleKeywordsForAppLiveResponseInfo> appleKeywordsForAppLiveWithHttpInfo(List<DataforseoLabsAppleKeywordsForAppLiveRequestInfo> dataforseoLabsAppleKeywordsForAppLiveRequestInfo) throws ApiException {
        okhttp3.Call localVarCall = appleKeywordsForAppLiveValidateBeforeCall(dataforseoLabsAppleKeywordsForAppLiveRequestInfo, null);
        Type localVarReturnType = new TypeToken<DataforseoLabsAppleKeywordsForAppLiveResponseInfo>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * ‌ This endpoint will provide you with a list of keywords for which the target app ranks on App Store. You will obtain keyword data and discover the app’s ranking position for each returned keyword. for more info please visit &#39;https://docs.dataforseo.com/v3/dataforseo_labs/apple/keywords_for_app/live/?bash&#39;
     * @param dataforseoLabsAppleKeywordsForAppLiveRequestInfo  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call appleKeywordsForAppLiveAsync(List<DataforseoLabsAppleKeywordsForAppLiveRequestInfo> dataforseoLabsAppleKeywordsForAppLiveRequestInfo, final ApiCallback<DataforseoLabsAppleKeywordsForAppLiveResponseInfo> _callback) throws ApiException {

        okhttp3.Call localVarCall = appleKeywordsForAppLiveValidateBeforeCall(dataforseoLabsAppleKeywordsForAppLiveRequestInfo, _callback);
        Type localVarReturnType = new TypeToken<DataforseoLabsAppleKeywordsForAppLiveResponseInfo>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for availableFilters
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call availableFiltersCall(final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/v3/dataforseo_labs/available_filters";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "basicAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call availableFiltersValidateBeforeCall(final ApiCallback _callback) throws ApiException {
        return availableFiltersCall(_callback);

    }

    /**
     * 
     * ‌‌ Here you will find all the necessary information about filters that can be used with DataForSEO Labs API endpoints. for more info please visit &#39;https://docs.dataforseo.com/v3/dataforseo_labs/filters/?bash&#39;
     * @return DataforseoLabsAvailableFiltersResponseInfo
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public DataforseoLabsAvailableFiltersResponseInfo availableFilters() throws ApiException {
        ApiResponse<DataforseoLabsAvailableFiltersResponseInfo> localVarResp = availableFiltersWithHttpInfo();
        return localVarResp.getData();
    }

    /**
     * 
     * ‌‌ Here you will find all the necessary information about filters that can be used with DataForSEO Labs API endpoints. for more info please visit &#39;https://docs.dataforseo.com/v3/dataforseo_labs/filters/?bash&#39;
     * @return ApiResponse&lt;DataforseoLabsAvailableFiltersResponseInfo&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<DataforseoLabsAvailableFiltersResponseInfo> availableFiltersWithHttpInfo() throws ApiException {
        okhttp3.Call localVarCall = availableFiltersValidateBeforeCall(null);
        Type localVarReturnType = new TypeToken<DataforseoLabsAvailableFiltersResponseInfo>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * ‌‌ Here you will find all the necessary information about filters that can be used with DataForSEO Labs API endpoints. for more info please visit &#39;https://docs.dataforseo.com/v3/dataforseo_labs/filters/?bash&#39;
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call availableFiltersAsync(final ApiCallback<DataforseoLabsAvailableFiltersResponseInfo> _callback) throws ApiException {

        okhttp3.Call localVarCall = availableFiltersValidateBeforeCall(_callback);
        Type localVarReturnType = new TypeToken<DataforseoLabsAvailableFiltersResponseInfo>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for bingBulkKeywordDifficultyLive
     * @param dataforseoLabsBingBulkKeywordDifficultyLiveRequestInfo  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call bingBulkKeywordDifficultyLiveCall(List<DataforseoLabsBingBulkKeywordDifficultyLiveRequestInfo> dataforseoLabsBingBulkKeywordDifficultyLiveRequestInfo, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = dataforseoLabsBingBulkKeywordDifficultyLiveRequestInfo;

        // create path and map variables
        String localVarPath = "/v3/dataforseo_labs/bing/bulk_keyword_difficulty/live";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "basicAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call bingBulkKeywordDifficultyLiveValidateBeforeCall(List<DataforseoLabsBingBulkKeywordDifficultyLiveRequestInfo> dataforseoLabsBingBulkKeywordDifficultyLiveRequestInfo, final ApiCallback _callback) throws ApiException {
        return bingBulkKeywordDifficultyLiveCall(dataforseoLabsBingBulkKeywordDifficultyLiveRequestInfo, _callback);

    }

    /**
     * 
     * ‌ This endpoint will provide you with the Keyword Difficulty metric for a maximum of 1,000 keywords in one API request. Keyword Difficulty stands for the relative difficulty of ranking in the first top-10 organic results for the related keyword. Keyword Difficulty in DataForSEO API responses indicates the chance of getting in top-10 organic results for a keyword on a logarithmic scale from 0 to 100. for more info please visit &#39;https://docs.dataforseo.com/v3/dataforseo_labs/bing/bulk_keyword_difficulty/live/?bash&#39;
     * @param dataforseoLabsBingBulkKeywordDifficultyLiveRequestInfo  (optional)
     * @return DataforseoLabsBingBulkKeywordDifficultyLiveResponseInfo
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public DataforseoLabsBingBulkKeywordDifficultyLiveResponseInfo bingBulkKeywordDifficultyLive(List<DataforseoLabsBingBulkKeywordDifficultyLiveRequestInfo> dataforseoLabsBingBulkKeywordDifficultyLiveRequestInfo) throws ApiException {
        ApiResponse<DataforseoLabsBingBulkKeywordDifficultyLiveResponseInfo> localVarResp = bingBulkKeywordDifficultyLiveWithHttpInfo(dataforseoLabsBingBulkKeywordDifficultyLiveRequestInfo);
        return localVarResp.getData();
    }

    /**
     * 
     * ‌ This endpoint will provide you with the Keyword Difficulty metric for a maximum of 1,000 keywords in one API request. Keyword Difficulty stands for the relative difficulty of ranking in the first top-10 organic results for the related keyword. Keyword Difficulty in DataForSEO API responses indicates the chance of getting in top-10 organic results for a keyword on a logarithmic scale from 0 to 100. for more info please visit &#39;https://docs.dataforseo.com/v3/dataforseo_labs/bing/bulk_keyword_difficulty/live/?bash&#39;
     * @param dataforseoLabsBingBulkKeywordDifficultyLiveRequestInfo  (optional)
     * @return ApiResponse&lt;DataforseoLabsBingBulkKeywordDifficultyLiveResponseInfo&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<DataforseoLabsBingBulkKeywordDifficultyLiveResponseInfo> bingBulkKeywordDifficultyLiveWithHttpInfo(List<DataforseoLabsBingBulkKeywordDifficultyLiveRequestInfo> dataforseoLabsBingBulkKeywordDifficultyLiveRequestInfo) throws ApiException {
        okhttp3.Call localVarCall = bingBulkKeywordDifficultyLiveValidateBeforeCall(dataforseoLabsBingBulkKeywordDifficultyLiveRequestInfo, null);
        Type localVarReturnType = new TypeToken<DataforseoLabsBingBulkKeywordDifficultyLiveResponseInfo>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * ‌ This endpoint will provide you with the Keyword Difficulty metric for a maximum of 1,000 keywords in one API request. Keyword Difficulty stands for the relative difficulty of ranking in the first top-10 organic results for the related keyword. Keyword Difficulty in DataForSEO API responses indicates the chance of getting in top-10 organic results for a keyword on a logarithmic scale from 0 to 100. for more info please visit &#39;https://docs.dataforseo.com/v3/dataforseo_labs/bing/bulk_keyword_difficulty/live/?bash&#39;
     * @param dataforseoLabsBingBulkKeywordDifficultyLiveRequestInfo  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call bingBulkKeywordDifficultyLiveAsync(List<DataforseoLabsBingBulkKeywordDifficultyLiveRequestInfo> dataforseoLabsBingBulkKeywordDifficultyLiveRequestInfo, final ApiCallback<DataforseoLabsBingBulkKeywordDifficultyLiveResponseInfo> _callback) throws ApiException {

        okhttp3.Call localVarCall = bingBulkKeywordDifficultyLiveValidateBeforeCall(dataforseoLabsBingBulkKeywordDifficultyLiveRequestInfo, _callback);
        Type localVarReturnType = new TypeToken<DataforseoLabsBingBulkKeywordDifficultyLiveResponseInfo>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for bingBulkTrafficEstimationLive
     * @param dataforseoLabsBingBulkTrafficEstimationLiveRequestInfo  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call bingBulkTrafficEstimationLiveCall(List<DataforseoLabsBingBulkTrafficEstimationLiveRequestInfo> dataforseoLabsBingBulkTrafficEstimationLiveRequestInfo, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = dataforseoLabsBingBulkTrafficEstimationLiveRequestInfo;

        // create path and map variables
        String localVarPath = "/v3/dataforseo_labs/bing/bulk_traffic_estimation/live";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "basicAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call bingBulkTrafficEstimationLiveValidateBeforeCall(List<DataforseoLabsBingBulkTrafficEstimationLiveRequestInfo> dataforseoLabsBingBulkTrafficEstimationLiveRequestInfo, final ApiCallback _callback) throws ApiException {
        return bingBulkTrafficEstimationLiveCall(dataforseoLabsBingBulkTrafficEstimationLiveRequestInfo, _callback);

    }

    /**
     * 
     * ‌ This endpoint will provide you with estimated monthly traffic volumes for up to 1,000 domains. Along with organic search traffic estimations, you will also get separate values for paid search, featured snippet, and local pack results. for more info please visit &#39;https://docs.dataforseo.com/v3/dataforseo_labs/bing/bulk_traffic_estimation/live/?bash&#39;
     * @param dataforseoLabsBingBulkTrafficEstimationLiveRequestInfo  (optional)
     * @return DataforseoLabsBingBulkTrafficEstimationLiveResponseInfo
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public DataforseoLabsBingBulkTrafficEstimationLiveResponseInfo bingBulkTrafficEstimationLive(List<DataforseoLabsBingBulkTrafficEstimationLiveRequestInfo> dataforseoLabsBingBulkTrafficEstimationLiveRequestInfo) throws ApiException {
        ApiResponse<DataforseoLabsBingBulkTrafficEstimationLiveResponseInfo> localVarResp = bingBulkTrafficEstimationLiveWithHttpInfo(dataforseoLabsBingBulkTrafficEstimationLiveRequestInfo);
        return localVarResp.getData();
    }

    /**
     * 
     * ‌ This endpoint will provide you with estimated monthly traffic volumes for up to 1,000 domains. Along with organic search traffic estimations, you will also get separate values for paid search, featured snippet, and local pack results. for more info please visit &#39;https://docs.dataforseo.com/v3/dataforseo_labs/bing/bulk_traffic_estimation/live/?bash&#39;
     * @param dataforseoLabsBingBulkTrafficEstimationLiveRequestInfo  (optional)
     * @return ApiResponse&lt;DataforseoLabsBingBulkTrafficEstimationLiveResponseInfo&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<DataforseoLabsBingBulkTrafficEstimationLiveResponseInfo> bingBulkTrafficEstimationLiveWithHttpInfo(List<DataforseoLabsBingBulkTrafficEstimationLiveRequestInfo> dataforseoLabsBingBulkTrafficEstimationLiveRequestInfo) throws ApiException {
        okhttp3.Call localVarCall = bingBulkTrafficEstimationLiveValidateBeforeCall(dataforseoLabsBingBulkTrafficEstimationLiveRequestInfo, null);
        Type localVarReturnType = new TypeToken<DataforseoLabsBingBulkTrafficEstimationLiveResponseInfo>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * ‌ This endpoint will provide you with estimated monthly traffic volumes for up to 1,000 domains. Along with organic search traffic estimations, you will also get separate values for paid search, featured snippet, and local pack results. for more info please visit &#39;https://docs.dataforseo.com/v3/dataforseo_labs/bing/bulk_traffic_estimation/live/?bash&#39;
     * @param dataforseoLabsBingBulkTrafficEstimationLiveRequestInfo  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call bingBulkTrafficEstimationLiveAsync(List<DataforseoLabsBingBulkTrafficEstimationLiveRequestInfo> dataforseoLabsBingBulkTrafficEstimationLiveRequestInfo, final ApiCallback<DataforseoLabsBingBulkTrafficEstimationLiveResponseInfo> _callback) throws ApiException {

        okhttp3.Call localVarCall = bingBulkTrafficEstimationLiveValidateBeforeCall(dataforseoLabsBingBulkTrafficEstimationLiveRequestInfo, _callback);
        Type localVarReturnType = new TypeToken<DataforseoLabsBingBulkTrafficEstimationLiveResponseInfo>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for bingCompetitorsDomainLive
     * @param dataforseoLabsBingCompetitorsDomainLiveRequestInfo  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call bingCompetitorsDomainLiveCall(List<DataforseoLabsBingCompetitorsDomainLiveRequestInfo> dataforseoLabsBingCompetitorsDomainLiveRequestInfo, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = dataforseoLabsBingCompetitorsDomainLiveRequestInfo;

        // create path and map variables
        String localVarPath = "/v3/dataforseo_labs/bing/competitors_domain/live";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "basicAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call bingCompetitorsDomainLiveValidateBeforeCall(List<DataforseoLabsBingCompetitorsDomainLiveRequestInfo> dataforseoLabsBingCompetitorsDomainLiveRequestInfo, final ApiCallback _callback) throws ApiException {
        return bingCompetitorsDomainLiveCall(dataforseoLabsBingCompetitorsDomainLiveRequestInfo, _callback);

    }

    /**
     * 
     * ‌ This endpoint will provide you with a full overview of ranking and traffic data of the competitor domains from organic and paid search. In addition to that, you will get the metrics specific to the keywords both competitor domains and your domain rank for within the same SERP. for more info please visit &#39;https://docs.dataforseo.com/v3/dataforseo_labs/bing/competitors_domain/live/?bash&#39;
     * @param dataforseoLabsBingCompetitorsDomainLiveRequestInfo  (optional)
     * @return DataforseoLabsBingCompetitorsDomainLiveResponseInfo
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public DataforseoLabsBingCompetitorsDomainLiveResponseInfo bingCompetitorsDomainLive(List<DataforseoLabsBingCompetitorsDomainLiveRequestInfo> dataforseoLabsBingCompetitorsDomainLiveRequestInfo) throws ApiException {
        ApiResponse<DataforseoLabsBingCompetitorsDomainLiveResponseInfo> localVarResp = bingCompetitorsDomainLiveWithHttpInfo(dataforseoLabsBingCompetitorsDomainLiveRequestInfo);
        return localVarResp.getData();
    }

    /**
     * 
     * ‌ This endpoint will provide you with a full overview of ranking and traffic data of the competitor domains from organic and paid search. In addition to that, you will get the metrics specific to the keywords both competitor domains and your domain rank for within the same SERP. for more info please visit &#39;https://docs.dataforseo.com/v3/dataforseo_labs/bing/competitors_domain/live/?bash&#39;
     * @param dataforseoLabsBingCompetitorsDomainLiveRequestInfo  (optional)
     * @return ApiResponse&lt;DataforseoLabsBingCompetitorsDomainLiveResponseInfo&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<DataforseoLabsBingCompetitorsDomainLiveResponseInfo> bingCompetitorsDomainLiveWithHttpInfo(List<DataforseoLabsBingCompetitorsDomainLiveRequestInfo> dataforseoLabsBingCompetitorsDomainLiveRequestInfo) throws ApiException {
        okhttp3.Call localVarCall = bingCompetitorsDomainLiveValidateBeforeCall(dataforseoLabsBingCompetitorsDomainLiveRequestInfo, null);
        Type localVarReturnType = new TypeToken<DataforseoLabsBingCompetitorsDomainLiveResponseInfo>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * ‌ This endpoint will provide you with a full overview of ranking and traffic data of the competitor domains from organic and paid search. In addition to that, you will get the metrics specific to the keywords both competitor domains and your domain rank for within the same SERP. for more info please visit &#39;https://docs.dataforseo.com/v3/dataforseo_labs/bing/competitors_domain/live/?bash&#39;
     * @param dataforseoLabsBingCompetitorsDomainLiveRequestInfo  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call bingCompetitorsDomainLiveAsync(List<DataforseoLabsBingCompetitorsDomainLiveRequestInfo> dataforseoLabsBingCompetitorsDomainLiveRequestInfo, final ApiCallback<DataforseoLabsBingCompetitorsDomainLiveResponseInfo> _callback) throws ApiException {

        okhttp3.Call localVarCall = bingCompetitorsDomainLiveValidateBeforeCall(dataforseoLabsBingCompetitorsDomainLiveRequestInfo, _callback);
        Type localVarReturnType = new TypeToken<DataforseoLabsBingCompetitorsDomainLiveResponseInfo>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for bingDomainIntersectionLive
     * @param dataforseoLabsBingDomainIntersectionLiveRequestInfo  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call bingDomainIntersectionLiveCall(List<DataforseoLabsBingDomainIntersectionLiveRequestInfo> dataforseoLabsBingDomainIntersectionLiveRequestInfo, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = dataforseoLabsBingDomainIntersectionLiveRequestInfo;

        // create path and map variables
        String localVarPath = "/v3/dataforseo_labs/bing/domain_intersection/live";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "basicAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call bingDomainIntersectionLiveValidateBeforeCall(List<DataforseoLabsBingDomainIntersectionLiveRequestInfo> dataforseoLabsBingDomainIntersectionLiveRequestInfo, final ApiCallback _callback) throws ApiException {
        return bingDomainIntersectionLiveCall(dataforseoLabsBingDomainIntersectionLiveRequestInfo, _callback);

    }

    /**
     * 
     * ‌ This endpoint will provide you with the keywords for which both specified domains rank within the same SERP. You will get data on each intersecting keyword. Along with that, you will get data on the first and second domain’s SERP element discovered for this keyword, as well as the estimated traffic volume and cost of ad traffic. Domain Intersection endpoint supports organic, paid, local pack, and featured snippet results. for more info please visit &#39;https://docs.dataforseo.com/v3/dataforseo_labs/bing/domain_intersection/live/?bash&#39;
     * @param dataforseoLabsBingDomainIntersectionLiveRequestInfo  (optional)
     * @return DataforseoLabsBingDomainIntersectionLiveResponseInfo
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public DataforseoLabsBingDomainIntersectionLiveResponseInfo bingDomainIntersectionLive(List<DataforseoLabsBingDomainIntersectionLiveRequestInfo> dataforseoLabsBingDomainIntersectionLiveRequestInfo) throws ApiException {
        ApiResponse<DataforseoLabsBingDomainIntersectionLiveResponseInfo> localVarResp = bingDomainIntersectionLiveWithHttpInfo(dataforseoLabsBingDomainIntersectionLiveRequestInfo);
        return localVarResp.getData();
    }

    /**
     * 
     * ‌ This endpoint will provide you with the keywords for which both specified domains rank within the same SERP. You will get data on each intersecting keyword. Along with that, you will get data on the first and second domain’s SERP element discovered for this keyword, as well as the estimated traffic volume and cost of ad traffic. Domain Intersection endpoint supports organic, paid, local pack, and featured snippet results. for more info please visit &#39;https://docs.dataforseo.com/v3/dataforseo_labs/bing/domain_intersection/live/?bash&#39;
     * @param dataforseoLabsBingDomainIntersectionLiveRequestInfo  (optional)
     * @return ApiResponse&lt;DataforseoLabsBingDomainIntersectionLiveResponseInfo&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<DataforseoLabsBingDomainIntersectionLiveResponseInfo> bingDomainIntersectionLiveWithHttpInfo(List<DataforseoLabsBingDomainIntersectionLiveRequestInfo> dataforseoLabsBingDomainIntersectionLiveRequestInfo) throws ApiException {
        okhttp3.Call localVarCall = bingDomainIntersectionLiveValidateBeforeCall(dataforseoLabsBingDomainIntersectionLiveRequestInfo, null);
        Type localVarReturnType = new TypeToken<DataforseoLabsBingDomainIntersectionLiveResponseInfo>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * ‌ This endpoint will provide you with the keywords for which both specified domains rank within the same SERP. You will get data on each intersecting keyword. Along with that, you will get data on the first and second domain’s SERP element discovered for this keyword, as well as the estimated traffic volume and cost of ad traffic. Domain Intersection endpoint supports organic, paid, local pack, and featured snippet results. for more info please visit &#39;https://docs.dataforseo.com/v3/dataforseo_labs/bing/domain_intersection/live/?bash&#39;
     * @param dataforseoLabsBingDomainIntersectionLiveRequestInfo  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call bingDomainIntersectionLiveAsync(List<DataforseoLabsBingDomainIntersectionLiveRequestInfo> dataforseoLabsBingDomainIntersectionLiveRequestInfo, final ApiCallback<DataforseoLabsBingDomainIntersectionLiveResponseInfo> _callback) throws ApiException {

        okhttp3.Call localVarCall = bingDomainIntersectionLiveValidateBeforeCall(dataforseoLabsBingDomainIntersectionLiveRequestInfo, _callback);
        Type localVarReturnType = new TypeToken<DataforseoLabsBingDomainIntersectionLiveResponseInfo>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for bingDomainRankOverviewLive
     * @param dataforseoLabsBingDomainRankOverviewLiveRequestInfo  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call bingDomainRankOverviewLiveCall(List<DataforseoLabsBingDomainRankOverviewLiveRequestInfo> dataforseoLabsBingDomainRankOverviewLiveRequestInfo, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = dataforseoLabsBingDomainRankOverviewLiveRequestInfo;

        // create path and map variables
        String localVarPath = "/v3/dataforseo_labs/bing/domain_rank_overview/live";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "basicAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call bingDomainRankOverviewLiveValidateBeforeCall(List<DataforseoLabsBingDomainRankOverviewLiveRequestInfo> dataforseoLabsBingDomainRankOverviewLiveRequestInfo, final ApiCallback _callback) throws ApiException {
        return bingDomainRankOverviewLiveCall(dataforseoLabsBingDomainRankOverviewLiveRequestInfo, _callback);

    }

    /**
     * 
     * ‌ This endpoint will provide you with ranking and traffic data from Bing’s organic and paid search for the specified domain. You will be able to review the domain ranking distribution in SERPs as well as estimated monthly traffic volume for both organic and paid results. for more info please visit &#39;https://docs.dataforseo.com/v3/dataforseo_labs/bing/domain_rank_overview/live/?bash&#39;
     * @param dataforseoLabsBingDomainRankOverviewLiveRequestInfo  (optional)
     * @return DataforseoLabsBingDomainRankOverviewLiveResponseInfo
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public DataforseoLabsBingDomainRankOverviewLiveResponseInfo bingDomainRankOverviewLive(List<DataforseoLabsBingDomainRankOverviewLiveRequestInfo> dataforseoLabsBingDomainRankOverviewLiveRequestInfo) throws ApiException {
        ApiResponse<DataforseoLabsBingDomainRankOverviewLiveResponseInfo> localVarResp = bingDomainRankOverviewLiveWithHttpInfo(dataforseoLabsBingDomainRankOverviewLiveRequestInfo);
        return localVarResp.getData();
    }

    /**
     * 
     * ‌ This endpoint will provide you with ranking and traffic data from Bing’s organic and paid search for the specified domain. You will be able to review the domain ranking distribution in SERPs as well as estimated monthly traffic volume for both organic and paid results. for more info please visit &#39;https://docs.dataforseo.com/v3/dataforseo_labs/bing/domain_rank_overview/live/?bash&#39;
     * @param dataforseoLabsBingDomainRankOverviewLiveRequestInfo  (optional)
     * @return ApiResponse&lt;DataforseoLabsBingDomainRankOverviewLiveResponseInfo&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<DataforseoLabsBingDomainRankOverviewLiveResponseInfo> bingDomainRankOverviewLiveWithHttpInfo(List<DataforseoLabsBingDomainRankOverviewLiveRequestInfo> dataforseoLabsBingDomainRankOverviewLiveRequestInfo) throws ApiException {
        okhttp3.Call localVarCall = bingDomainRankOverviewLiveValidateBeforeCall(dataforseoLabsBingDomainRankOverviewLiveRequestInfo, null);
        Type localVarReturnType = new TypeToken<DataforseoLabsBingDomainRankOverviewLiveResponseInfo>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * ‌ This endpoint will provide you with ranking and traffic data from Bing’s organic and paid search for the specified domain. You will be able to review the domain ranking distribution in SERPs as well as estimated monthly traffic volume for both organic and paid results. for more info please visit &#39;https://docs.dataforseo.com/v3/dataforseo_labs/bing/domain_rank_overview/live/?bash&#39;
     * @param dataforseoLabsBingDomainRankOverviewLiveRequestInfo  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call bingDomainRankOverviewLiveAsync(List<DataforseoLabsBingDomainRankOverviewLiveRequestInfo> dataforseoLabsBingDomainRankOverviewLiveRequestInfo, final ApiCallback<DataforseoLabsBingDomainRankOverviewLiveResponseInfo> _callback) throws ApiException {

        okhttp3.Call localVarCall = bingDomainRankOverviewLiveValidateBeforeCall(dataforseoLabsBingDomainRankOverviewLiveRequestInfo, _callback);
        Type localVarReturnType = new TypeToken<DataforseoLabsBingDomainRankOverviewLiveResponseInfo>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for bingPageIntersectionLive
     * @param dataforseoLabsBingPageIntersectionLiveRequestInfo  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call bingPageIntersectionLiveCall(List<DataforseoLabsBingPageIntersectionLiveRequestInfo> dataforseoLabsBingPageIntersectionLiveRequestInfo, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = dataforseoLabsBingPageIntersectionLiveRequestInfo;

        // create path and map variables
        String localVarPath = "/v3/dataforseo_labs/bing/page_intersection/live";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "basicAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call bingPageIntersectionLiveValidateBeforeCall(List<DataforseoLabsBingPageIntersectionLiveRequestInfo> dataforseoLabsBingPageIntersectionLiveRequestInfo, final ApiCallback _callback) throws ApiException {
        return bingPageIntersectionLiveCall(dataforseoLabsBingPageIntersectionLiveRequestInfo, _callback);

    }

    /**
     * 
     * ‌ This endpoint will provide you with the keywords for which specified pages rank within the same Bing SERP. for more info please visit &#39;https://docs.dataforseo.com/v3/dataforseo_labs/bing/page_intersection/live/?bash&#39;
     * @param dataforseoLabsBingPageIntersectionLiveRequestInfo  (optional)
     * @return DataforseoLabsBingPageIntersectionLiveResponseInfo
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public DataforseoLabsBingPageIntersectionLiveResponseInfo bingPageIntersectionLive(List<DataforseoLabsBingPageIntersectionLiveRequestInfo> dataforseoLabsBingPageIntersectionLiveRequestInfo) throws ApiException {
        ApiResponse<DataforseoLabsBingPageIntersectionLiveResponseInfo> localVarResp = bingPageIntersectionLiveWithHttpInfo(dataforseoLabsBingPageIntersectionLiveRequestInfo);
        return localVarResp.getData();
    }

    /**
     * 
     * ‌ This endpoint will provide you with the keywords for which specified pages rank within the same Bing SERP. for more info please visit &#39;https://docs.dataforseo.com/v3/dataforseo_labs/bing/page_intersection/live/?bash&#39;
     * @param dataforseoLabsBingPageIntersectionLiveRequestInfo  (optional)
     * @return ApiResponse&lt;DataforseoLabsBingPageIntersectionLiveResponseInfo&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<DataforseoLabsBingPageIntersectionLiveResponseInfo> bingPageIntersectionLiveWithHttpInfo(List<DataforseoLabsBingPageIntersectionLiveRequestInfo> dataforseoLabsBingPageIntersectionLiveRequestInfo) throws ApiException {
        okhttp3.Call localVarCall = bingPageIntersectionLiveValidateBeforeCall(dataforseoLabsBingPageIntersectionLiveRequestInfo, null);
        Type localVarReturnType = new TypeToken<DataforseoLabsBingPageIntersectionLiveResponseInfo>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * ‌ This endpoint will provide you with the keywords for which specified pages rank within the same Bing SERP. for more info please visit &#39;https://docs.dataforseo.com/v3/dataforseo_labs/bing/page_intersection/live/?bash&#39;
     * @param dataforseoLabsBingPageIntersectionLiveRequestInfo  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call bingPageIntersectionLiveAsync(List<DataforseoLabsBingPageIntersectionLiveRequestInfo> dataforseoLabsBingPageIntersectionLiveRequestInfo, final ApiCallback<DataforseoLabsBingPageIntersectionLiveResponseInfo> _callback) throws ApiException {

        okhttp3.Call localVarCall = bingPageIntersectionLiveValidateBeforeCall(dataforseoLabsBingPageIntersectionLiveRequestInfo, _callback);
        Type localVarReturnType = new TypeToken<DataforseoLabsBingPageIntersectionLiveResponseInfo>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for bingRankedKeywordsLive
     * @param dataforseoLabsBingRankedKeywordsLiveRequestInfo  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call bingRankedKeywordsLiveCall(List<DataforseoLabsBingRankedKeywordsLiveRequestInfo> dataforseoLabsBingRankedKeywordsLiveRequestInfo, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = dataforseoLabsBingRankedKeywordsLiveRequestInfo;

        // create path and map variables
        String localVarPath = "/v3/dataforseo_labs/bing/ranked_keywords/live";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "basicAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call bingRankedKeywordsLiveValidateBeforeCall(List<DataforseoLabsBingRankedKeywordsLiveRequestInfo> dataforseoLabsBingRankedKeywordsLiveRequestInfo, final ApiCallback _callback) throws ApiException {
        return bingRankedKeywordsLiveCall(dataforseoLabsBingRankedKeywordsLiveRequestInfo, _callback);

    }

    /**
     * 
     * ‌ This endpoint will provide you with the list of keywords that any domain or webpage is ranking for. You will also get SERP elements related to the keyword position, as well as monthly searches and other data relevant to the returned keywords. for more info please visit &#39;https://docs.dataforseo.com/v3/dataforseo_labs/bing/ranked_keywords/live/?bash&#39;
     * @param dataforseoLabsBingRankedKeywordsLiveRequestInfo  (optional)
     * @return DataforseoLabsBingRankedKeywordsLiveResponseInfo
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public DataforseoLabsBingRankedKeywordsLiveResponseInfo bingRankedKeywordsLive(List<DataforseoLabsBingRankedKeywordsLiveRequestInfo> dataforseoLabsBingRankedKeywordsLiveRequestInfo) throws ApiException {
        ApiResponse<DataforseoLabsBingRankedKeywordsLiveResponseInfo> localVarResp = bingRankedKeywordsLiveWithHttpInfo(dataforseoLabsBingRankedKeywordsLiveRequestInfo);
        return localVarResp.getData();
    }

    /**
     * 
     * ‌ This endpoint will provide you with the list of keywords that any domain or webpage is ranking for. You will also get SERP elements related to the keyword position, as well as monthly searches and other data relevant to the returned keywords. for more info please visit &#39;https://docs.dataforseo.com/v3/dataforseo_labs/bing/ranked_keywords/live/?bash&#39;
     * @param dataforseoLabsBingRankedKeywordsLiveRequestInfo  (optional)
     * @return ApiResponse&lt;DataforseoLabsBingRankedKeywordsLiveResponseInfo&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<DataforseoLabsBingRankedKeywordsLiveResponseInfo> bingRankedKeywordsLiveWithHttpInfo(List<DataforseoLabsBingRankedKeywordsLiveRequestInfo> dataforseoLabsBingRankedKeywordsLiveRequestInfo) throws ApiException {
        okhttp3.Call localVarCall = bingRankedKeywordsLiveValidateBeforeCall(dataforseoLabsBingRankedKeywordsLiveRequestInfo, null);
        Type localVarReturnType = new TypeToken<DataforseoLabsBingRankedKeywordsLiveResponseInfo>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * ‌ This endpoint will provide you with the list of keywords that any domain or webpage is ranking for. You will also get SERP elements related to the keyword position, as well as monthly searches and other data relevant to the returned keywords. for more info please visit &#39;https://docs.dataforseo.com/v3/dataforseo_labs/bing/ranked_keywords/live/?bash&#39;
     * @param dataforseoLabsBingRankedKeywordsLiveRequestInfo  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call bingRankedKeywordsLiveAsync(List<DataforseoLabsBingRankedKeywordsLiveRequestInfo> dataforseoLabsBingRankedKeywordsLiveRequestInfo, final ApiCallback<DataforseoLabsBingRankedKeywordsLiveResponseInfo> _callback) throws ApiException {

        okhttp3.Call localVarCall = bingRankedKeywordsLiveValidateBeforeCall(dataforseoLabsBingRankedKeywordsLiveRequestInfo, _callback);
        Type localVarReturnType = new TypeToken<DataforseoLabsBingRankedKeywordsLiveResponseInfo>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for bingRelatedKeywordsLive
     * @param dataforseoLabsBingRelatedKeywordsLiveRequestInfo  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call bingRelatedKeywordsLiveCall(List<DataforseoLabsBingRelatedKeywordsLiveRequestInfo> dataforseoLabsBingRelatedKeywordsLiveRequestInfo, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = dataforseoLabsBingRelatedKeywordsLiveRequestInfo;

        // create path and map variables
        String localVarPath = "/v3/dataforseo_labs/bing/related_keywords/live";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "basicAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call bingRelatedKeywordsLiveValidateBeforeCall(List<DataforseoLabsBingRelatedKeywordsLiveRequestInfo> dataforseoLabsBingRelatedKeywordsLiveRequestInfo, final ApiCallback _callback) throws ApiException {
        return bingRelatedKeywordsLiveCall(dataforseoLabsBingRelatedKeywordsLiveRequestInfo, _callback);

    }

    /**
     * 
     * ‌‌ The Related Keywords endpoint provides keywords appearing in the “searches related to” SERP element. You can get up to 4680 keyword ideas by specifying the search depth. Each related keyword comes with search volume rate for the last month, search volume trend for the previous 12 months, as well as current cost-per-click and competition values. for more info please visit &#39;https://docs.dataforseo.com/v3/dataforseo_labs/bing/related_keywords/live/?bash&#39;
     * @param dataforseoLabsBingRelatedKeywordsLiveRequestInfo  (optional)
     * @return DataforseoLabsBingRelatedKeywordsLiveResponseInfo
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public DataforseoLabsBingRelatedKeywordsLiveResponseInfo bingRelatedKeywordsLive(List<DataforseoLabsBingRelatedKeywordsLiveRequestInfo> dataforseoLabsBingRelatedKeywordsLiveRequestInfo) throws ApiException {
        ApiResponse<DataforseoLabsBingRelatedKeywordsLiveResponseInfo> localVarResp = bingRelatedKeywordsLiveWithHttpInfo(dataforseoLabsBingRelatedKeywordsLiveRequestInfo);
        return localVarResp.getData();
    }

    /**
     * 
     * ‌‌ The Related Keywords endpoint provides keywords appearing in the “searches related to” SERP element. You can get up to 4680 keyword ideas by specifying the search depth. Each related keyword comes with search volume rate for the last month, search volume trend for the previous 12 months, as well as current cost-per-click and competition values. for more info please visit &#39;https://docs.dataforseo.com/v3/dataforseo_labs/bing/related_keywords/live/?bash&#39;
     * @param dataforseoLabsBingRelatedKeywordsLiveRequestInfo  (optional)
     * @return ApiResponse&lt;DataforseoLabsBingRelatedKeywordsLiveResponseInfo&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<DataforseoLabsBingRelatedKeywordsLiveResponseInfo> bingRelatedKeywordsLiveWithHttpInfo(List<DataforseoLabsBingRelatedKeywordsLiveRequestInfo> dataforseoLabsBingRelatedKeywordsLiveRequestInfo) throws ApiException {
        okhttp3.Call localVarCall = bingRelatedKeywordsLiveValidateBeforeCall(dataforseoLabsBingRelatedKeywordsLiveRequestInfo, null);
        Type localVarReturnType = new TypeToken<DataforseoLabsBingRelatedKeywordsLiveResponseInfo>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * ‌‌ The Related Keywords endpoint provides keywords appearing in the “searches related to” SERP element. You can get up to 4680 keyword ideas by specifying the search depth. Each related keyword comes with search volume rate for the last month, search volume trend for the previous 12 months, as well as current cost-per-click and competition values. for more info please visit &#39;https://docs.dataforseo.com/v3/dataforseo_labs/bing/related_keywords/live/?bash&#39;
     * @param dataforseoLabsBingRelatedKeywordsLiveRequestInfo  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call bingRelatedKeywordsLiveAsync(List<DataforseoLabsBingRelatedKeywordsLiveRequestInfo> dataforseoLabsBingRelatedKeywordsLiveRequestInfo, final ApiCallback<DataforseoLabsBingRelatedKeywordsLiveResponseInfo> _callback) throws ApiException {

        okhttp3.Call localVarCall = bingRelatedKeywordsLiveValidateBeforeCall(dataforseoLabsBingRelatedKeywordsLiveRequestInfo, _callback);
        Type localVarReturnType = new TypeToken<DataforseoLabsBingRelatedKeywordsLiveResponseInfo>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for bingRelevantPagesLive
     * @param dataforseoLabsBingRelevantPagesLiveRequestInfo  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call bingRelevantPagesLiveCall(List<DataforseoLabsBingRelevantPagesLiveRequestInfo> dataforseoLabsBingRelevantPagesLiveRequestInfo, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = dataforseoLabsBingRelevantPagesLiveRequestInfo;

        // create path and map variables
        String localVarPath = "/v3/dataforseo_labs/bing/relevant_pages/live";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "basicAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call bingRelevantPagesLiveValidateBeforeCall(List<DataforseoLabsBingRelevantPagesLiveRequestInfo> dataforseoLabsBingRelevantPagesLiveRequestInfo, final ApiCallback _callback) throws ApiException {
        return bingRelevantPagesLiveCall(dataforseoLabsBingRelevantPagesLiveRequestInfo, _callback);

    }

    /**
     * 
     * ‌ for more info please visit &#39;https://docs.dataforseo.com/v3/dataforseo_labs/bing/relevant_pages/live/?bash&#39;
     * @param dataforseoLabsBingRelevantPagesLiveRequestInfo  (optional)
     * @return DataforseoLabsBingRelevantPagesLiveResponseInfo
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public DataforseoLabsBingRelevantPagesLiveResponseInfo bingRelevantPagesLive(List<DataforseoLabsBingRelevantPagesLiveRequestInfo> dataforseoLabsBingRelevantPagesLiveRequestInfo) throws ApiException {
        ApiResponse<DataforseoLabsBingRelevantPagesLiveResponseInfo> localVarResp = bingRelevantPagesLiveWithHttpInfo(dataforseoLabsBingRelevantPagesLiveRequestInfo);
        return localVarResp.getData();
    }

    /**
     * 
     * ‌ for more info please visit &#39;https://docs.dataforseo.com/v3/dataforseo_labs/bing/relevant_pages/live/?bash&#39;
     * @param dataforseoLabsBingRelevantPagesLiveRequestInfo  (optional)
     * @return ApiResponse&lt;DataforseoLabsBingRelevantPagesLiveResponseInfo&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<DataforseoLabsBingRelevantPagesLiveResponseInfo> bingRelevantPagesLiveWithHttpInfo(List<DataforseoLabsBingRelevantPagesLiveRequestInfo> dataforseoLabsBingRelevantPagesLiveRequestInfo) throws ApiException {
        okhttp3.Call localVarCall = bingRelevantPagesLiveValidateBeforeCall(dataforseoLabsBingRelevantPagesLiveRequestInfo, null);
        Type localVarReturnType = new TypeToken<DataforseoLabsBingRelevantPagesLiveResponseInfo>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * ‌ for more info please visit &#39;https://docs.dataforseo.com/v3/dataforseo_labs/bing/relevant_pages/live/?bash&#39;
     * @param dataforseoLabsBingRelevantPagesLiveRequestInfo  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call bingRelevantPagesLiveAsync(List<DataforseoLabsBingRelevantPagesLiveRequestInfo> dataforseoLabsBingRelevantPagesLiveRequestInfo, final ApiCallback<DataforseoLabsBingRelevantPagesLiveResponseInfo> _callback) throws ApiException {

        okhttp3.Call localVarCall = bingRelevantPagesLiveValidateBeforeCall(dataforseoLabsBingRelevantPagesLiveRequestInfo, _callback);
        Type localVarReturnType = new TypeToken<DataforseoLabsBingRelevantPagesLiveResponseInfo>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for bingSerpCompetitorsLive
     * @param dataforseoLabsBingSerpCompetitorsLiveRequestInfo  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call bingSerpCompetitorsLiveCall(List<DataforseoLabsBingSerpCompetitorsLiveRequestInfo> dataforseoLabsBingSerpCompetitorsLiveRequestInfo, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = dataforseoLabsBingSerpCompetitorsLiveRequestInfo;

        // create path and map variables
        String localVarPath = "/v3/dataforseo_labs/bing/serp_competitors/live";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "basicAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call bingSerpCompetitorsLiveValidateBeforeCall(List<DataforseoLabsBingSerpCompetitorsLiveRequestInfo> dataforseoLabsBingSerpCompetitorsLiveRequestInfo, final ApiCallback _callback) throws ApiException {
        return bingSerpCompetitorsLiveCall(dataforseoLabsBingSerpCompetitorsLiveRequestInfo, _callback);

    }

    /**
     * 
     * ‌ This endpoint will provide you with a list of domain rankings for the keywords you specify. You will also get SERP rankings, rating, estimated traffic volume, and visibility values the provided domains gain from the specified keywords. for more info please visit &#39;https://docs.dataforseo.com/v3/dataforseo_labs/bing/serp_competitors/live/?bash&#39;
     * @param dataforseoLabsBingSerpCompetitorsLiveRequestInfo  (optional)
     * @return DataforseoLabsBingSerpCompetitorsLiveResponseInfo
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public DataforseoLabsBingSerpCompetitorsLiveResponseInfo bingSerpCompetitorsLive(List<DataforseoLabsBingSerpCompetitorsLiveRequestInfo> dataforseoLabsBingSerpCompetitorsLiveRequestInfo) throws ApiException {
        ApiResponse<DataforseoLabsBingSerpCompetitorsLiveResponseInfo> localVarResp = bingSerpCompetitorsLiveWithHttpInfo(dataforseoLabsBingSerpCompetitorsLiveRequestInfo);
        return localVarResp.getData();
    }

    /**
     * 
     * ‌ This endpoint will provide you with a list of domain rankings for the keywords you specify. You will also get SERP rankings, rating, estimated traffic volume, and visibility values the provided domains gain from the specified keywords. for more info please visit &#39;https://docs.dataforseo.com/v3/dataforseo_labs/bing/serp_competitors/live/?bash&#39;
     * @param dataforseoLabsBingSerpCompetitorsLiveRequestInfo  (optional)
     * @return ApiResponse&lt;DataforseoLabsBingSerpCompetitorsLiveResponseInfo&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<DataforseoLabsBingSerpCompetitorsLiveResponseInfo> bingSerpCompetitorsLiveWithHttpInfo(List<DataforseoLabsBingSerpCompetitorsLiveRequestInfo> dataforseoLabsBingSerpCompetitorsLiveRequestInfo) throws ApiException {
        okhttp3.Call localVarCall = bingSerpCompetitorsLiveValidateBeforeCall(dataforseoLabsBingSerpCompetitorsLiveRequestInfo, null);
        Type localVarReturnType = new TypeToken<DataforseoLabsBingSerpCompetitorsLiveResponseInfo>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * ‌ This endpoint will provide you with a list of domain rankings for the keywords you specify. You will also get SERP rankings, rating, estimated traffic volume, and visibility values the provided domains gain from the specified keywords. for more info please visit &#39;https://docs.dataforseo.com/v3/dataforseo_labs/bing/serp_competitors/live/?bash&#39;
     * @param dataforseoLabsBingSerpCompetitorsLiveRequestInfo  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call bingSerpCompetitorsLiveAsync(List<DataforseoLabsBingSerpCompetitorsLiveRequestInfo> dataforseoLabsBingSerpCompetitorsLiveRequestInfo, final ApiCallback<DataforseoLabsBingSerpCompetitorsLiveResponseInfo> _callback) throws ApiException {

        okhttp3.Call localVarCall = bingSerpCompetitorsLiveValidateBeforeCall(dataforseoLabsBingSerpCompetitorsLiveRequestInfo, _callback);
        Type localVarReturnType = new TypeToken<DataforseoLabsBingSerpCompetitorsLiveResponseInfo>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for bingSubdomainsLive
     * @param dataforseoLabsBingSubdomainsLiveRequestInfo  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call bingSubdomainsLiveCall(List<DataforseoLabsBingSubdomainsLiveRequestInfo> dataforseoLabsBingSubdomainsLiveRequestInfo, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = dataforseoLabsBingSubdomainsLiveRequestInfo;

        // create path and map variables
        String localVarPath = "/v3/dataforseo_labs/bing/subdomains/live";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "basicAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call bingSubdomainsLiveValidateBeforeCall(List<DataforseoLabsBingSubdomainsLiveRequestInfo> dataforseoLabsBingSubdomainsLiveRequestInfo, final ApiCallback _callback) throws ApiException {
        return bingSubdomainsLiveCall(dataforseoLabsBingSubdomainsLiveRequestInfo, _callback);

    }

    /**
     * 
     * ‌‌ This endpoint will provide you with a list of subdomains of the specified domain, along with the ranking distribution across organic and paid search. In addition to that, you will also get the estimated traffic volume of subdomains based on search volume. for more info please visit &#39;https://docs.dataforseo.com/v3/dataforseo_labs/bing/subdomains/live/?bash&#39;
     * @param dataforseoLabsBingSubdomainsLiveRequestInfo  (optional)
     * @return DataforseoLabsBingSubdomainsLiveResponseInfo
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public DataforseoLabsBingSubdomainsLiveResponseInfo bingSubdomainsLive(List<DataforseoLabsBingSubdomainsLiveRequestInfo> dataforseoLabsBingSubdomainsLiveRequestInfo) throws ApiException {
        ApiResponse<DataforseoLabsBingSubdomainsLiveResponseInfo> localVarResp = bingSubdomainsLiveWithHttpInfo(dataforseoLabsBingSubdomainsLiveRequestInfo);
        return localVarResp.getData();
    }

    /**
     * 
     * ‌‌ This endpoint will provide you with a list of subdomains of the specified domain, along with the ranking distribution across organic and paid search. In addition to that, you will also get the estimated traffic volume of subdomains based on search volume. for more info please visit &#39;https://docs.dataforseo.com/v3/dataforseo_labs/bing/subdomains/live/?bash&#39;
     * @param dataforseoLabsBingSubdomainsLiveRequestInfo  (optional)
     * @return ApiResponse&lt;DataforseoLabsBingSubdomainsLiveResponseInfo&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<DataforseoLabsBingSubdomainsLiveResponseInfo> bingSubdomainsLiveWithHttpInfo(List<DataforseoLabsBingSubdomainsLiveRequestInfo> dataforseoLabsBingSubdomainsLiveRequestInfo) throws ApiException {
        okhttp3.Call localVarCall = bingSubdomainsLiveValidateBeforeCall(dataforseoLabsBingSubdomainsLiveRequestInfo, null);
        Type localVarReturnType = new TypeToken<DataforseoLabsBingSubdomainsLiveResponseInfo>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * ‌‌ This endpoint will provide you with a list of subdomains of the specified domain, along with the ranking distribution across organic and paid search. In addition to that, you will also get the estimated traffic volume of subdomains based on search volume. for more info please visit &#39;https://docs.dataforseo.com/v3/dataforseo_labs/bing/subdomains/live/?bash&#39;
     * @param dataforseoLabsBingSubdomainsLiveRequestInfo  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call bingSubdomainsLiveAsync(List<DataforseoLabsBingSubdomainsLiveRequestInfo> dataforseoLabsBingSubdomainsLiveRequestInfo, final ApiCallback<DataforseoLabsBingSubdomainsLiveResponseInfo> _callback) throws ApiException {

        okhttp3.Call localVarCall = bingSubdomainsLiveValidateBeforeCall(dataforseoLabsBingSubdomainsLiveRequestInfo, _callback);
        Type localVarReturnType = new TypeToken<DataforseoLabsBingSubdomainsLiveResponseInfo>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for categories
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call categoriesCall(final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/v3/dataforseo_labs/categories";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "basicAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call categoriesValidateBeforeCall(final ApiCallback _callback) throws ApiException {
        return categoriesCall(_callback);

    }

    /**
     * 
     * We use Google product and service categories. This endpoint will provide you with the full list of available categories. You can also download the CSV file by this link. for more info please visit &#39;https://docs.dataforseo.com/v3/dataforseo_labs/categories_list/?bash&#39;
     * @return DataforseoLabsCategoriesResponseInfo
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public DataforseoLabsCategoriesResponseInfo categories() throws ApiException {
        ApiResponse<DataforseoLabsCategoriesResponseInfo> localVarResp = categoriesWithHttpInfo();
        return localVarResp.getData();
    }

    /**
     * 
     * We use Google product and service categories. This endpoint will provide you with the full list of available categories. You can also download the CSV file by this link. for more info please visit &#39;https://docs.dataforseo.com/v3/dataforseo_labs/categories_list/?bash&#39;
     * @return ApiResponse&lt;DataforseoLabsCategoriesResponseInfo&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<DataforseoLabsCategoriesResponseInfo> categoriesWithHttpInfo() throws ApiException {
        okhttp3.Call localVarCall = categoriesValidateBeforeCall(null);
        Type localVarReturnType = new TypeToken<DataforseoLabsCategoriesResponseInfo>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * We use Google product and service categories. This endpoint will provide you with the full list of available categories. You can also download the CSV file by this link. for more info please visit &#39;https://docs.dataforseo.com/v3/dataforseo_labs/categories_list/?bash&#39;
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call categoriesAsync(final ApiCallback<DataforseoLabsCategoriesResponseInfo> _callback) throws ApiException {

        okhttp3.Call localVarCall = categoriesValidateBeforeCall(_callback);
        Type localVarReturnType = new TypeToken<DataforseoLabsCategoriesResponseInfo>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for dataforseoLabsErrors
     * @param dataforseoLabsErrorsRequestInfo  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dataforseoLabsErrorsCall(List<DataforseoLabsErrorsRequestInfo> dataforseoLabsErrorsRequestInfo, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = dataforseoLabsErrorsRequestInfo;

        // create path and map variables
        String localVarPath = "/v3/dataforseo_labs/errors";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "basicAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call dataforseoLabsErrorsValidateBeforeCall(List<DataforseoLabsErrorsRequestInfo> dataforseoLabsErrorsRequestInfo, final ApiCallback _callback) throws ApiException {
        return dataforseoLabsErrorsCall(dataforseoLabsErrorsRequestInfo, _callback);

    }

    /**
     * 
     * By calling this endpoint you will receive information about the DataForSEO Labs API tasks that returned an error within the past 24 hours. for more info please visit &#39;https://docs.dataforseo.com/v3/dataforseo_labs/errors/?bash&#39;
     * @param dataforseoLabsErrorsRequestInfo  (optional)
     * @return DataforseoLabsErrorsResponseInfo
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public DataforseoLabsErrorsResponseInfo dataforseoLabsErrors(List<DataforseoLabsErrorsRequestInfo> dataforseoLabsErrorsRequestInfo) throws ApiException {
        ApiResponse<DataforseoLabsErrorsResponseInfo> localVarResp = dataforseoLabsErrorsWithHttpInfo(dataforseoLabsErrorsRequestInfo);
        return localVarResp.getData();
    }

    /**
     * 
     * By calling this endpoint you will receive information about the DataForSEO Labs API tasks that returned an error within the past 24 hours. for more info please visit &#39;https://docs.dataforseo.com/v3/dataforseo_labs/errors/?bash&#39;
     * @param dataforseoLabsErrorsRequestInfo  (optional)
     * @return ApiResponse&lt;DataforseoLabsErrorsResponseInfo&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<DataforseoLabsErrorsResponseInfo> dataforseoLabsErrorsWithHttpInfo(List<DataforseoLabsErrorsRequestInfo> dataforseoLabsErrorsRequestInfo) throws ApiException {
        okhttp3.Call localVarCall = dataforseoLabsErrorsValidateBeforeCall(dataforseoLabsErrorsRequestInfo, null);
        Type localVarReturnType = new TypeToken<DataforseoLabsErrorsResponseInfo>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * By calling this endpoint you will receive information about the DataForSEO Labs API tasks that returned an error within the past 24 hours. for more info please visit &#39;https://docs.dataforseo.com/v3/dataforseo_labs/errors/?bash&#39;
     * @param dataforseoLabsErrorsRequestInfo  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dataforseoLabsErrorsAsync(List<DataforseoLabsErrorsRequestInfo> dataforseoLabsErrorsRequestInfo, final ApiCallback<DataforseoLabsErrorsResponseInfo> _callback) throws ApiException {

        okhttp3.Call localVarCall = dataforseoLabsErrorsValidateBeforeCall(dataforseoLabsErrorsRequestInfo, _callback);
        Type localVarReturnType = new TypeToken<DataforseoLabsErrorsResponseInfo>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for dataforseoLabsGoogleCategoriesForKeywordsLanguages
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dataforseoLabsGoogleCategoriesForKeywordsLanguagesCall(final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/v3/dataforseo_labs/google/categories_for_keywords/languages";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "basicAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call dataforseoLabsGoogleCategoriesForKeywordsLanguagesValidateBeforeCall(final ApiCallback _callback) throws ApiException {
        return dataforseoLabsGoogleCategoriesForKeywordsLanguagesCall(_callback);

    }

    /**
     * 
     * ‌ Using this endpoint you can get the full list of languages supported for the Google Categories for Keywords endpoint of DataForSEO Labs API. for more info please visit &#39;https://docs.dataforseo.com/v3/dataforseo_labs/google/categories_for_keywords/languages/?bash&#39;
     * @return DataforseoLabsGoogleCategoriesForKeywordsLanguagesResponseInfo
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public DataforseoLabsGoogleCategoriesForKeywordsLanguagesResponseInfo dataforseoLabsGoogleCategoriesForKeywordsLanguages() throws ApiException {
        ApiResponse<DataforseoLabsGoogleCategoriesForKeywordsLanguagesResponseInfo> localVarResp = dataforseoLabsGoogleCategoriesForKeywordsLanguagesWithHttpInfo();
        return localVarResp.getData();
    }

    /**
     * 
     * ‌ Using this endpoint you can get the full list of languages supported for the Google Categories for Keywords endpoint of DataForSEO Labs API. for more info please visit &#39;https://docs.dataforseo.com/v3/dataforseo_labs/google/categories_for_keywords/languages/?bash&#39;
     * @return ApiResponse&lt;DataforseoLabsGoogleCategoriesForKeywordsLanguagesResponseInfo&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<DataforseoLabsGoogleCategoriesForKeywordsLanguagesResponseInfo> dataforseoLabsGoogleCategoriesForKeywordsLanguagesWithHttpInfo() throws ApiException {
        okhttp3.Call localVarCall = dataforseoLabsGoogleCategoriesForKeywordsLanguagesValidateBeforeCall(null);
        Type localVarReturnType = new TypeToken<DataforseoLabsGoogleCategoriesForKeywordsLanguagesResponseInfo>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * ‌ Using this endpoint you can get the full list of languages supported for the Google Categories for Keywords endpoint of DataForSEO Labs API. for more info please visit &#39;https://docs.dataforseo.com/v3/dataforseo_labs/google/categories_for_keywords/languages/?bash&#39;
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dataforseoLabsGoogleCategoriesForKeywordsLanguagesAsync(final ApiCallback<DataforseoLabsGoogleCategoriesForKeywordsLanguagesResponseInfo> _callback) throws ApiException {

        okhttp3.Call localVarCall = dataforseoLabsGoogleCategoriesForKeywordsLanguagesValidateBeforeCall(_callback);
        Type localVarReturnType = new TypeToken<DataforseoLabsGoogleCategoriesForKeywordsLanguagesResponseInfo>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for dataforseoLabsIdList
     * @param dataforseoLabsIdListRequestInfo  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dataforseoLabsIdListCall(List<DataforseoLabsIdListRequestInfo> dataforseoLabsIdListRequestInfo, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = dataforseoLabsIdListRequestInfo;

        // create path and map variables
        String localVarPath = "/v3/dataforseo_labs/id_list";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "basicAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call dataforseoLabsIdListValidateBeforeCall(List<DataforseoLabsIdListRequestInfo> dataforseoLabsIdListRequestInfo, final ApiCallback _callback) throws ApiException {
        return dataforseoLabsIdListCall(dataforseoLabsIdListRequestInfo, _callback);

    }

    /**
     * 
     * This endpoint is designed to provide you with the list of IDs and metadata of the completed DataForSEO Labs tasks during the specified period. You will get all task IDs that were made including successful, uncompleted, and tasks that responded as errors. for more info please visit &#39;https://docs.dataforseo.com/v3/dataforseo_labs/id_list/?bash&#39;
     * @param dataforseoLabsIdListRequestInfo  (optional)
     * @return DataforseoLabsIdListResponseInfo
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public DataforseoLabsIdListResponseInfo dataforseoLabsIdList(List<DataforseoLabsIdListRequestInfo> dataforseoLabsIdListRequestInfo) throws ApiException {
        ApiResponse<DataforseoLabsIdListResponseInfo> localVarResp = dataforseoLabsIdListWithHttpInfo(dataforseoLabsIdListRequestInfo);
        return localVarResp.getData();
    }

    /**
     * 
     * This endpoint is designed to provide you with the list of IDs and metadata of the completed DataForSEO Labs tasks during the specified period. You will get all task IDs that were made including successful, uncompleted, and tasks that responded as errors. for more info please visit &#39;https://docs.dataforseo.com/v3/dataforseo_labs/id_list/?bash&#39;
     * @param dataforseoLabsIdListRequestInfo  (optional)
     * @return ApiResponse&lt;DataforseoLabsIdListResponseInfo&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<DataforseoLabsIdListResponseInfo> dataforseoLabsIdListWithHttpInfo(List<DataforseoLabsIdListRequestInfo> dataforseoLabsIdListRequestInfo) throws ApiException {
        okhttp3.Call localVarCall = dataforseoLabsIdListValidateBeforeCall(dataforseoLabsIdListRequestInfo, null);
        Type localVarReturnType = new TypeToken<DataforseoLabsIdListResponseInfo>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * This endpoint is designed to provide you with the list of IDs and metadata of the completed DataForSEO Labs tasks during the specified period. You will get all task IDs that were made including successful, uncompleted, and tasks that responded as errors. for more info please visit &#39;https://docs.dataforseo.com/v3/dataforseo_labs/id_list/?bash&#39;
     * @param dataforseoLabsIdListRequestInfo  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dataforseoLabsIdListAsync(List<DataforseoLabsIdListRequestInfo> dataforseoLabsIdListRequestInfo, final ApiCallback<DataforseoLabsIdListResponseInfo> _callback) throws ApiException {

        okhttp3.Call localVarCall = dataforseoLabsIdListValidateBeforeCall(dataforseoLabsIdListRequestInfo, _callback);
        Type localVarReturnType = new TypeToken<DataforseoLabsIdListResponseInfo>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for dataforseoLabsLocationsAndLanguages
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dataforseoLabsLocationsAndLanguagesCall(final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/v3/dataforseo_labs/locations_and_languages";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "basicAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call dataforseoLabsLocationsAndLanguagesValidateBeforeCall(final ApiCallback _callback) throws ApiException {
        return dataforseoLabsLocationsAndLanguagesCall(_callback);

    }

    /**
     * 
     * ‌ Using this endpoint you can get the full list of locations and languages supported in DataForSEO Labs API. Available sources currently include Google, Bing, and Amazon search engines. However, you should note that Amazon and Bing locations and languages are currently limited to the US/English. for more info please visit &#39;https://docs.dataforseo.com/v3/dataforseo_labs/locations_and_languages/?bash&#39;
     * @return DataforseoLabsLocationsAndLanguagesResponseInfo
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public DataforseoLabsLocationsAndLanguagesResponseInfo dataforseoLabsLocationsAndLanguages() throws ApiException {
        ApiResponse<DataforseoLabsLocationsAndLanguagesResponseInfo> localVarResp = dataforseoLabsLocationsAndLanguagesWithHttpInfo();
        return localVarResp.getData();
    }

    /**
     * 
     * ‌ Using this endpoint you can get the full list of locations and languages supported in DataForSEO Labs API. Available sources currently include Google, Bing, and Amazon search engines. However, you should note that Amazon and Bing locations and languages are currently limited to the US/English. for more info please visit &#39;https://docs.dataforseo.com/v3/dataforseo_labs/locations_and_languages/?bash&#39;
     * @return ApiResponse&lt;DataforseoLabsLocationsAndLanguagesResponseInfo&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<DataforseoLabsLocationsAndLanguagesResponseInfo> dataforseoLabsLocationsAndLanguagesWithHttpInfo() throws ApiException {
        okhttp3.Call localVarCall = dataforseoLabsLocationsAndLanguagesValidateBeforeCall(null);
        Type localVarReturnType = new TypeToken<DataforseoLabsLocationsAndLanguagesResponseInfo>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * ‌ Using this endpoint you can get the full list of locations and languages supported in DataForSEO Labs API. Available sources currently include Google, Bing, and Amazon search engines. However, you should note that Amazon and Bing locations and languages are currently limited to the US/English. for more info please visit &#39;https://docs.dataforseo.com/v3/dataforseo_labs/locations_and_languages/?bash&#39;
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dataforseoLabsLocationsAndLanguagesAsync(final ApiCallback<DataforseoLabsLocationsAndLanguagesResponseInfo> _callback) throws ApiException {

        okhttp3.Call localVarCall = dataforseoLabsLocationsAndLanguagesValidateBeforeCall(_callback);
        Type localVarReturnType = new TypeToken<DataforseoLabsLocationsAndLanguagesResponseInfo>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for dataforseoLabsStatus
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dataforseoLabsStatusCall(final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/v3/dataforseo_labs/status";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "basicAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call dataforseoLabsStatusValidateBeforeCall(final ApiCallback _callback) throws ApiException {
        return dataforseoLabsStatusCall(_callback);

    }

    /**
     * 
     * ‌ By calling this endpoint, you will find out when the DataForSEO Labs data was last updated. The API response will provide separate update dates for the Google, Bing, and Amazon endpoints of DataForSEO Labs API. for more info please visit &#39;https://docs.dataforseo.com/v3/dataforseo_labs/status/?bash&#39;
     * @return DataforseoLabsStatusResponseInfo
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public DataforseoLabsStatusResponseInfo dataforseoLabsStatus() throws ApiException {
        ApiResponse<DataforseoLabsStatusResponseInfo> localVarResp = dataforseoLabsStatusWithHttpInfo();
        return localVarResp.getData();
    }

    /**
     * 
     * ‌ By calling this endpoint, you will find out when the DataForSEO Labs data was last updated. The API response will provide separate update dates for the Google, Bing, and Amazon endpoints of DataForSEO Labs API. for more info please visit &#39;https://docs.dataforseo.com/v3/dataforseo_labs/status/?bash&#39;
     * @return ApiResponse&lt;DataforseoLabsStatusResponseInfo&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<DataforseoLabsStatusResponseInfo> dataforseoLabsStatusWithHttpInfo() throws ApiException {
        okhttp3.Call localVarCall = dataforseoLabsStatusValidateBeforeCall(null);
        Type localVarReturnType = new TypeToken<DataforseoLabsStatusResponseInfo>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * ‌ By calling this endpoint, you will find out when the DataForSEO Labs data was last updated. The API response will provide separate update dates for the Google, Bing, and Amazon endpoints of DataForSEO Labs API. for more info please visit &#39;https://docs.dataforseo.com/v3/dataforseo_labs/status/?bash&#39;
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dataforseoLabsStatusAsync(final ApiCallback<DataforseoLabsStatusResponseInfo> _callback) throws ApiException {

        okhttp3.Call localVarCall = dataforseoLabsStatusValidateBeforeCall(_callback);
        Type localVarReturnType = new TypeToken<DataforseoLabsStatusResponseInfo>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for googleAppCompetitorsLive
     * @param dataforseoLabsGoogleAppCompetitorsLiveRequestInfo  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call googleAppCompetitorsLiveCall(List<DataforseoLabsGoogleAppCompetitorsLiveRequestInfo> dataforseoLabsGoogleAppCompetitorsLiveRequestInfo, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = dataforseoLabsGoogleAppCompetitorsLiveRequestInfo;

        // create path and map variables
        String localVarPath = "/v3/dataforseo_labs/google/app_competitors/live";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "basicAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call googleAppCompetitorsLiveValidateBeforeCall(List<DataforseoLabsGoogleAppCompetitorsLiveRequestInfo> dataforseoLabsGoogleAppCompetitorsLiveRequestInfo, final ApiCallback _callback) throws ApiException {
        return googleAppCompetitorsLiveCall(dataforseoLabsGoogleAppCompetitorsLiveRequestInfo, _callback);

    }

    /**
     * 
     * ‌ This endpoint will provide you with a list of mobile applications that intersect with the target app for its ranking keywords on Google Play. You will obtain the IDs of competitor apps along with search volume and ranking data on competitor ranking keywords. for more info please visit &#39;https://docs.dataforseo.com/v3/dataforseo_labs/google/app_competitors/live/?bash&#39;
     * @param dataforseoLabsGoogleAppCompetitorsLiveRequestInfo  (optional)
     * @return DataforseoLabsGoogleAppCompetitorsLiveResponseInfo
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public DataforseoLabsGoogleAppCompetitorsLiveResponseInfo googleAppCompetitorsLive(List<DataforseoLabsGoogleAppCompetitorsLiveRequestInfo> dataforseoLabsGoogleAppCompetitorsLiveRequestInfo) throws ApiException {
        ApiResponse<DataforseoLabsGoogleAppCompetitorsLiveResponseInfo> localVarResp = googleAppCompetitorsLiveWithHttpInfo(dataforseoLabsGoogleAppCompetitorsLiveRequestInfo);
        return localVarResp.getData();
    }

    /**
     * 
     * ‌ This endpoint will provide you with a list of mobile applications that intersect with the target app for its ranking keywords on Google Play. You will obtain the IDs of competitor apps along with search volume and ranking data on competitor ranking keywords. for more info please visit &#39;https://docs.dataforseo.com/v3/dataforseo_labs/google/app_competitors/live/?bash&#39;
     * @param dataforseoLabsGoogleAppCompetitorsLiveRequestInfo  (optional)
     * @return ApiResponse&lt;DataforseoLabsGoogleAppCompetitorsLiveResponseInfo&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<DataforseoLabsGoogleAppCompetitorsLiveResponseInfo> googleAppCompetitorsLiveWithHttpInfo(List<DataforseoLabsGoogleAppCompetitorsLiveRequestInfo> dataforseoLabsGoogleAppCompetitorsLiveRequestInfo) throws ApiException {
        okhttp3.Call localVarCall = googleAppCompetitorsLiveValidateBeforeCall(dataforseoLabsGoogleAppCompetitorsLiveRequestInfo, null);
        Type localVarReturnType = new TypeToken<DataforseoLabsGoogleAppCompetitorsLiveResponseInfo>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * ‌ This endpoint will provide you with a list of mobile applications that intersect with the target app for its ranking keywords on Google Play. You will obtain the IDs of competitor apps along with search volume and ranking data on competitor ranking keywords. for more info please visit &#39;https://docs.dataforseo.com/v3/dataforseo_labs/google/app_competitors/live/?bash&#39;
     * @param dataforseoLabsGoogleAppCompetitorsLiveRequestInfo  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call googleAppCompetitorsLiveAsync(List<DataforseoLabsGoogleAppCompetitorsLiveRequestInfo> dataforseoLabsGoogleAppCompetitorsLiveRequestInfo, final ApiCallback<DataforseoLabsGoogleAppCompetitorsLiveResponseInfo> _callback) throws ApiException {

        okhttp3.Call localVarCall = googleAppCompetitorsLiveValidateBeforeCall(dataforseoLabsGoogleAppCompetitorsLiveRequestInfo, _callback);
        Type localVarReturnType = new TypeToken<DataforseoLabsGoogleAppCompetitorsLiveResponseInfo>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for googleAppIntersectionLive
     * @param dataforseoLabsGoogleAppIntersectionLiveRequestInfo  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call googleAppIntersectionLiveCall(List<DataforseoLabsGoogleAppIntersectionLiveRequestInfo> dataforseoLabsGoogleAppIntersectionLiveRequestInfo, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = dataforseoLabsGoogleAppIntersectionLiveRequestInfo;

        // create path and map variables
        String localVarPath = "/v3/dataforseo_labs/google/app_intersection/live";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "basicAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call googleAppIntersectionLiveValidateBeforeCall(List<DataforseoLabsGoogleAppIntersectionLiveRequestInfo> dataforseoLabsGoogleAppIntersectionLiveRequestInfo, final ApiCallback _callback) throws ApiException {
        return googleAppIntersectionLiveCall(dataforseoLabsGoogleAppIntersectionLiveRequestInfo, _callback);

    }

    /**
     * 
     * ‌ This endpoint will provide you with a list of keywords for which the mobile applications specified in the app_ids object rank within the same Google Play SERP. for more info please visit &#39;https://docs.dataforseo.com/v3/dataforseo_labs/google/app_intersection/live/?bash&#39;
     * @param dataforseoLabsGoogleAppIntersectionLiveRequestInfo  (optional)
     * @return DataforseoLabsGoogleAppIntersectionLiveResponseInfo
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public DataforseoLabsGoogleAppIntersectionLiveResponseInfo googleAppIntersectionLive(List<DataforseoLabsGoogleAppIntersectionLiveRequestInfo> dataforseoLabsGoogleAppIntersectionLiveRequestInfo) throws ApiException {
        ApiResponse<DataforseoLabsGoogleAppIntersectionLiveResponseInfo> localVarResp = googleAppIntersectionLiveWithHttpInfo(dataforseoLabsGoogleAppIntersectionLiveRequestInfo);
        return localVarResp.getData();
    }

    /**
     * 
     * ‌ This endpoint will provide you with a list of keywords for which the mobile applications specified in the app_ids object rank within the same Google Play SERP. for more info please visit &#39;https://docs.dataforseo.com/v3/dataforseo_labs/google/app_intersection/live/?bash&#39;
     * @param dataforseoLabsGoogleAppIntersectionLiveRequestInfo  (optional)
     * @return ApiResponse&lt;DataforseoLabsGoogleAppIntersectionLiveResponseInfo&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<DataforseoLabsGoogleAppIntersectionLiveResponseInfo> googleAppIntersectionLiveWithHttpInfo(List<DataforseoLabsGoogleAppIntersectionLiveRequestInfo> dataforseoLabsGoogleAppIntersectionLiveRequestInfo) throws ApiException {
        okhttp3.Call localVarCall = googleAppIntersectionLiveValidateBeforeCall(dataforseoLabsGoogleAppIntersectionLiveRequestInfo, null);
        Type localVarReturnType = new TypeToken<DataforseoLabsGoogleAppIntersectionLiveResponseInfo>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * ‌ This endpoint will provide you with a list of keywords for which the mobile applications specified in the app_ids object rank within the same Google Play SERP. for more info please visit &#39;https://docs.dataforseo.com/v3/dataforseo_labs/google/app_intersection/live/?bash&#39;
     * @param dataforseoLabsGoogleAppIntersectionLiveRequestInfo  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call googleAppIntersectionLiveAsync(List<DataforseoLabsGoogleAppIntersectionLiveRequestInfo> dataforseoLabsGoogleAppIntersectionLiveRequestInfo, final ApiCallback<DataforseoLabsGoogleAppIntersectionLiveResponseInfo> _callback) throws ApiException {

        okhttp3.Call localVarCall = googleAppIntersectionLiveValidateBeforeCall(dataforseoLabsGoogleAppIntersectionLiveRequestInfo, _callback);
        Type localVarReturnType = new TypeToken<DataforseoLabsGoogleAppIntersectionLiveResponseInfo>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for googleAvailableHistory
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call googleAvailableHistoryCall(final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/v3/dataforseo_labs/google/available_history";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "basicAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call googleAvailableHistoryValidateBeforeCall(final ApiCallback _callback) throws ApiException {
        return googleAvailableHistoryCall(_callback);

    }

    /**
     * 
     * ‌ By calling this endpoint, you will find obtain a list of dates available for setting in the first_date and second_date fields of the Domain Metrics by Categories endpoint. for more info please visit &#39;https://docs.dataforseo.com/v3/dataforseo_labs/google/available_history/live/?bash&#39;
     * @return DataforseoLabsGoogleAvailableHistoryResponseInfo
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public DataforseoLabsGoogleAvailableHistoryResponseInfo googleAvailableHistory() throws ApiException {
        ApiResponse<DataforseoLabsGoogleAvailableHistoryResponseInfo> localVarResp = googleAvailableHistoryWithHttpInfo();
        return localVarResp.getData();
    }

    /**
     * 
     * ‌ By calling this endpoint, you will find obtain a list of dates available for setting in the first_date and second_date fields of the Domain Metrics by Categories endpoint. for more info please visit &#39;https://docs.dataforseo.com/v3/dataforseo_labs/google/available_history/live/?bash&#39;
     * @return ApiResponse&lt;DataforseoLabsGoogleAvailableHistoryResponseInfo&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<DataforseoLabsGoogleAvailableHistoryResponseInfo> googleAvailableHistoryWithHttpInfo() throws ApiException {
        okhttp3.Call localVarCall = googleAvailableHistoryValidateBeforeCall(null);
        Type localVarReturnType = new TypeToken<DataforseoLabsGoogleAvailableHistoryResponseInfo>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * ‌ By calling this endpoint, you will find obtain a list of dates available for setting in the first_date and second_date fields of the Domain Metrics by Categories endpoint. for more info please visit &#39;https://docs.dataforseo.com/v3/dataforseo_labs/google/available_history/live/?bash&#39;
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call googleAvailableHistoryAsync(final ApiCallback<DataforseoLabsGoogleAvailableHistoryResponseInfo> _callback) throws ApiException {

        okhttp3.Call localVarCall = googleAvailableHistoryValidateBeforeCall(_callback);
        Type localVarReturnType = new TypeToken<DataforseoLabsGoogleAvailableHistoryResponseInfo>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for googleBulkAppMetricsLive
     * @param dataforseoLabsGoogleBulkAppMetricsLiveRequestInfo  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call googleBulkAppMetricsLiveCall(List<DataforseoLabsGoogleBulkAppMetricsLiveRequestInfo> dataforseoLabsGoogleBulkAppMetricsLiveRequestInfo, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = dataforseoLabsGoogleBulkAppMetricsLiveRequestInfo;

        // create path and map variables
        String localVarPath = "/v3/dataforseo_labs/google/bulk_app_metrics/live";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "basicAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call googleBulkAppMetricsLiveValidateBeforeCall(List<DataforseoLabsGoogleBulkAppMetricsLiveRequestInfo> dataforseoLabsGoogleBulkAppMetricsLiveRequestInfo, final ApiCallback _callback) throws ApiException {
        return googleBulkAppMetricsLiveCall(dataforseoLabsGoogleBulkAppMetricsLiveRequestInfo, _callback);

    }

    /**
     * 
     * ‌ This endpoint will provide you with ranking metrics for up to 1000 Google Play applications. for more info please visit &#39;https://docs.dataforseo.com/v3/dataforseo_labs/google/bulk_app_metrics/live/?bash&#39;
     * @param dataforseoLabsGoogleBulkAppMetricsLiveRequestInfo  (optional)
     * @return DataforseoLabsGoogleBulkAppMetricsLiveResponseInfo
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public DataforseoLabsGoogleBulkAppMetricsLiveResponseInfo googleBulkAppMetricsLive(List<DataforseoLabsGoogleBulkAppMetricsLiveRequestInfo> dataforseoLabsGoogleBulkAppMetricsLiveRequestInfo) throws ApiException {
        ApiResponse<DataforseoLabsGoogleBulkAppMetricsLiveResponseInfo> localVarResp = googleBulkAppMetricsLiveWithHttpInfo(dataforseoLabsGoogleBulkAppMetricsLiveRequestInfo);
        return localVarResp.getData();
    }

    /**
     * 
     * ‌ This endpoint will provide you with ranking metrics for up to 1000 Google Play applications. for more info please visit &#39;https://docs.dataforseo.com/v3/dataforseo_labs/google/bulk_app_metrics/live/?bash&#39;
     * @param dataforseoLabsGoogleBulkAppMetricsLiveRequestInfo  (optional)
     * @return ApiResponse&lt;DataforseoLabsGoogleBulkAppMetricsLiveResponseInfo&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<DataforseoLabsGoogleBulkAppMetricsLiveResponseInfo> googleBulkAppMetricsLiveWithHttpInfo(List<DataforseoLabsGoogleBulkAppMetricsLiveRequestInfo> dataforseoLabsGoogleBulkAppMetricsLiveRequestInfo) throws ApiException {
        okhttp3.Call localVarCall = googleBulkAppMetricsLiveValidateBeforeCall(dataforseoLabsGoogleBulkAppMetricsLiveRequestInfo, null);
        Type localVarReturnType = new TypeToken<DataforseoLabsGoogleBulkAppMetricsLiveResponseInfo>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * ‌ This endpoint will provide you with ranking metrics for up to 1000 Google Play applications. for more info please visit &#39;https://docs.dataforseo.com/v3/dataforseo_labs/google/bulk_app_metrics/live/?bash&#39;
     * @param dataforseoLabsGoogleBulkAppMetricsLiveRequestInfo  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call googleBulkAppMetricsLiveAsync(List<DataforseoLabsGoogleBulkAppMetricsLiveRequestInfo> dataforseoLabsGoogleBulkAppMetricsLiveRequestInfo, final ApiCallback<DataforseoLabsGoogleBulkAppMetricsLiveResponseInfo> _callback) throws ApiException {

        okhttp3.Call localVarCall = googleBulkAppMetricsLiveValidateBeforeCall(dataforseoLabsGoogleBulkAppMetricsLiveRequestInfo, _callback);
        Type localVarReturnType = new TypeToken<DataforseoLabsGoogleBulkAppMetricsLiveResponseInfo>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for googleBulkKeywordDifficultyLive
     * @param dataforseoLabsGoogleBulkKeywordDifficultyLiveRequestInfo  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call googleBulkKeywordDifficultyLiveCall(List<DataforseoLabsGoogleBulkKeywordDifficultyLiveRequestInfo> dataforseoLabsGoogleBulkKeywordDifficultyLiveRequestInfo, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = dataforseoLabsGoogleBulkKeywordDifficultyLiveRequestInfo;

        // create path and map variables
        String localVarPath = "/v3/dataforseo_labs/google/bulk_keyword_difficulty/live";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "basicAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call googleBulkKeywordDifficultyLiveValidateBeforeCall(List<DataforseoLabsGoogleBulkKeywordDifficultyLiveRequestInfo> dataforseoLabsGoogleBulkKeywordDifficultyLiveRequestInfo, final ApiCallback _callback) throws ApiException {
        return googleBulkKeywordDifficultyLiveCall(dataforseoLabsGoogleBulkKeywordDifficultyLiveRequestInfo, _callback);

    }

    /**
     * 
     * This endpoint will provide you with the Keyword Difficulty metric for a maximum of 1,000 keywords in one API request. Keyword Difficulty stands for the relative difficulty of ranking in the first top-10 organic results for the related keyword. Keyword Difficulty in DataForSEO API responses indicates the chance of getting in top-10 organic results for a keyword on a logarithmic scale from 0 to 100. for more info please visit &#39;https://docs.dataforseo.com/v3/dataforseo_labs/google/bulk_keyword_difficulty/live/?bash&#39;
     * @param dataforseoLabsGoogleBulkKeywordDifficultyLiveRequestInfo  (optional)
     * @return DataforseoLabsGoogleBulkKeywordDifficultyLiveResponseInfo
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public DataforseoLabsGoogleBulkKeywordDifficultyLiveResponseInfo googleBulkKeywordDifficultyLive(List<DataforseoLabsGoogleBulkKeywordDifficultyLiveRequestInfo> dataforseoLabsGoogleBulkKeywordDifficultyLiveRequestInfo) throws ApiException {
        ApiResponse<DataforseoLabsGoogleBulkKeywordDifficultyLiveResponseInfo> localVarResp = googleBulkKeywordDifficultyLiveWithHttpInfo(dataforseoLabsGoogleBulkKeywordDifficultyLiveRequestInfo);
        return localVarResp.getData();
    }

    /**
     * 
     * This endpoint will provide you with the Keyword Difficulty metric for a maximum of 1,000 keywords in one API request. Keyword Difficulty stands for the relative difficulty of ranking in the first top-10 organic results for the related keyword. Keyword Difficulty in DataForSEO API responses indicates the chance of getting in top-10 organic results for a keyword on a logarithmic scale from 0 to 100. for more info please visit &#39;https://docs.dataforseo.com/v3/dataforseo_labs/google/bulk_keyword_difficulty/live/?bash&#39;
     * @param dataforseoLabsGoogleBulkKeywordDifficultyLiveRequestInfo  (optional)
     * @return ApiResponse&lt;DataforseoLabsGoogleBulkKeywordDifficultyLiveResponseInfo&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<DataforseoLabsGoogleBulkKeywordDifficultyLiveResponseInfo> googleBulkKeywordDifficultyLiveWithHttpInfo(List<DataforseoLabsGoogleBulkKeywordDifficultyLiveRequestInfo> dataforseoLabsGoogleBulkKeywordDifficultyLiveRequestInfo) throws ApiException {
        okhttp3.Call localVarCall = googleBulkKeywordDifficultyLiveValidateBeforeCall(dataforseoLabsGoogleBulkKeywordDifficultyLiveRequestInfo, null);
        Type localVarReturnType = new TypeToken<DataforseoLabsGoogleBulkKeywordDifficultyLiveResponseInfo>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * This endpoint will provide you with the Keyword Difficulty metric for a maximum of 1,000 keywords in one API request. Keyword Difficulty stands for the relative difficulty of ranking in the first top-10 organic results for the related keyword. Keyword Difficulty in DataForSEO API responses indicates the chance of getting in top-10 organic results for a keyword on a logarithmic scale from 0 to 100. for more info please visit &#39;https://docs.dataforseo.com/v3/dataforseo_labs/google/bulk_keyword_difficulty/live/?bash&#39;
     * @param dataforseoLabsGoogleBulkKeywordDifficultyLiveRequestInfo  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call googleBulkKeywordDifficultyLiveAsync(List<DataforseoLabsGoogleBulkKeywordDifficultyLiveRequestInfo> dataforseoLabsGoogleBulkKeywordDifficultyLiveRequestInfo, final ApiCallback<DataforseoLabsGoogleBulkKeywordDifficultyLiveResponseInfo> _callback) throws ApiException {

        okhttp3.Call localVarCall = googleBulkKeywordDifficultyLiveValidateBeforeCall(dataforseoLabsGoogleBulkKeywordDifficultyLiveRequestInfo, _callback);
        Type localVarReturnType = new TypeToken<DataforseoLabsGoogleBulkKeywordDifficultyLiveResponseInfo>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for googleBulkTrafficEstimationLive
     * @param dataforseoLabsGoogleBulkTrafficEstimationLiveRequestInfo  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call googleBulkTrafficEstimationLiveCall(List<DataforseoLabsGoogleBulkTrafficEstimationLiveRequestInfo> dataforseoLabsGoogleBulkTrafficEstimationLiveRequestInfo, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = dataforseoLabsGoogleBulkTrafficEstimationLiveRequestInfo;

        // create path and map variables
        String localVarPath = "/v3/dataforseo_labs/google/bulk_traffic_estimation/live";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "basicAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call googleBulkTrafficEstimationLiveValidateBeforeCall(List<DataforseoLabsGoogleBulkTrafficEstimationLiveRequestInfo> dataforseoLabsGoogleBulkTrafficEstimationLiveRequestInfo, final ApiCallback _callback) throws ApiException {
        return googleBulkTrafficEstimationLiveCall(dataforseoLabsGoogleBulkTrafficEstimationLiveRequestInfo, _callback);

    }

    /**
     * 
     * ‌ This endpoint will provide you with estimated monthly traffic volumes for up to 1,000 domains. Along with organic search traffic estimations, you will also get separate values for paid search, featured snippet, and local pack results. for more info please visit &#39;https://docs.dataforseo.com/v3/dataforseo_labs/google/bulk_traffic_estimation/live/?bash&#39;
     * @param dataforseoLabsGoogleBulkTrafficEstimationLiveRequestInfo  (optional)
     * @return DataforseoLabsGoogleBulkTrafficEstimationLiveResponseInfo
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public DataforseoLabsGoogleBulkTrafficEstimationLiveResponseInfo googleBulkTrafficEstimationLive(List<DataforseoLabsGoogleBulkTrafficEstimationLiveRequestInfo> dataforseoLabsGoogleBulkTrafficEstimationLiveRequestInfo) throws ApiException {
        ApiResponse<DataforseoLabsGoogleBulkTrafficEstimationLiveResponseInfo> localVarResp = googleBulkTrafficEstimationLiveWithHttpInfo(dataforseoLabsGoogleBulkTrafficEstimationLiveRequestInfo);
        return localVarResp.getData();
    }

    /**
     * 
     * ‌ This endpoint will provide you with estimated monthly traffic volumes for up to 1,000 domains. Along with organic search traffic estimations, you will also get separate values for paid search, featured snippet, and local pack results. for more info please visit &#39;https://docs.dataforseo.com/v3/dataforseo_labs/google/bulk_traffic_estimation/live/?bash&#39;
     * @param dataforseoLabsGoogleBulkTrafficEstimationLiveRequestInfo  (optional)
     * @return ApiResponse&lt;DataforseoLabsGoogleBulkTrafficEstimationLiveResponseInfo&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<DataforseoLabsGoogleBulkTrafficEstimationLiveResponseInfo> googleBulkTrafficEstimationLiveWithHttpInfo(List<DataforseoLabsGoogleBulkTrafficEstimationLiveRequestInfo> dataforseoLabsGoogleBulkTrafficEstimationLiveRequestInfo) throws ApiException {
        okhttp3.Call localVarCall = googleBulkTrafficEstimationLiveValidateBeforeCall(dataforseoLabsGoogleBulkTrafficEstimationLiveRequestInfo, null);
        Type localVarReturnType = new TypeToken<DataforseoLabsGoogleBulkTrafficEstimationLiveResponseInfo>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * ‌ This endpoint will provide you with estimated monthly traffic volumes for up to 1,000 domains. Along with organic search traffic estimations, you will also get separate values for paid search, featured snippet, and local pack results. for more info please visit &#39;https://docs.dataforseo.com/v3/dataforseo_labs/google/bulk_traffic_estimation/live/?bash&#39;
     * @param dataforseoLabsGoogleBulkTrafficEstimationLiveRequestInfo  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call googleBulkTrafficEstimationLiveAsync(List<DataforseoLabsGoogleBulkTrafficEstimationLiveRequestInfo> dataforseoLabsGoogleBulkTrafficEstimationLiveRequestInfo, final ApiCallback<DataforseoLabsGoogleBulkTrafficEstimationLiveResponseInfo> _callback) throws ApiException {

        okhttp3.Call localVarCall = googleBulkTrafficEstimationLiveValidateBeforeCall(dataforseoLabsGoogleBulkTrafficEstimationLiveRequestInfo, _callback);
        Type localVarReturnType = new TypeToken<DataforseoLabsGoogleBulkTrafficEstimationLiveResponseInfo>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for googleCategoriesForDomainLive
     * @param dataforseoLabsGoogleCategoriesForDomainLiveRequestInfo  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call googleCategoriesForDomainLiveCall(List<DataforseoLabsGoogleCategoriesForDomainLiveRequestInfo> dataforseoLabsGoogleCategoriesForDomainLiveRequestInfo, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = dataforseoLabsGoogleCategoriesForDomainLiveRequestInfo;

        // create path and map variables
        String localVarPath = "/v3/dataforseo_labs/google/categories_for_domain/live";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "basicAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call googleCategoriesForDomainLiveValidateBeforeCall(List<DataforseoLabsGoogleCategoriesForDomainLiveRequestInfo> dataforseoLabsGoogleCategoriesForDomainLiveRequestInfo, final ApiCallback _callback) throws ApiException {
        return googleCategoriesForDomainLiveCall(dataforseoLabsGoogleCategoriesForDomainLiveRequestInfo, _callback);

    }

    /**
     * 
     * ‌ This endpoint will provide you with Google product or service categories that include keywords the domain ranks for in search. Furthermore, you will obtain general rankings and traffic data for the keywords under a certain category. for more info please visit &#39;https://docs.dataforseo.com/v3/dataforseo_labs/google/categories_for_domain/live/?bash&#39;
     * @param dataforseoLabsGoogleCategoriesForDomainLiveRequestInfo  (optional)
     * @return DataforseoLabsGoogleCategoriesForDomainLiveResponseInfo
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public DataforseoLabsGoogleCategoriesForDomainLiveResponseInfo googleCategoriesForDomainLive(List<DataforseoLabsGoogleCategoriesForDomainLiveRequestInfo> dataforseoLabsGoogleCategoriesForDomainLiveRequestInfo) throws ApiException {
        ApiResponse<DataforseoLabsGoogleCategoriesForDomainLiveResponseInfo> localVarResp = googleCategoriesForDomainLiveWithHttpInfo(dataforseoLabsGoogleCategoriesForDomainLiveRequestInfo);
        return localVarResp.getData();
    }

    /**
     * 
     * ‌ This endpoint will provide you with Google product or service categories that include keywords the domain ranks for in search. Furthermore, you will obtain general rankings and traffic data for the keywords under a certain category. for more info please visit &#39;https://docs.dataforseo.com/v3/dataforseo_labs/google/categories_for_domain/live/?bash&#39;
     * @param dataforseoLabsGoogleCategoriesForDomainLiveRequestInfo  (optional)
     * @return ApiResponse&lt;DataforseoLabsGoogleCategoriesForDomainLiveResponseInfo&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<DataforseoLabsGoogleCategoriesForDomainLiveResponseInfo> googleCategoriesForDomainLiveWithHttpInfo(List<DataforseoLabsGoogleCategoriesForDomainLiveRequestInfo> dataforseoLabsGoogleCategoriesForDomainLiveRequestInfo) throws ApiException {
        okhttp3.Call localVarCall = googleCategoriesForDomainLiveValidateBeforeCall(dataforseoLabsGoogleCategoriesForDomainLiveRequestInfo, null);
        Type localVarReturnType = new TypeToken<DataforseoLabsGoogleCategoriesForDomainLiveResponseInfo>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * ‌ This endpoint will provide you with Google product or service categories that include keywords the domain ranks for in search. Furthermore, you will obtain general rankings and traffic data for the keywords under a certain category. for more info please visit &#39;https://docs.dataforseo.com/v3/dataforseo_labs/google/categories_for_domain/live/?bash&#39;
     * @param dataforseoLabsGoogleCategoriesForDomainLiveRequestInfo  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call googleCategoriesForDomainLiveAsync(List<DataforseoLabsGoogleCategoriesForDomainLiveRequestInfo> dataforseoLabsGoogleCategoriesForDomainLiveRequestInfo, final ApiCallback<DataforseoLabsGoogleCategoriesForDomainLiveResponseInfo> _callback) throws ApiException {

        okhttp3.Call localVarCall = googleCategoriesForDomainLiveValidateBeforeCall(dataforseoLabsGoogleCategoriesForDomainLiveRequestInfo, _callback);
        Type localVarReturnType = new TypeToken<DataforseoLabsGoogleCategoriesForDomainLiveResponseInfo>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for googleCategoriesForKeywordsLive
     * @param dataforseoLabsGoogleCategoriesForKeywordsLiveRequestInfo  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call googleCategoriesForKeywordsLiveCall(List<DataforseoLabsGoogleCategoriesForKeywordsLiveRequestInfo> dataforseoLabsGoogleCategoriesForKeywordsLiveRequestInfo, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = dataforseoLabsGoogleCategoriesForKeywordsLiveRequestInfo;

        // create path and map variables
        String localVarPath = "/v3/dataforseo_labs/google/categories_for_keywords/live";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "basicAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call googleCategoriesForKeywordsLiveValidateBeforeCall(List<DataforseoLabsGoogleCategoriesForKeywordsLiveRequestInfo> dataforseoLabsGoogleCategoriesForKeywordsLiveRequestInfo, final ApiCallback _callback) throws ApiException {
        return googleCategoriesForKeywordsLiveCall(dataforseoLabsGoogleCategoriesForKeywordsLiveRequestInfo, _callback);

    }

    /**
     * 
     * This endpoint will provide you with Google product and service categories related for each specified keyword. You can indicate a maximum of 1,000 keywords in one API request. for more info please visit &#39;https://docs.dataforseo.com/v3/dataforseo_labs/google/categories_for_keywords/live/?bash&#39;
     * @param dataforseoLabsGoogleCategoriesForKeywordsLiveRequestInfo  (optional)
     * @return DataforseoLabsGoogleCategoriesForKeywordsLiveResponseInfo
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public DataforseoLabsGoogleCategoriesForKeywordsLiveResponseInfo googleCategoriesForKeywordsLive(List<DataforseoLabsGoogleCategoriesForKeywordsLiveRequestInfo> dataforseoLabsGoogleCategoriesForKeywordsLiveRequestInfo) throws ApiException {
        ApiResponse<DataforseoLabsGoogleCategoriesForKeywordsLiveResponseInfo> localVarResp = googleCategoriesForKeywordsLiveWithHttpInfo(dataforseoLabsGoogleCategoriesForKeywordsLiveRequestInfo);
        return localVarResp.getData();
    }

    /**
     * 
     * This endpoint will provide you with Google product and service categories related for each specified keyword. You can indicate a maximum of 1,000 keywords in one API request. for more info please visit &#39;https://docs.dataforseo.com/v3/dataforseo_labs/google/categories_for_keywords/live/?bash&#39;
     * @param dataforseoLabsGoogleCategoriesForKeywordsLiveRequestInfo  (optional)
     * @return ApiResponse&lt;DataforseoLabsGoogleCategoriesForKeywordsLiveResponseInfo&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<DataforseoLabsGoogleCategoriesForKeywordsLiveResponseInfo> googleCategoriesForKeywordsLiveWithHttpInfo(List<DataforseoLabsGoogleCategoriesForKeywordsLiveRequestInfo> dataforseoLabsGoogleCategoriesForKeywordsLiveRequestInfo) throws ApiException {
        okhttp3.Call localVarCall = googleCategoriesForKeywordsLiveValidateBeforeCall(dataforseoLabsGoogleCategoriesForKeywordsLiveRequestInfo, null);
        Type localVarReturnType = new TypeToken<DataforseoLabsGoogleCategoriesForKeywordsLiveResponseInfo>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * This endpoint will provide you with Google product and service categories related for each specified keyword. You can indicate a maximum of 1,000 keywords in one API request. for more info please visit &#39;https://docs.dataforseo.com/v3/dataforseo_labs/google/categories_for_keywords/live/?bash&#39;
     * @param dataforseoLabsGoogleCategoriesForKeywordsLiveRequestInfo  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call googleCategoriesForKeywordsLiveAsync(List<DataforseoLabsGoogleCategoriesForKeywordsLiveRequestInfo> dataforseoLabsGoogleCategoriesForKeywordsLiveRequestInfo, final ApiCallback<DataforseoLabsGoogleCategoriesForKeywordsLiveResponseInfo> _callback) throws ApiException {

        okhttp3.Call localVarCall = googleCategoriesForKeywordsLiveValidateBeforeCall(dataforseoLabsGoogleCategoriesForKeywordsLiveRequestInfo, _callback);
        Type localVarReturnType = new TypeToken<DataforseoLabsGoogleCategoriesForKeywordsLiveResponseInfo>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for googleCompetitorsDomainLive
     * @param dataforseoLabsGoogleCompetitorsDomainLiveRequestInfo  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call googleCompetitorsDomainLiveCall(List<DataforseoLabsGoogleCompetitorsDomainLiveRequestInfo> dataforseoLabsGoogleCompetitorsDomainLiveRequestInfo, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = dataforseoLabsGoogleCompetitorsDomainLiveRequestInfo;

        // create path and map variables
        String localVarPath = "/v3/dataforseo_labs/google/competitors_domain/live";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "basicAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call googleCompetitorsDomainLiveValidateBeforeCall(List<DataforseoLabsGoogleCompetitorsDomainLiveRequestInfo> dataforseoLabsGoogleCompetitorsDomainLiveRequestInfo, final ApiCallback _callback) throws ApiException {
        return googleCompetitorsDomainLiveCall(dataforseoLabsGoogleCompetitorsDomainLiveRequestInfo, _callback);

    }

    /**
     * 
     * ‌ This endpoint will provide you with a full overview of ranking and traffic data of the competitor domains from organic and paid search. In addition to that, you will get the metrics specific to the keywords both competitor domains and your domain rank for within the same SERP. for more info please visit &#39;https://docs.dataforseo.com/v3/dataforseo_labs/google/competitors_domain/live/?bash&#39;
     * @param dataforseoLabsGoogleCompetitorsDomainLiveRequestInfo  (optional)
     * @return DataforseoLabsGoogleCompetitorsDomainLiveResponseInfo
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public DataforseoLabsGoogleCompetitorsDomainLiveResponseInfo googleCompetitorsDomainLive(List<DataforseoLabsGoogleCompetitorsDomainLiveRequestInfo> dataforseoLabsGoogleCompetitorsDomainLiveRequestInfo) throws ApiException {
        ApiResponse<DataforseoLabsGoogleCompetitorsDomainLiveResponseInfo> localVarResp = googleCompetitorsDomainLiveWithHttpInfo(dataforseoLabsGoogleCompetitorsDomainLiveRequestInfo);
        return localVarResp.getData();
    }

    /**
     * 
     * ‌ This endpoint will provide you with a full overview of ranking and traffic data of the competitor domains from organic and paid search. In addition to that, you will get the metrics specific to the keywords both competitor domains and your domain rank for within the same SERP. for more info please visit &#39;https://docs.dataforseo.com/v3/dataforseo_labs/google/competitors_domain/live/?bash&#39;
     * @param dataforseoLabsGoogleCompetitorsDomainLiveRequestInfo  (optional)
     * @return ApiResponse&lt;DataforseoLabsGoogleCompetitorsDomainLiveResponseInfo&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<DataforseoLabsGoogleCompetitorsDomainLiveResponseInfo> googleCompetitorsDomainLiveWithHttpInfo(List<DataforseoLabsGoogleCompetitorsDomainLiveRequestInfo> dataforseoLabsGoogleCompetitorsDomainLiveRequestInfo) throws ApiException {
        okhttp3.Call localVarCall = googleCompetitorsDomainLiveValidateBeforeCall(dataforseoLabsGoogleCompetitorsDomainLiveRequestInfo, null);
        Type localVarReturnType = new TypeToken<DataforseoLabsGoogleCompetitorsDomainLiveResponseInfo>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * ‌ This endpoint will provide you with a full overview of ranking and traffic data of the competitor domains from organic and paid search. In addition to that, you will get the metrics specific to the keywords both competitor domains and your domain rank for within the same SERP. for more info please visit &#39;https://docs.dataforseo.com/v3/dataforseo_labs/google/competitors_domain/live/?bash&#39;
     * @param dataforseoLabsGoogleCompetitorsDomainLiveRequestInfo  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call googleCompetitorsDomainLiveAsync(List<DataforseoLabsGoogleCompetitorsDomainLiveRequestInfo> dataforseoLabsGoogleCompetitorsDomainLiveRequestInfo, final ApiCallback<DataforseoLabsGoogleCompetitorsDomainLiveResponseInfo> _callback) throws ApiException {

        okhttp3.Call localVarCall = googleCompetitorsDomainLiveValidateBeforeCall(dataforseoLabsGoogleCompetitorsDomainLiveRequestInfo, _callback);
        Type localVarReturnType = new TypeToken<DataforseoLabsGoogleCompetitorsDomainLiveResponseInfo>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for googleDomainIntersectionLive
     * @param dataforseoLabsGoogleDomainIntersectionLiveRequestInfo  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call googleDomainIntersectionLiveCall(List<DataforseoLabsGoogleDomainIntersectionLiveRequestInfo> dataforseoLabsGoogleDomainIntersectionLiveRequestInfo, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = dataforseoLabsGoogleDomainIntersectionLiveRequestInfo;

        // create path and map variables
        String localVarPath = "/v3/dataforseo_labs/google/domain_intersection/live";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "basicAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call googleDomainIntersectionLiveValidateBeforeCall(List<DataforseoLabsGoogleDomainIntersectionLiveRequestInfo> dataforseoLabsGoogleDomainIntersectionLiveRequestInfo, final ApiCallback _callback) throws ApiException {
        return googleDomainIntersectionLiveCall(dataforseoLabsGoogleDomainIntersectionLiveRequestInfo, _callback);

    }

    /**
     * 
     * ‌ This endpoint will provide you with the keywords for which both specified domains rank within the same SERP. You will get search volume, competition, cost-per-click and impressions data on each intersecting keyword. Along with that, you will get data on the first and second domain’s SERP element discovered for this keyword, as well as the estimated traffic volume and cost of ad traffic. Domain Intersection endpoint supports organic, paid, local pack, and featured snippet results. for more info please visit &#39;https://docs.dataforseo.com/v3/dataforseo_labs/google/domain_intersection/live/?bash&#39;
     * @param dataforseoLabsGoogleDomainIntersectionLiveRequestInfo  (optional)
     * @return DataforseoLabsGoogleDomainIntersectionLiveResponseInfo
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public DataforseoLabsGoogleDomainIntersectionLiveResponseInfo googleDomainIntersectionLive(List<DataforseoLabsGoogleDomainIntersectionLiveRequestInfo> dataforseoLabsGoogleDomainIntersectionLiveRequestInfo) throws ApiException {
        ApiResponse<DataforseoLabsGoogleDomainIntersectionLiveResponseInfo> localVarResp = googleDomainIntersectionLiveWithHttpInfo(dataforseoLabsGoogleDomainIntersectionLiveRequestInfo);
        return localVarResp.getData();
    }

    /**
     * 
     * ‌ This endpoint will provide you with the keywords for which both specified domains rank within the same SERP. You will get search volume, competition, cost-per-click and impressions data on each intersecting keyword. Along with that, you will get data on the first and second domain’s SERP element discovered for this keyword, as well as the estimated traffic volume and cost of ad traffic. Domain Intersection endpoint supports organic, paid, local pack, and featured snippet results. for more info please visit &#39;https://docs.dataforseo.com/v3/dataforseo_labs/google/domain_intersection/live/?bash&#39;
     * @param dataforseoLabsGoogleDomainIntersectionLiveRequestInfo  (optional)
     * @return ApiResponse&lt;DataforseoLabsGoogleDomainIntersectionLiveResponseInfo&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<DataforseoLabsGoogleDomainIntersectionLiveResponseInfo> googleDomainIntersectionLiveWithHttpInfo(List<DataforseoLabsGoogleDomainIntersectionLiveRequestInfo> dataforseoLabsGoogleDomainIntersectionLiveRequestInfo) throws ApiException {
        okhttp3.Call localVarCall = googleDomainIntersectionLiveValidateBeforeCall(dataforseoLabsGoogleDomainIntersectionLiveRequestInfo, null);
        Type localVarReturnType = new TypeToken<DataforseoLabsGoogleDomainIntersectionLiveResponseInfo>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * ‌ This endpoint will provide you with the keywords for which both specified domains rank within the same SERP. You will get search volume, competition, cost-per-click and impressions data on each intersecting keyword. Along with that, you will get data on the first and second domain’s SERP element discovered for this keyword, as well as the estimated traffic volume and cost of ad traffic. Domain Intersection endpoint supports organic, paid, local pack, and featured snippet results. for more info please visit &#39;https://docs.dataforseo.com/v3/dataforseo_labs/google/domain_intersection/live/?bash&#39;
     * @param dataforseoLabsGoogleDomainIntersectionLiveRequestInfo  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call googleDomainIntersectionLiveAsync(List<DataforseoLabsGoogleDomainIntersectionLiveRequestInfo> dataforseoLabsGoogleDomainIntersectionLiveRequestInfo, final ApiCallback<DataforseoLabsGoogleDomainIntersectionLiveResponseInfo> _callback) throws ApiException {

        okhttp3.Call localVarCall = googleDomainIntersectionLiveValidateBeforeCall(dataforseoLabsGoogleDomainIntersectionLiveRequestInfo, _callback);
        Type localVarReturnType = new TypeToken<DataforseoLabsGoogleDomainIntersectionLiveResponseInfo>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for googleDomainMetricsByCategoriesLive
     * @param dataforseoLabsGoogleDomainMetricsByCategoriesLiveRequestInfo  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call googleDomainMetricsByCategoriesLiveCall(List<DataforseoLabsGoogleDomainMetricsByCategoriesLiveRequestInfo> dataforseoLabsGoogleDomainMetricsByCategoriesLiveRequestInfo, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = dataforseoLabsGoogleDomainMetricsByCategoriesLiveRequestInfo;

        // create path and map variables
        String localVarPath = "/v3/dataforseo_labs/google/domain_metrics_by_categories/live";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "basicAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call googleDomainMetricsByCategoriesLiveValidateBeforeCall(List<DataforseoLabsGoogleDomainMetricsByCategoriesLiveRequestInfo> dataforseoLabsGoogleDomainMetricsByCategoriesLiveRequestInfo, final ApiCallback _callback) throws ApiException {
        return googleDomainMetricsByCategoriesLiveCall(dataforseoLabsGoogleDomainMetricsByCategoriesLiveRequestInfo, _callback);

    }

    /**
     * 
     * ‌ This endpoint will provide you with dynamics of change in metrics of domains relevant to the specified product and service categories. You will receive historical ranking data from Google SERPs, along with valuable current and historical domain metrics, such as ETV, impressions ETV, estimated paid traffic cost, the total count of SERPs that contain domains, and more. for more info please visit &#39;https://docs.dataforseo.com/v3/dataforseo_labs/google/domain_metrics_by_categories/live/?bash&#39;
     * @param dataforseoLabsGoogleDomainMetricsByCategoriesLiveRequestInfo  (optional)
     * @return DataforseoLabsGoogleDomainMetricsByCategoriesLiveResponseInfo
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public DataforseoLabsGoogleDomainMetricsByCategoriesLiveResponseInfo googleDomainMetricsByCategoriesLive(List<DataforseoLabsGoogleDomainMetricsByCategoriesLiveRequestInfo> dataforseoLabsGoogleDomainMetricsByCategoriesLiveRequestInfo) throws ApiException {
        ApiResponse<DataforseoLabsGoogleDomainMetricsByCategoriesLiveResponseInfo> localVarResp = googleDomainMetricsByCategoriesLiveWithHttpInfo(dataforseoLabsGoogleDomainMetricsByCategoriesLiveRequestInfo);
        return localVarResp.getData();
    }

    /**
     * 
     * ‌ This endpoint will provide you with dynamics of change in metrics of domains relevant to the specified product and service categories. You will receive historical ranking data from Google SERPs, along with valuable current and historical domain metrics, such as ETV, impressions ETV, estimated paid traffic cost, the total count of SERPs that contain domains, and more. for more info please visit &#39;https://docs.dataforseo.com/v3/dataforseo_labs/google/domain_metrics_by_categories/live/?bash&#39;
     * @param dataforseoLabsGoogleDomainMetricsByCategoriesLiveRequestInfo  (optional)
     * @return ApiResponse&lt;DataforseoLabsGoogleDomainMetricsByCategoriesLiveResponseInfo&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<DataforseoLabsGoogleDomainMetricsByCategoriesLiveResponseInfo> googleDomainMetricsByCategoriesLiveWithHttpInfo(List<DataforseoLabsGoogleDomainMetricsByCategoriesLiveRequestInfo> dataforseoLabsGoogleDomainMetricsByCategoriesLiveRequestInfo) throws ApiException {
        okhttp3.Call localVarCall = googleDomainMetricsByCategoriesLiveValidateBeforeCall(dataforseoLabsGoogleDomainMetricsByCategoriesLiveRequestInfo, null);
        Type localVarReturnType = new TypeToken<DataforseoLabsGoogleDomainMetricsByCategoriesLiveResponseInfo>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * ‌ This endpoint will provide you with dynamics of change in metrics of domains relevant to the specified product and service categories. You will receive historical ranking data from Google SERPs, along with valuable current and historical domain metrics, such as ETV, impressions ETV, estimated paid traffic cost, the total count of SERPs that contain domains, and more. for more info please visit &#39;https://docs.dataforseo.com/v3/dataforseo_labs/google/domain_metrics_by_categories/live/?bash&#39;
     * @param dataforseoLabsGoogleDomainMetricsByCategoriesLiveRequestInfo  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call googleDomainMetricsByCategoriesLiveAsync(List<DataforseoLabsGoogleDomainMetricsByCategoriesLiveRequestInfo> dataforseoLabsGoogleDomainMetricsByCategoriesLiveRequestInfo, final ApiCallback<DataforseoLabsGoogleDomainMetricsByCategoriesLiveResponseInfo> _callback) throws ApiException {

        okhttp3.Call localVarCall = googleDomainMetricsByCategoriesLiveValidateBeforeCall(dataforseoLabsGoogleDomainMetricsByCategoriesLiveRequestInfo, _callback);
        Type localVarReturnType = new TypeToken<DataforseoLabsGoogleDomainMetricsByCategoriesLiveResponseInfo>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for googleDomainRankOverviewLive
     * @param dataforseoLabsGoogleDomainRankOverviewLiveRequestInfo  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call googleDomainRankOverviewLiveCall(List<DataforseoLabsGoogleDomainRankOverviewLiveRequestInfo> dataforseoLabsGoogleDomainRankOverviewLiveRequestInfo, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = dataforseoLabsGoogleDomainRankOverviewLiveRequestInfo;

        // create path and map variables
        String localVarPath = "/v3/dataforseo_labs/google/domain_rank_overview/live";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "basicAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call googleDomainRankOverviewLiveValidateBeforeCall(List<DataforseoLabsGoogleDomainRankOverviewLiveRequestInfo> dataforseoLabsGoogleDomainRankOverviewLiveRequestInfo, final ApiCallback _callback) throws ApiException {
        return googleDomainRankOverviewLiveCall(dataforseoLabsGoogleDomainRankOverviewLiveRequestInfo, _callback);

    }

    /**
     * 
     * ‌ This endpoint will provide you with ranking and traffic data from organic and paid search for the specified domain. You will be able to review the domain ranking distribution in SERPs as well as estimated monthly traffic volume for both organic and paid results. for more info please visit &#39;https://docs.dataforseo.com/v3/dataforseo_labs/google/domain_rank_overview/live/?bash&#39;
     * @param dataforseoLabsGoogleDomainRankOverviewLiveRequestInfo  (optional)
     * @return DataforseoLabsGoogleDomainRankOverviewLiveResponseInfo
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public DataforseoLabsGoogleDomainRankOverviewLiveResponseInfo googleDomainRankOverviewLive(List<DataforseoLabsGoogleDomainRankOverviewLiveRequestInfo> dataforseoLabsGoogleDomainRankOverviewLiveRequestInfo) throws ApiException {
        ApiResponse<DataforseoLabsGoogleDomainRankOverviewLiveResponseInfo> localVarResp = googleDomainRankOverviewLiveWithHttpInfo(dataforseoLabsGoogleDomainRankOverviewLiveRequestInfo);
        return localVarResp.getData();
    }

    /**
     * 
     * ‌ This endpoint will provide you with ranking and traffic data from organic and paid search for the specified domain. You will be able to review the domain ranking distribution in SERPs as well as estimated monthly traffic volume for both organic and paid results. for more info please visit &#39;https://docs.dataforseo.com/v3/dataforseo_labs/google/domain_rank_overview/live/?bash&#39;
     * @param dataforseoLabsGoogleDomainRankOverviewLiveRequestInfo  (optional)
     * @return ApiResponse&lt;DataforseoLabsGoogleDomainRankOverviewLiveResponseInfo&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<DataforseoLabsGoogleDomainRankOverviewLiveResponseInfo> googleDomainRankOverviewLiveWithHttpInfo(List<DataforseoLabsGoogleDomainRankOverviewLiveRequestInfo> dataforseoLabsGoogleDomainRankOverviewLiveRequestInfo) throws ApiException {
        okhttp3.Call localVarCall = googleDomainRankOverviewLiveValidateBeforeCall(dataforseoLabsGoogleDomainRankOverviewLiveRequestInfo, null);
        Type localVarReturnType = new TypeToken<DataforseoLabsGoogleDomainRankOverviewLiveResponseInfo>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * ‌ This endpoint will provide you with ranking and traffic data from organic and paid search for the specified domain. You will be able to review the domain ranking distribution in SERPs as well as estimated monthly traffic volume for both organic and paid results. for more info please visit &#39;https://docs.dataforseo.com/v3/dataforseo_labs/google/domain_rank_overview/live/?bash&#39;
     * @param dataforseoLabsGoogleDomainRankOverviewLiveRequestInfo  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call googleDomainRankOverviewLiveAsync(List<DataforseoLabsGoogleDomainRankOverviewLiveRequestInfo> dataforseoLabsGoogleDomainRankOverviewLiveRequestInfo, final ApiCallback<DataforseoLabsGoogleDomainRankOverviewLiveResponseInfo> _callback) throws ApiException {

        okhttp3.Call localVarCall = googleDomainRankOverviewLiveValidateBeforeCall(dataforseoLabsGoogleDomainRankOverviewLiveRequestInfo, _callback);
        Type localVarReturnType = new TypeToken<DataforseoLabsGoogleDomainRankOverviewLiveResponseInfo>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for googleDomainWhoisOverviewLive
     * @param dataforseoLabsGoogleDomainWhoisOverviewLiveRequestInfo  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call googleDomainWhoisOverviewLiveCall(List<DataforseoLabsGoogleDomainWhoisOverviewLiveRequestInfo> dataforseoLabsGoogleDomainWhoisOverviewLiveRequestInfo, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = dataforseoLabsGoogleDomainWhoisOverviewLiveRequestInfo;

        // create path and map variables
        String localVarPath = "/v3/dataforseo_labs/google/domain_whois_overview/live";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "basicAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call googleDomainWhoisOverviewLiveValidateBeforeCall(List<DataforseoLabsGoogleDomainWhoisOverviewLiveRequestInfo> dataforseoLabsGoogleDomainWhoisOverviewLiveRequestInfo, final ApiCallback _callback) throws ApiException {
        return googleDomainWhoisOverviewLiveCall(dataforseoLabsGoogleDomainWhoisOverviewLiveRequestInfo, _callback);

    }

    /**
     * 
     * ‌ This endpoint will provide you with Whois data enriched with ranking and traffic info from organic and paid search results. Using this endpoint you will be able to get all these data for the domains matching the parameters you specify in the request. for more info please visit &#39;https://docs.dataforseo.com/v3/dataforseo_labs/google/domain_whois_overview/live/?bash&#39;
     * @param dataforseoLabsGoogleDomainWhoisOverviewLiveRequestInfo  (optional)
     * @return DataforseoLabsGoogleDomainWhoisOverviewLiveResponseInfo
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public DataforseoLabsGoogleDomainWhoisOverviewLiveResponseInfo googleDomainWhoisOverviewLive(List<DataforseoLabsGoogleDomainWhoisOverviewLiveRequestInfo> dataforseoLabsGoogleDomainWhoisOverviewLiveRequestInfo) throws ApiException {
        ApiResponse<DataforseoLabsGoogleDomainWhoisOverviewLiveResponseInfo> localVarResp = googleDomainWhoisOverviewLiveWithHttpInfo(dataforseoLabsGoogleDomainWhoisOverviewLiveRequestInfo);
        return localVarResp.getData();
    }

    /**
     * 
     * ‌ This endpoint will provide you with Whois data enriched with ranking and traffic info from organic and paid search results. Using this endpoint you will be able to get all these data for the domains matching the parameters you specify in the request. for more info please visit &#39;https://docs.dataforseo.com/v3/dataforseo_labs/google/domain_whois_overview/live/?bash&#39;
     * @param dataforseoLabsGoogleDomainWhoisOverviewLiveRequestInfo  (optional)
     * @return ApiResponse&lt;DataforseoLabsGoogleDomainWhoisOverviewLiveResponseInfo&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<DataforseoLabsGoogleDomainWhoisOverviewLiveResponseInfo> googleDomainWhoisOverviewLiveWithHttpInfo(List<DataforseoLabsGoogleDomainWhoisOverviewLiveRequestInfo> dataforseoLabsGoogleDomainWhoisOverviewLiveRequestInfo) throws ApiException {
        okhttp3.Call localVarCall = googleDomainWhoisOverviewLiveValidateBeforeCall(dataforseoLabsGoogleDomainWhoisOverviewLiveRequestInfo, null);
        Type localVarReturnType = new TypeToken<DataforseoLabsGoogleDomainWhoisOverviewLiveResponseInfo>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * ‌ This endpoint will provide you with Whois data enriched with ranking and traffic info from organic and paid search results. Using this endpoint you will be able to get all these data for the domains matching the parameters you specify in the request. for more info please visit &#39;https://docs.dataforseo.com/v3/dataforseo_labs/google/domain_whois_overview/live/?bash&#39;
     * @param dataforseoLabsGoogleDomainWhoisOverviewLiveRequestInfo  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call googleDomainWhoisOverviewLiveAsync(List<DataforseoLabsGoogleDomainWhoisOverviewLiveRequestInfo> dataforseoLabsGoogleDomainWhoisOverviewLiveRequestInfo, final ApiCallback<DataforseoLabsGoogleDomainWhoisOverviewLiveResponseInfo> _callback) throws ApiException {

        okhttp3.Call localVarCall = googleDomainWhoisOverviewLiveValidateBeforeCall(dataforseoLabsGoogleDomainWhoisOverviewLiveRequestInfo, _callback);
        Type localVarReturnType = new TypeToken<DataforseoLabsGoogleDomainWhoisOverviewLiveResponseInfo>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for googleHistoricalBulkTrafficEstimationLive
     * @param dataforseoLabsGoogleHistoricalBulkTrafficEstimationLiveRequestInfo  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call googleHistoricalBulkTrafficEstimationLiveCall(List<DataforseoLabsGoogleHistoricalBulkTrafficEstimationLiveRequestInfo> dataforseoLabsGoogleHistoricalBulkTrafficEstimationLiveRequestInfo, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = dataforseoLabsGoogleHistoricalBulkTrafficEstimationLiveRequestInfo;

        // create path and map variables
        String localVarPath = "/v3/dataforseo_labs/google/historical_bulk_traffic_estimation/live";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "basicAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call googleHistoricalBulkTrafficEstimationLiveValidateBeforeCall(List<DataforseoLabsGoogleHistoricalBulkTrafficEstimationLiveRequestInfo> dataforseoLabsGoogleHistoricalBulkTrafficEstimationLiveRequestInfo, final ApiCallback _callback) throws ApiException {
        return googleHistoricalBulkTrafficEstimationLiveCall(dataforseoLabsGoogleHistoricalBulkTrafficEstimationLiveRequestInfo, _callback);

    }

    /**
     * 
     * ‌ This endpoint will provide you with historical monthly traffic volumes for up to 1,000 domains collected within the specified time range through October 2020. If you do not specify the range, data will be returned for the previous 12 months. Along with organic search traffic estimations, you will also get separate values for paid search, featured snippet, and local pack results. for more info please visit &#39;https://docs.dataforseo.com/v3/dataforseo_labs/google/historical_bulk_traffic_estimation/live/?bash&#39;
     * @param dataforseoLabsGoogleHistoricalBulkTrafficEstimationLiveRequestInfo  (optional)
     * @return DataforseoLabsGoogleHistoricalBulkTrafficEstimationLiveResponseInfo
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public DataforseoLabsGoogleHistoricalBulkTrafficEstimationLiveResponseInfo googleHistoricalBulkTrafficEstimationLive(List<DataforseoLabsGoogleHistoricalBulkTrafficEstimationLiveRequestInfo> dataforseoLabsGoogleHistoricalBulkTrafficEstimationLiveRequestInfo) throws ApiException {
        ApiResponse<DataforseoLabsGoogleHistoricalBulkTrafficEstimationLiveResponseInfo> localVarResp = googleHistoricalBulkTrafficEstimationLiveWithHttpInfo(dataforseoLabsGoogleHistoricalBulkTrafficEstimationLiveRequestInfo);
        return localVarResp.getData();
    }

    /**
     * 
     * ‌ This endpoint will provide you with historical monthly traffic volumes for up to 1,000 domains collected within the specified time range through October 2020. If you do not specify the range, data will be returned for the previous 12 months. Along with organic search traffic estimations, you will also get separate values for paid search, featured snippet, and local pack results. for more info please visit &#39;https://docs.dataforseo.com/v3/dataforseo_labs/google/historical_bulk_traffic_estimation/live/?bash&#39;
     * @param dataforseoLabsGoogleHistoricalBulkTrafficEstimationLiveRequestInfo  (optional)
     * @return ApiResponse&lt;DataforseoLabsGoogleHistoricalBulkTrafficEstimationLiveResponseInfo&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<DataforseoLabsGoogleHistoricalBulkTrafficEstimationLiveResponseInfo> googleHistoricalBulkTrafficEstimationLiveWithHttpInfo(List<DataforseoLabsGoogleHistoricalBulkTrafficEstimationLiveRequestInfo> dataforseoLabsGoogleHistoricalBulkTrafficEstimationLiveRequestInfo) throws ApiException {
        okhttp3.Call localVarCall = googleHistoricalBulkTrafficEstimationLiveValidateBeforeCall(dataforseoLabsGoogleHistoricalBulkTrafficEstimationLiveRequestInfo, null);
        Type localVarReturnType = new TypeToken<DataforseoLabsGoogleHistoricalBulkTrafficEstimationLiveResponseInfo>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * ‌ This endpoint will provide you with historical monthly traffic volumes for up to 1,000 domains collected within the specified time range through October 2020. If you do not specify the range, data will be returned for the previous 12 months. Along with organic search traffic estimations, you will also get separate values for paid search, featured snippet, and local pack results. for more info please visit &#39;https://docs.dataforseo.com/v3/dataforseo_labs/google/historical_bulk_traffic_estimation/live/?bash&#39;
     * @param dataforseoLabsGoogleHistoricalBulkTrafficEstimationLiveRequestInfo  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call googleHistoricalBulkTrafficEstimationLiveAsync(List<DataforseoLabsGoogleHistoricalBulkTrafficEstimationLiveRequestInfo> dataforseoLabsGoogleHistoricalBulkTrafficEstimationLiveRequestInfo, final ApiCallback<DataforseoLabsGoogleHistoricalBulkTrafficEstimationLiveResponseInfo> _callback) throws ApiException {

        okhttp3.Call localVarCall = googleHistoricalBulkTrafficEstimationLiveValidateBeforeCall(dataforseoLabsGoogleHistoricalBulkTrafficEstimationLiveRequestInfo, _callback);
        Type localVarReturnType = new TypeToken<DataforseoLabsGoogleHistoricalBulkTrafficEstimationLiveResponseInfo>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for googleHistoricalRankOverviewLive
     * @param dataforseoLabsGoogleHistoricalRankOverviewLiveRequestInfo  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call googleHistoricalRankOverviewLiveCall(List<DataforseoLabsGoogleHistoricalRankOverviewLiveRequestInfo> dataforseoLabsGoogleHistoricalRankOverviewLiveRequestInfo, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = dataforseoLabsGoogleHistoricalRankOverviewLiveRequestInfo;

        // create path and map variables
        String localVarPath = "/v3/dataforseo_labs/google/historical_rank_overview/live";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "basicAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call googleHistoricalRankOverviewLiveValidateBeforeCall(List<DataforseoLabsGoogleHistoricalRankOverviewLiveRequestInfo> dataforseoLabsGoogleHistoricalRankOverviewLiveRequestInfo, final ApiCallback _callback) throws ApiException {
        return googleHistoricalRankOverviewLiveCall(dataforseoLabsGoogleHistoricalRankOverviewLiveRequestInfo, _callback);

    }

    /**
     * 
     * ‌ This endpoint will provide you with historical data on rankings and traffic of the specified domain, such as domain ranking distribution in SERPs and estimated monthly traffic volume for both organic and paid results. for more info please visit &#39;https://docs.dataforseo.com/v3/dataforseo_labs/google/historical_rank_overview/live/?bash&#39;
     * @param dataforseoLabsGoogleHistoricalRankOverviewLiveRequestInfo  (optional)
     * @return DataforseoLabsGoogleHistoricalRankOverviewLiveResponseInfo
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public DataforseoLabsGoogleHistoricalRankOverviewLiveResponseInfo googleHistoricalRankOverviewLive(List<DataforseoLabsGoogleHistoricalRankOverviewLiveRequestInfo> dataforseoLabsGoogleHistoricalRankOverviewLiveRequestInfo) throws ApiException {
        ApiResponse<DataforseoLabsGoogleHistoricalRankOverviewLiveResponseInfo> localVarResp = googleHistoricalRankOverviewLiveWithHttpInfo(dataforseoLabsGoogleHistoricalRankOverviewLiveRequestInfo);
        return localVarResp.getData();
    }

    /**
     * 
     * ‌ This endpoint will provide you with historical data on rankings and traffic of the specified domain, such as domain ranking distribution in SERPs and estimated monthly traffic volume for both organic and paid results. for more info please visit &#39;https://docs.dataforseo.com/v3/dataforseo_labs/google/historical_rank_overview/live/?bash&#39;
     * @param dataforseoLabsGoogleHistoricalRankOverviewLiveRequestInfo  (optional)
     * @return ApiResponse&lt;DataforseoLabsGoogleHistoricalRankOverviewLiveResponseInfo&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<DataforseoLabsGoogleHistoricalRankOverviewLiveResponseInfo> googleHistoricalRankOverviewLiveWithHttpInfo(List<DataforseoLabsGoogleHistoricalRankOverviewLiveRequestInfo> dataforseoLabsGoogleHistoricalRankOverviewLiveRequestInfo) throws ApiException {
        okhttp3.Call localVarCall = googleHistoricalRankOverviewLiveValidateBeforeCall(dataforseoLabsGoogleHistoricalRankOverviewLiveRequestInfo, null);
        Type localVarReturnType = new TypeToken<DataforseoLabsGoogleHistoricalRankOverviewLiveResponseInfo>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * ‌ This endpoint will provide you with historical data on rankings and traffic of the specified domain, such as domain ranking distribution in SERPs and estimated monthly traffic volume for both organic and paid results. for more info please visit &#39;https://docs.dataforseo.com/v3/dataforseo_labs/google/historical_rank_overview/live/?bash&#39;
     * @param dataforseoLabsGoogleHistoricalRankOverviewLiveRequestInfo  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call googleHistoricalRankOverviewLiveAsync(List<DataforseoLabsGoogleHistoricalRankOverviewLiveRequestInfo> dataforseoLabsGoogleHistoricalRankOverviewLiveRequestInfo, final ApiCallback<DataforseoLabsGoogleHistoricalRankOverviewLiveResponseInfo> _callback) throws ApiException {

        okhttp3.Call localVarCall = googleHistoricalRankOverviewLiveValidateBeforeCall(dataforseoLabsGoogleHistoricalRankOverviewLiveRequestInfo, _callback);
        Type localVarReturnType = new TypeToken<DataforseoLabsGoogleHistoricalRankOverviewLiveResponseInfo>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for googleHistoricalSearchVolumeLive
     * @param dataforseoLabsGoogleHistoricalSearchVolumeLiveRequestInfo  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call googleHistoricalSearchVolumeLiveCall(List<DataforseoLabsGoogleHistoricalSearchVolumeLiveRequestInfo> dataforseoLabsGoogleHistoricalSearchVolumeLiveRequestInfo, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = dataforseoLabsGoogleHistoricalSearchVolumeLiveRequestInfo;

        // create path and map variables
        String localVarPath = "/v3/dataforseo_labs/google/historical_search_volume/live";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "basicAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call googleHistoricalSearchVolumeLiveValidateBeforeCall(List<DataforseoLabsGoogleHistoricalSearchVolumeLiveRequestInfo> dataforseoLabsGoogleHistoricalSearchVolumeLiveRequestInfo, final ApiCallback _callback) throws ApiException {
        return googleHistoricalSearchVolumeLiveCall(dataforseoLabsGoogleHistoricalSearchVolumeLiveRequestInfo, _callback);

    }

    /**
     * 
     * ‌‌  This endpoint will provide you with Google historical search volume, current cost-per-click, and competition values for paid search, as well as current impressions and SERP. You can get historical search volume data since the beginning of 2019, depending on keywords along with location and language combination. You can find the list of supported locations and languages here. for more info please visit &#39;https://docs.dataforseo.com/v3/dataforseo_labs/google/historical_search_volume/live/?bash&#39;
     * @param dataforseoLabsGoogleHistoricalSearchVolumeLiveRequestInfo  (optional)
     * @return DataforseoLabsGoogleHistoricalSearchVolumeLiveResponseInfo
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public DataforseoLabsGoogleHistoricalSearchVolumeLiveResponseInfo googleHistoricalSearchVolumeLive(List<DataforseoLabsGoogleHistoricalSearchVolumeLiveRequestInfo> dataforseoLabsGoogleHistoricalSearchVolumeLiveRequestInfo) throws ApiException {
        ApiResponse<DataforseoLabsGoogleHistoricalSearchVolumeLiveResponseInfo> localVarResp = googleHistoricalSearchVolumeLiveWithHttpInfo(dataforseoLabsGoogleHistoricalSearchVolumeLiveRequestInfo);
        return localVarResp.getData();
    }

    /**
     * 
     * ‌‌  This endpoint will provide you with Google historical search volume, current cost-per-click, and competition values for paid search, as well as current impressions and SERP. You can get historical search volume data since the beginning of 2019, depending on keywords along with location and language combination. You can find the list of supported locations and languages here. for more info please visit &#39;https://docs.dataforseo.com/v3/dataforseo_labs/google/historical_search_volume/live/?bash&#39;
     * @param dataforseoLabsGoogleHistoricalSearchVolumeLiveRequestInfo  (optional)
     * @return ApiResponse&lt;DataforseoLabsGoogleHistoricalSearchVolumeLiveResponseInfo&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<DataforseoLabsGoogleHistoricalSearchVolumeLiveResponseInfo> googleHistoricalSearchVolumeLiveWithHttpInfo(List<DataforseoLabsGoogleHistoricalSearchVolumeLiveRequestInfo> dataforseoLabsGoogleHistoricalSearchVolumeLiveRequestInfo) throws ApiException {
        okhttp3.Call localVarCall = googleHistoricalSearchVolumeLiveValidateBeforeCall(dataforseoLabsGoogleHistoricalSearchVolumeLiveRequestInfo, null);
        Type localVarReturnType = new TypeToken<DataforseoLabsGoogleHistoricalSearchVolumeLiveResponseInfo>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * ‌‌  This endpoint will provide you with Google historical search volume, current cost-per-click, and competition values for paid search, as well as current impressions and SERP. You can get historical search volume data since the beginning of 2019, depending on keywords along with location and language combination. You can find the list of supported locations and languages here. for more info please visit &#39;https://docs.dataforseo.com/v3/dataforseo_labs/google/historical_search_volume/live/?bash&#39;
     * @param dataforseoLabsGoogleHistoricalSearchVolumeLiveRequestInfo  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call googleHistoricalSearchVolumeLiveAsync(List<DataforseoLabsGoogleHistoricalSearchVolumeLiveRequestInfo> dataforseoLabsGoogleHistoricalSearchVolumeLiveRequestInfo, final ApiCallback<DataforseoLabsGoogleHistoricalSearchVolumeLiveResponseInfo> _callback) throws ApiException {

        okhttp3.Call localVarCall = googleHistoricalSearchVolumeLiveValidateBeforeCall(dataforseoLabsGoogleHistoricalSearchVolumeLiveRequestInfo, _callback);
        Type localVarReturnType = new TypeToken<DataforseoLabsGoogleHistoricalSearchVolumeLiveResponseInfo>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for googleHistoricalSerpsLive
     * @param dataforseoLabsGoogleHistoricalSerpsLiveRequestInfo  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call googleHistoricalSerpsLiveCall(List<DataforseoLabsGoogleHistoricalSerpsLiveRequestInfo> dataforseoLabsGoogleHistoricalSerpsLiveRequestInfo, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = dataforseoLabsGoogleHistoricalSerpsLiveRequestInfo;

        // create path and map variables
        String localVarPath = "/v3/dataforseo_labs/google/historical_serps/live";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "basicAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call googleHistoricalSerpsLiveValidateBeforeCall(List<DataforseoLabsGoogleHistoricalSerpsLiveRequestInfo> dataforseoLabsGoogleHistoricalSerpsLiveRequestInfo, final ApiCallback _callback) throws ApiException {
        return googleHistoricalSerpsLiveCall(dataforseoLabsGoogleHistoricalSerpsLiveRequestInfo, _callback);

    }

    /**
     * 
     * ‌ This endpoint will provide you with Google SERPs collected within the specified time frame. You will also receive a complete overview of featured snippets and other extra elements that were present within the specified dates. The data will allow you to analyze the dynamics of keyword rankings over time for the specified keyword and location. for more info please visit &#39;https://docs.dataforseo.com/v3/dataforseo_labs/google/historical_serps/live/?bash&#39;
     * @param dataforseoLabsGoogleHistoricalSerpsLiveRequestInfo  (optional)
     * @return DataforseoLabsGoogleHistoricalSerpsLiveResponseInfo
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public DataforseoLabsGoogleHistoricalSerpsLiveResponseInfo googleHistoricalSerpsLive(List<DataforseoLabsGoogleHistoricalSerpsLiveRequestInfo> dataforseoLabsGoogleHistoricalSerpsLiveRequestInfo) throws ApiException {
        ApiResponse<DataforseoLabsGoogleHistoricalSerpsLiveResponseInfo> localVarResp = googleHistoricalSerpsLiveWithHttpInfo(dataforseoLabsGoogleHistoricalSerpsLiveRequestInfo);
        return localVarResp.getData();
    }

    /**
     * 
     * ‌ This endpoint will provide you with Google SERPs collected within the specified time frame. You will also receive a complete overview of featured snippets and other extra elements that were present within the specified dates. The data will allow you to analyze the dynamics of keyword rankings over time for the specified keyword and location. for more info please visit &#39;https://docs.dataforseo.com/v3/dataforseo_labs/google/historical_serps/live/?bash&#39;
     * @param dataforseoLabsGoogleHistoricalSerpsLiveRequestInfo  (optional)
     * @return ApiResponse&lt;DataforseoLabsGoogleHistoricalSerpsLiveResponseInfo&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<DataforseoLabsGoogleHistoricalSerpsLiveResponseInfo> googleHistoricalSerpsLiveWithHttpInfo(List<DataforseoLabsGoogleHistoricalSerpsLiveRequestInfo> dataforseoLabsGoogleHistoricalSerpsLiveRequestInfo) throws ApiException {
        okhttp3.Call localVarCall = googleHistoricalSerpsLiveValidateBeforeCall(dataforseoLabsGoogleHistoricalSerpsLiveRequestInfo, null);
        Type localVarReturnType = new TypeToken<DataforseoLabsGoogleHistoricalSerpsLiveResponseInfo>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * ‌ This endpoint will provide you with Google SERPs collected within the specified time frame. You will also receive a complete overview of featured snippets and other extra elements that were present within the specified dates. The data will allow you to analyze the dynamics of keyword rankings over time for the specified keyword and location. for more info please visit &#39;https://docs.dataforseo.com/v3/dataforseo_labs/google/historical_serps/live/?bash&#39;
     * @param dataforseoLabsGoogleHistoricalSerpsLiveRequestInfo  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call googleHistoricalSerpsLiveAsync(List<DataforseoLabsGoogleHistoricalSerpsLiveRequestInfo> dataforseoLabsGoogleHistoricalSerpsLiveRequestInfo, final ApiCallback<DataforseoLabsGoogleHistoricalSerpsLiveResponseInfo> _callback) throws ApiException {

        okhttp3.Call localVarCall = googleHistoricalSerpsLiveValidateBeforeCall(dataforseoLabsGoogleHistoricalSerpsLiveRequestInfo, _callback);
        Type localVarReturnType = new TypeToken<DataforseoLabsGoogleHistoricalSerpsLiveResponseInfo>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for googleKeywordIdeasLive
     * @param dataforseoLabsGoogleKeywordIdeasLiveRequestInfo  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call googleKeywordIdeasLiveCall(List<DataforseoLabsGoogleKeywordIdeasLiveRequestInfo> dataforseoLabsGoogleKeywordIdeasLiveRequestInfo, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = dataforseoLabsGoogleKeywordIdeasLiveRequestInfo;

        // create path and map variables
        String localVarPath = "/v3/dataforseo_labs/google/keyword_ideas/live";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "basicAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call googleKeywordIdeasLiveValidateBeforeCall(List<DataforseoLabsGoogleKeywordIdeasLiveRequestInfo> dataforseoLabsGoogleKeywordIdeasLiveRequestInfo, final ApiCallback _callback) throws ApiException {
        return googleKeywordIdeasLiveCall(dataforseoLabsGoogleKeywordIdeasLiveRequestInfo, _callback);

    }

    /**
     * 
     * ‌ The Keyword Ideas endpoint provides search terms that are relevant to the product or service categories of the specified keywords. The algorithm selects the keywords which fall into the same categories as the seed keywords specified in a POST array. for more info please visit &#39;https://docs.dataforseo.com/v3/dataforseo_labs/google/keyword_ideas/live/?bash&#39;
     * @param dataforseoLabsGoogleKeywordIdeasLiveRequestInfo  (optional)
     * @return DataforseoLabsGoogleKeywordIdeasLiveResponseInfo
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public DataforseoLabsGoogleKeywordIdeasLiveResponseInfo googleKeywordIdeasLive(List<DataforseoLabsGoogleKeywordIdeasLiveRequestInfo> dataforseoLabsGoogleKeywordIdeasLiveRequestInfo) throws ApiException {
        ApiResponse<DataforseoLabsGoogleKeywordIdeasLiveResponseInfo> localVarResp = googleKeywordIdeasLiveWithHttpInfo(dataforseoLabsGoogleKeywordIdeasLiveRequestInfo);
        return localVarResp.getData();
    }

    /**
     * 
     * ‌ The Keyword Ideas endpoint provides search terms that are relevant to the product or service categories of the specified keywords. The algorithm selects the keywords which fall into the same categories as the seed keywords specified in a POST array. for more info please visit &#39;https://docs.dataforseo.com/v3/dataforseo_labs/google/keyword_ideas/live/?bash&#39;
     * @param dataforseoLabsGoogleKeywordIdeasLiveRequestInfo  (optional)
     * @return ApiResponse&lt;DataforseoLabsGoogleKeywordIdeasLiveResponseInfo&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<DataforseoLabsGoogleKeywordIdeasLiveResponseInfo> googleKeywordIdeasLiveWithHttpInfo(List<DataforseoLabsGoogleKeywordIdeasLiveRequestInfo> dataforseoLabsGoogleKeywordIdeasLiveRequestInfo) throws ApiException {
        okhttp3.Call localVarCall = googleKeywordIdeasLiveValidateBeforeCall(dataforseoLabsGoogleKeywordIdeasLiveRequestInfo, null);
        Type localVarReturnType = new TypeToken<DataforseoLabsGoogleKeywordIdeasLiveResponseInfo>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * ‌ The Keyword Ideas endpoint provides search terms that are relevant to the product or service categories of the specified keywords. The algorithm selects the keywords which fall into the same categories as the seed keywords specified in a POST array. for more info please visit &#39;https://docs.dataforseo.com/v3/dataforseo_labs/google/keyword_ideas/live/?bash&#39;
     * @param dataforseoLabsGoogleKeywordIdeasLiveRequestInfo  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call googleKeywordIdeasLiveAsync(List<DataforseoLabsGoogleKeywordIdeasLiveRequestInfo> dataforseoLabsGoogleKeywordIdeasLiveRequestInfo, final ApiCallback<DataforseoLabsGoogleKeywordIdeasLiveResponseInfo> _callback) throws ApiException {

        okhttp3.Call localVarCall = googleKeywordIdeasLiveValidateBeforeCall(dataforseoLabsGoogleKeywordIdeasLiveRequestInfo, _callback);
        Type localVarReturnType = new TypeToken<DataforseoLabsGoogleKeywordIdeasLiveResponseInfo>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for googleKeywordSuggestionsLive
     * @param dataforseoLabsGoogleKeywordSuggestionsLiveRequestInfo  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call googleKeywordSuggestionsLiveCall(List<DataforseoLabsGoogleKeywordSuggestionsLiveRequestInfo> dataforseoLabsGoogleKeywordSuggestionsLiveRequestInfo, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = dataforseoLabsGoogleKeywordSuggestionsLiveRequestInfo;

        // create path and map variables
        String localVarPath = "/v3/dataforseo_labs/google/keyword_suggestions/live";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "basicAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call googleKeywordSuggestionsLiveValidateBeforeCall(List<DataforseoLabsGoogleKeywordSuggestionsLiveRequestInfo> dataforseoLabsGoogleKeywordSuggestionsLiveRequestInfo, final ApiCallback _callback) throws ApiException {
        return googleKeywordSuggestionsLiveCall(dataforseoLabsGoogleKeywordSuggestionsLiveRequestInfo, _callback);

    }

    /**
     * 
     * ‌‌ The Keyword Suggestions endpoint provides search queries that include the specified seed keyword. for more info please visit &#39;https://docs.dataforseo.com/v3/dataforseo_labs/google/keyword_suggestions/live/?bash&#39;
     * @param dataforseoLabsGoogleKeywordSuggestionsLiveRequestInfo  (optional)
     * @return DataforseoLabsGoogleKeywordSuggestionsLiveResponseInfo
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public DataforseoLabsGoogleKeywordSuggestionsLiveResponseInfo googleKeywordSuggestionsLive(List<DataforseoLabsGoogleKeywordSuggestionsLiveRequestInfo> dataforseoLabsGoogleKeywordSuggestionsLiveRequestInfo) throws ApiException {
        ApiResponse<DataforseoLabsGoogleKeywordSuggestionsLiveResponseInfo> localVarResp = googleKeywordSuggestionsLiveWithHttpInfo(dataforseoLabsGoogleKeywordSuggestionsLiveRequestInfo);
        return localVarResp.getData();
    }

    /**
     * 
     * ‌‌ The Keyword Suggestions endpoint provides search queries that include the specified seed keyword. for more info please visit &#39;https://docs.dataforseo.com/v3/dataforseo_labs/google/keyword_suggestions/live/?bash&#39;
     * @param dataforseoLabsGoogleKeywordSuggestionsLiveRequestInfo  (optional)
     * @return ApiResponse&lt;DataforseoLabsGoogleKeywordSuggestionsLiveResponseInfo&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<DataforseoLabsGoogleKeywordSuggestionsLiveResponseInfo> googleKeywordSuggestionsLiveWithHttpInfo(List<DataforseoLabsGoogleKeywordSuggestionsLiveRequestInfo> dataforseoLabsGoogleKeywordSuggestionsLiveRequestInfo) throws ApiException {
        okhttp3.Call localVarCall = googleKeywordSuggestionsLiveValidateBeforeCall(dataforseoLabsGoogleKeywordSuggestionsLiveRequestInfo, null);
        Type localVarReturnType = new TypeToken<DataforseoLabsGoogleKeywordSuggestionsLiveResponseInfo>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * ‌‌ The Keyword Suggestions endpoint provides search queries that include the specified seed keyword. for more info please visit &#39;https://docs.dataforseo.com/v3/dataforseo_labs/google/keyword_suggestions/live/?bash&#39;
     * @param dataforseoLabsGoogleKeywordSuggestionsLiveRequestInfo  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call googleKeywordSuggestionsLiveAsync(List<DataforseoLabsGoogleKeywordSuggestionsLiveRequestInfo> dataforseoLabsGoogleKeywordSuggestionsLiveRequestInfo, final ApiCallback<DataforseoLabsGoogleKeywordSuggestionsLiveResponseInfo> _callback) throws ApiException {

        okhttp3.Call localVarCall = googleKeywordSuggestionsLiveValidateBeforeCall(dataforseoLabsGoogleKeywordSuggestionsLiveRequestInfo, _callback);
        Type localVarReturnType = new TypeToken<DataforseoLabsGoogleKeywordSuggestionsLiveResponseInfo>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for googleKeywordsForAppLive
     * @param dataforseoLabsGoogleKeywordsForAppLiveRequestInfo  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call googleKeywordsForAppLiveCall(List<DataforseoLabsGoogleKeywordsForAppLiveRequestInfo> dataforseoLabsGoogleKeywordsForAppLiveRequestInfo, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = dataforseoLabsGoogleKeywordsForAppLiveRequestInfo;

        // create path and map variables
        String localVarPath = "/v3/dataforseo_labs/google/keywords_for_app/live";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "basicAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call googleKeywordsForAppLiveValidateBeforeCall(List<DataforseoLabsGoogleKeywordsForAppLiveRequestInfo> dataforseoLabsGoogleKeywordsForAppLiveRequestInfo, final ApiCallback _callback) throws ApiException {
        return googleKeywordsForAppLiveCall(dataforseoLabsGoogleKeywordsForAppLiveRequestInfo, _callback);

    }

    /**
     * 
     * ‌ This endpoint will provide you with a list of keywords for which the target app ranks on Google Play. You will obtain keyword data and discover the app’s ranking position for each returned keyword. for more info please visit &#39;https://docs.dataforseo.com/v3/dataforseo_labs/google/keywords_for_app/live/?bash&#39;
     * @param dataforseoLabsGoogleKeywordsForAppLiveRequestInfo  (optional)
     * @return DataforseoLabsGoogleKeywordsForAppLiveResponseInfo
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public DataforseoLabsGoogleKeywordsForAppLiveResponseInfo googleKeywordsForAppLive(List<DataforseoLabsGoogleKeywordsForAppLiveRequestInfo> dataforseoLabsGoogleKeywordsForAppLiveRequestInfo) throws ApiException {
        ApiResponse<DataforseoLabsGoogleKeywordsForAppLiveResponseInfo> localVarResp = googleKeywordsForAppLiveWithHttpInfo(dataforseoLabsGoogleKeywordsForAppLiveRequestInfo);
        return localVarResp.getData();
    }

    /**
     * 
     * ‌ This endpoint will provide you with a list of keywords for which the target app ranks on Google Play. You will obtain keyword data and discover the app’s ranking position for each returned keyword. for more info please visit &#39;https://docs.dataforseo.com/v3/dataforseo_labs/google/keywords_for_app/live/?bash&#39;
     * @param dataforseoLabsGoogleKeywordsForAppLiveRequestInfo  (optional)
     * @return ApiResponse&lt;DataforseoLabsGoogleKeywordsForAppLiveResponseInfo&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<DataforseoLabsGoogleKeywordsForAppLiveResponseInfo> googleKeywordsForAppLiveWithHttpInfo(List<DataforseoLabsGoogleKeywordsForAppLiveRequestInfo> dataforseoLabsGoogleKeywordsForAppLiveRequestInfo) throws ApiException {
        okhttp3.Call localVarCall = googleKeywordsForAppLiveValidateBeforeCall(dataforseoLabsGoogleKeywordsForAppLiveRequestInfo, null);
        Type localVarReturnType = new TypeToken<DataforseoLabsGoogleKeywordsForAppLiveResponseInfo>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * ‌ This endpoint will provide you with a list of keywords for which the target app ranks on Google Play. You will obtain keyword data and discover the app’s ranking position for each returned keyword. for more info please visit &#39;https://docs.dataforseo.com/v3/dataforseo_labs/google/keywords_for_app/live/?bash&#39;
     * @param dataforseoLabsGoogleKeywordsForAppLiveRequestInfo  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call googleKeywordsForAppLiveAsync(List<DataforseoLabsGoogleKeywordsForAppLiveRequestInfo> dataforseoLabsGoogleKeywordsForAppLiveRequestInfo, final ApiCallback<DataforseoLabsGoogleKeywordsForAppLiveResponseInfo> _callback) throws ApiException {

        okhttp3.Call localVarCall = googleKeywordsForAppLiveValidateBeforeCall(dataforseoLabsGoogleKeywordsForAppLiveRequestInfo, _callback);
        Type localVarReturnType = new TypeToken<DataforseoLabsGoogleKeywordsForAppLiveResponseInfo>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for googleKeywordsForCategoriesLive
     * @param dataforseoLabsGoogleKeywordsForCategoriesLiveRequestInfo  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call googleKeywordsForCategoriesLiveCall(List<DataforseoLabsGoogleKeywordsForCategoriesLiveRequestInfo> dataforseoLabsGoogleKeywordsForCategoriesLiveRequestInfo, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = dataforseoLabsGoogleKeywordsForCategoriesLiveRequestInfo;

        // create path and map variables
        String localVarPath = "/v3/dataforseo_labs/google/keywords_for_categories/live";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "basicAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call googleKeywordsForCategoriesLiveValidateBeforeCall(List<DataforseoLabsGoogleKeywordsForCategoriesLiveRequestInfo> dataforseoLabsGoogleKeywordsForCategoriesLiveRequestInfo, final ApiCallback _callback) throws ApiException {
        return googleKeywordsForCategoriesLiveCall(dataforseoLabsGoogleKeywordsForCategoriesLiveRequestInfo, _callback);

    }

    /**
     * 
     * ‌ This endpoint will provide you with a list of keywords relevant to the specified product categories. You will get the search volume rate for the last month, search volume trend for the previous 12 months, as well as current cost-per-click and competition values for each keyword. Moreover, this endpoint supplies minimum, maximum, and average values of daily impressions, clicks, and CPC for each result. for more info please visit &#39;https://docs.dataforseo.com/v3/dataforseo_labs/google/keywords_for_categories/live/?bash&#39;
     * @param dataforseoLabsGoogleKeywordsForCategoriesLiveRequestInfo  (optional)
     * @return DataforseoLabsGoogleKeywordsForCategoriesLiveResponseInfo
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public DataforseoLabsGoogleKeywordsForCategoriesLiveResponseInfo googleKeywordsForCategoriesLive(List<DataforseoLabsGoogleKeywordsForCategoriesLiveRequestInfo> dataforseoLabsGoogleKeywordsForCategoriesLiveRequestInfo) throws ApiException {
        ApiResponse<DataforseoLabsGoogleKeywordsForCategoriesLiveResponseInfo> localVarResp = googleKeywordsForCategoriesLiveWithHttpInfo(dataforseoLabsGoogleKeywordsForCategoriesLiveRequestInfo);
        return localVarResp.getData();
    }

    /**
     * 
     * ‌ This endpoint will provide you with a list of keywords relevant to the specified product categories. You will get the search volume rate for the last month, search volume trend for the previous 12 months, as well as current cost-per-click and competition values for each keyword. Moreover, this endpoint supplies minimum, maximum, and average values of daily impressions, clicks, and CPC for each result. for more info please visit &#39;https://docs.dataforseo.com/v3/dataforseo_labs/google/keywords_for_categories/live/?bash&#39;
     * @param dataforseoLabsGoogleKeywordsForCategoriesLiveRequestInfo  (optional)
     * @return ApiResponse&lt;DataforseoLabsGoogleKeywordsForCategoriesLiveResponseInfo&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<DataforseoLabsGoogleKeywordsForCategoriesLiveResponseInfo> googleKeywordsForCategoriesLiveWithHttpInfo(List<DataforseoLabsGoogleKeywordsForCategoriesLiveRequestInfo> dataforseoLabsGoogleKeywordsForCategoriesLiveRequestInfo) throws ApiException {
        okhttp3.Call localVarCall = googleKeywordsForCategoriesLiveValidateBeforeCall(dataforseoLabsGoogleKeywordsForCategoriesLiveRequestInfo, null);
        Type localVarReturnType = new TypeToken<DataforseoLabsGoogleKeywordsForCategoriesLiveResponseInfo>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * ‌ This endpoint will provide you with a list of keywords relevant to the specified product categories. You will get the search volume rate for the last month, search volume trend for the previous 12 months, as well as current cost-per-click and competition values for each keyword. Moreover, this endpoint supplies minimum, maximum, and average values of daily impressions, clicks, and CPC for each result. for more info please visit &#39;https://docs.dataforseo.com/v3/dataforseo_labs/google/keywords_for_categories/live/?bash&#39;
     * @param dataforseoLabsGoogleKeywordsForCategoriesLiveRequestInfo  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call googleKeywordsForCategoriesLiveAsync(List<DataforseoLabsGoogleKeywordsForCategoriesLiveRequestInfo> dataforseoLabsGoogleKeywordsForCategoriesLiveRequestInfo, final ApiCallback<DataforseoLabsGoogleKeywordsForCategoriesLiveResponseInfo> _callback) throws ApiException {

        okhttp3.Call localVarCall = googleKeywordsForCategoriesLiveValidateBeforeCall(dataforseoLabsGoogleKeywordsForCategoriesLiveRequestInfo, _callback);
        Type localVarReturnType = new TypeToken<DataforseoLabsGoogleKeywordsForCategoriesLiveResponseInfo>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for googleKeywordsForSiteLive
     * @param dataforseoLabsGoogleKeywordsForSiteLiveRequestInfo  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call googleKeywordsForSiteLiveCall(List<DataforseoLabsGoogleKeywordsForSiteLiveRequestInfo> dataforseoLabsGoogleKeywordsForSiteLiveRequestInfo, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = dataforseoLabsGoogleKeywordsForSiteLiveRequestInfo;

        // create path and map variables
        String localVarPath = "/v3/dataforseo_labs/google/keywords_for_site/live";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "basicAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call googleKeywordsForSiteLiveValidateBeforeCall(List<DataforseoLabsGoogleKeywordsForSiteLiveRequestInfo> dataforseoLabsGoogleKeywordsForSiteLiveRequestInfo, final ApiCallback _callback) throws ApiException {
        return googleKeywordsForSiteLiveCall(dataforseoLabsGoogleKeywordsForSiteLiveRequestInfo, _callback);

    }

    /**
     * 
     * ‌ The Keywords For Site endpoint will provide you with a list of keywords relevant to the target domain. Each keyword is supplied with relevant categories, search volume data for the last month, cost-per-click, competition, and search volume trend values for the past 12 months. for more info please visit &#39;https://docs.dataforseo.com/v3/dataforseo_labs/google/keywords_for_site/live/?bash&#39;
     * @param dataforseoLabsGoogleKeywordsForSiteLiveRequestInfo  (optional)
     * @return DataforseoLabsGoogleKeywordsForSiteLiveResponseInfo
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public DataforseoLabsGoogleKeywordsForSiteLiveResponseInfo googleKeywordsForSiteLive(List<DataforseoLabsGoogleKeywordsForSiteLiveRequestInfo> dataforseoLabsGoogleKeywordsForSiteLiveRequestInfo) throws ApiException {
        ApiResponse<DataforseoLabsGoogleKeywordsForSiteLiveResponseInfo> localVarResp = googleKeywordsForSiteLiveWithHttpInfo(dataforseoLabsGoogleKeywordsForSiteLiveRequestInfo);
        return localVarResp.getData();
    }

    /**
     * 
     * ‌ The Keywords For Site endpoint will provide you with a list of keywords relevant to the target domain. Each keyword is supplied with relevant categories, search volume data for the last month, cost-per-click, competition, and search volume trend values for the past 12 months. for more info please visit &#39;https://docs.dataforseo.com/v3/dataforseo_labs/google/keywords_for_site/live/?bash&#39;
     * @param dataforseoLabsGoogleKeywordsForSiteLiveRequestInfo  (optional)
     * @return ApiResponse&lt;DataforseoLabsGoogleKeywordsForSiteLiveResponseInfo&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<DataforseoLabsGoogleKeywordsForSiteLiveResponseInfo> googleKeywordsForSiteLiveWithHttpInfo(List<DataforseoLabsGoogleKeywordsForSiteLiveRequestInfo> dataforseoLabsGoogleKeywordsForSiteLiveRequestInfo) throws ApiException {
        okhttp3.Call localVarCall = googleKeywordsForSiteLiveValidateBeforeCall(dataforseoLabsGoogleKeywordsForSiteLiveRequestInfo, null);
        Type localVarReturnType = new TypeToken<DataforseoLabsGoogleKeywordsForSiteLiveResponseInfo>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * ‌ The Keywords For Site endpoint will provide you with a list of keywords relevant to the target domain. Each keyword is supplied with relevant categories, search volume data for the last month, cost-per-click, competition, and search volume trend values for the past 12 months. for more info please visit &#39;https://docs.dataforseo.com/v3/dataforseo_labs/google/keywords_for_site/live/?bash&#39;
     * @param dataforseoLabsGoogleKeywordsForSiteLiveRequestInfo  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call googleKeywordsForSiteLiveAsync(List<DataforseoLabsGoogleKeywordsForSiteLiveRequestInfo> dataforseoLabsGoogleKeywordsForSiteLiveRequestInfo, final ApiCallback<DataforseoLabsGoogleKeywordsForSiteLiveResponseInfo> _callback) throws ApiException {

        okhttp3.Call localVarCall = googleKeywordsForSiteLiveValidateBeforeCall(dataforseoLabsGoogleKeywordsForSiteLiveRequestInfo, _callback);
        Type localVarReturnType = new TypeToken<DataforseoLabsGoogleKeywordsForSiteLiveResponseInfo>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for googlePageIntersectionLive
     * @param dataforseoLabsGooglePageIntersectionLiveRequestInfo  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call googlePageIntersectionLiveCall(List<DataforseoLabsGooglePageIntersectionLiveRequestInfo> dataforseoLabsGooglePageIntersectionLiveRequestInfo, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = dataforseoLabsGooglePageIntersectionLiveRequestInfo;

        // create path and map variables
        String localVarPath = "/v3/dataforseo_labs/google/page_intersection/live";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "basicAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call googlePageIntersectionLiveValidateBeforeCall(List<DataforseoLabsGooglePageIntersectionLiveRequestInfo> dataforseoLabsGooglePageIntersectionLiveRequestInfo, final ApiCallback _callback) throws ApiException {
        return googlePageIntersectionLiveCall(dataforseoLabsGooglePageIntersectionLiveRequestInfo, _callback);

    }

    /**
     * 
     * ‌ This endpoint will provide you with the keywords for which specified pages rank within the same SERP. You will get search volume, competition, cost-per-click and impressions data on each intersecting keyword. Along with that, you will get data on SERP elements that specified pages rank for in search results, as well as the estimated traffic volume and cost of ad traffic. Page Intersection endpoint supports organic, paid, local pack and featured snippet results. for more info please visit &#39;https://docs.dataforseo.com/v3/dataforseo_labs/google/page_intersection/live/?bash&#39;
     * @param dataforseoLabsGooglePageIntersectionLiveRequestInfo  (optional)
     * @return DataforseoLabsGooglePageIntersectionLiveResponseInfo
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public DataforseoLabsGooglePageIntersectionLiveResponseInfo googlePageIntersectionLive(List<DataforseoLabsGooglePageIntersectionLiveRequestInfo> dataforseoLabsGooglePageIntersectionLiveRequestInfo) throws ApiException {
        ApiResponse<DataforseoLabsGooglePageIntersectionLiveResponseInfo> localVarResp = googlePageIntersectionLiveWithHttpInfo(dataforseoLabsGooglePageIntersectionLiveRequestInfo);
        return localVarResp.getData();
    }

    /**
     * 
     * ‌ This endpoint will provide you with the keywords for which specified pages rank within the same SERP. You will get search volume, competition, cost-per-click and impressions data on each intersecting keyword. Along with that, you will get data on SERP elements that specified pages rank for in search results, as well as the estimated traffic volume and cost of ad traffic. Page Intersection endpoint supports organic, paid, local pack and featured snippet results. for more info please visit &#39;https://docs.dataforseo.com/v3/dataforseo_labs/google/page_intersection/live/?bash&#39;
     * @param dataforseoLabsGooglePageIntersectionLiveRequestInfo  (optional)
     * @return ApiResponse&lt;DataforseoLabsGooglePageIntersectionLiveResponseInfo&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<DataforseoLabsGooglePageIntersectionLiveResponseInfo> googlePageIntersectionLiveWithHttpInfo(List<DataforseoLabsGooglePageIntersectionLiveRequestInfo> dataforseoLabsGooglePageIntersectionLiveRequestInfo) throws ApiException {
        okhttp3.Call localVarCall = googlePageIntersectionLiveValidateBeforeCall(dataforseoLabsGooglePageIntersectionLiveRequestInfo, null);
        Type localVarReturnType = new TypeToken<DataforseoLabsGooglePageIntersectionLiveResponseInfo>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * ‌ This endpoint will provide you with the keywords for which specified pages rank within the same SERP. You will get search volume, competition, cost-per-click and impressions data on each intersecting keyword. Along with that, you will get data on SERP elements that specified pages rank for in search results, as well as the estimated traffic volume and cost of ad traffic. Page Intersection endpoint supports organic, paid, local pack and featured snippet results. for more info please visit &#39;https://docs.dataforseo.com/v3/dataforseo_labs/google/page_intersection/live/?bash&#39;
     * @param dataforseoLabsGooglePageIntersectionLiveRequestInfo  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call googlePageIntersectionLiveAsync(List<DataforseoLabsGooglePageIntersectionLiveRequestInfo> dataforseoLabsGooglePageIntersectionLiveRequestInfo, final ApiCallback<DataforseoLabsGooglePageIntersectionLiveResponseInfo> _callback) throws ApiException {

        okhttp3.Call localVarCall = googlePageIntersectionLiveValidateBeforeCall(dataforseoLabsGooglePageIntersectionLiveRequestInfo, _callback);
        Type localVarReturnType = new TypeToken<DataforseoLabsGooglePageIntersectionLiveResponseInfo>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for googleRankedKeywordsLive
     * @param dataforseoLabsGoogleRankedKeywordsLiveRequestInfo  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call googleRankedKeywordsLiveCall(List<DataforseoLabsGoogleRankedKeywordsLiveRequestInfo> dataforseoLabsGoogleRankedKeywordsLiveRequestInfo, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = dataforseoLabsGoogleRankedKeywordsLiveRequestInfo;

        // create path and map variables
        String localVarPath = "/v3/dataforseo_labs/google/ranked_keywords/live";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "basicAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call googleRankedKeywordsLiveValidateBeforeCall(List<DataforseoLabsGoogleRankedKeywordsLiveRequestInfo> dataforseoLabsGoogleRankedKeywordsLiveRequestInfo, final ApiCallback _callback) throws ApiException {
        return googleRankedKeywordsLiveCall(dataforseoLabsGoogleRankedKeywordsLiveRequestInfo, _callback);

    }

    /**
     * 
     * ‌ This endpoint will provide you with the list of keywords that any domain or webpage is ranking for. You will also get SERP elements related to the keyword position, as well as impressions, monthly searches and other data relevant to the returned keywords. for more info please visit &#39;https://docs.dataforseo.com/v3/dataforseo_labs/google/ranked_keywords/live/?bash&#39;
     * @param dataforseoLabsGoogleRankedKeywordsLiveRequestInfo  (optional)
     * @return DataforseoLabsGoogleRankedKeywordsLiveResponseInfo
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public DataforseoLabsGoogleRankedKeywordsLiveResponseInfo googleRankedKeywordsLive(List<DataforseoLabsGoogleRankedKeywordsLiveRequestInfo> dataforseoLabsGoogleRankedKeywordsLiveRequestInfo) throws ApiException {
        ApiResponse<DataforseoLabsGoogleRankedKeywordsLiveResponseInfo> localVarResp = googleRankedKeywordsLiveWithHttpInfo(dataforseoLabsGoogleRankedKeywordsLiveRequestInfo);
        return localVarResp.getData();
    }

    /**
     * 
     * ‌ This endpoint will provide you with the list of keywords that any domain or webpage is ranking for. You will also get SERP elements related to the keyword position, as well as impressions, monthly searches and other data relevant to the returned keywords. for more info please visit &#39;https://docs.dataforseo.com/v3/dataforseo_labs/google/ranked_keywords/live/?bash&#39;
     * @param dataforseoLabsGoogleRankedKeywordsLiveRequestInfo  (optional)
     * @return ApiResponse&lt;DataforseoLabsGoogleRankedKeywordsLiveResponseInfo&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<DataforseoLabsGoogleRankedKeywordsLiveResponseInfo> googleRankedKeywordsLiveWithHttpInfo(List<DataforseoLabsGoogleRankedKeywordsLiveRequestInfo> dataforseoLabsGoogleRankedKeywordsLiveRequestInfo) throws ApiException {
        okhttp3.Call localVarCall = googleRankedKeywordsLiveValidateBeforeCall(dataforseoLabsGoogleRankedKeywordsLiveRequestInfo, null);
        Type localVarReturnType = new TypeToken<DataforseoLabsGoogleRankedKeywordsLiveResponseInfo>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * ‌ This endpoint will provide you with the list of keywords that any domain or webpage is ranking for. You will also get SERP elements related to the keyword position, as well as impressions, monthly searches and other data relevant to the returned keywords. for more info please visit &#39;https://docs.dataforseo.com/v3/dataforseo_labs/google/ranked_keywords/live/?bash&#39;
     * @param dataforseoLabsGoogleRankedKeywordsLiveRequestInfo  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call googleRankedKeywordsLiveAsync(List<DataforseoLabsGoogleRankedKeywordsLiveRequestInfo> dataforseoLabsGoogleRankedKeywordsLiveRequestInfo, final ApiCallback<DataforseoLabsGoogleRankedKeywordsLiveResponseInfo> _callback) throws ApiException {

        okhttp3.Call localVarCall = googleRankedKeywordsLiveValidateBeforeCall(dataforseoLabsGoogleRankedKeywordsLiveRequestInfo, _callback);
        Type localVarReturnType = new TypeToken<DataforseoLabsGoogleRankedKeywordsLiveResponseInfo>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for googleRelatedKeywordsLive
     * @param dataforseoLabsGoogleRelatedKeywordsLiveRequestInfo  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call googleRelatedKeywordsLiveCall(List<DataforseoLabsGoogleRelatedKeywordsLiveRequestInfo> dataforseoLabsGoogleRelatedKeywordsLiveRequestInfo, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = dataforseoLabsGoogleRelatedKeywordsLiveRequestInfo;

        // create path and map variables
        String localVarPath = "/v3/dataforseo_labs/google/related_keywords/live";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "basicAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call googleRelatedKeywordsLiveValidateBeforeCall(List<DataforseoLabsGoogleRelatedKeywordsLiveRequestInfo> dataforseoLabsGoogleRelatedKeywordsLiveRequestInfo, final ApiCallback _callback) throws ApiException {
        return googleRelatedKeywordsLiveCall(dataforseoLabsGoogleRelatedKeywordsLiveRequestInfo, _callback);

    }

    /**
     * 
     * The Related Keywords endpoint provides keywords appearing in the  \&quot;searches related to\&quot; SERP element You can get up to 4680 keyword ideas by specifying the search depth. Each related keyword comes with the list of relevant product categories, search volume rate for the last month, search volume trend for the previous 12 months, as well as current cost-per-click and competition values. Moreover, this endpoint supplies minimum, maximum and average values of daily impressions, clicks and CPC for each result. for more info please visit &#39;https://docs.dataforseo.com/v3/dataforseo_labs/google/related_keywords/live/?bash&#39;
     * @param dataforseoLabsGoogleRelatedKeywordsLiveRequestInfo  (optional)
     * @return DataforseoLabsGoogleRelatedKeywordsLiveResponseInfo
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public DataforseoLabsGoogleRelatedKeywordsLiveResponseInfo googleRelatedKeywordsLive(List<DataforseoLabsGoogleRelatedKeywordsLiveRequestInfo> dataforseoLabsGoogleRelatedKeywordsLiveRequestInfo) throws ApiException {
        ApiResponse<DataforseoLabsGoogleRelatedKeywordsLiveResponseInfo> localVarResp = googleRelatedKeywordsLiveWithHttpInfo(dataforseoLabsGoogleRelatedKeywordsLiveRequestInfo);
        return localVarResp.getData();
    }

    /**
     * 
     * The Related Keywords endpoint provides keywords appearing in the  \&quot;searches related to\&quot; SERP element You can get up to 4680 keyword ideas by specifying the search depth. Each related keyword comes with the list of relevant product categories, search volume rate for the last month, search volume trend for the previous 12 months, as well as current cost-per-click and competition values. Moreover, this endpoint supplies minimum, maximum and average values of daily impressions, clicks and CPC for each result. for more info please visit &#39;https://docs.dataforseo.com/v3/dataforseo_labs/google/related_keywords/live/?bash&#39;
     * @param dataforseoLabsGoogleRelatedKeywordsLiveRequestInfo  (optional)
     * @return ApiResponse&lt;DataforseoLabsGoogleRelatedKeywordsLiveResponseInfo&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<DataforseoLabsGoogleRelatedKeywordsLiveResponseInfo> googleRelatedKeywordsLiveWithHttpInfo(List<DataforseoLabsGoogleRelatedKeywordsLiveRequestInfo> dataforseoLabsGoogleRelatedKeywordsLiveRequestInfo) throws ApiException {
        okhttp3.Call localVarCall = googleRelatedKeywordsLiveValidateBeforeCall(dataforseoLabsGoogleRelatedKeywordsLiveRequestInfo, null);
        Type localVarReturnType = new TypeToken<DataforseoLabsGoogleRelatedKeywordsLiveResponseInfo>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * The Related Keywords endpoint provides keywords appearing in the  \&quot;searches related to\&quot; SERP element You can get up to 4680 keyword ideas by specifying the search depth. Each related keyword comes with the list of relevant product categories, search volume rate for the last month, search volume trend for the previous 12 months, as well as current cost-per-click and competition values. Moreover, this endpoint supplies minimum, maximum and average values of daily impressions, clicks and CPC for each result. for more info please visit &#39;https://docs.dataforseo.com/v3/dataforseo_labs/google/related_keywords/live/?bash&#39;
     * @param dataforseoLabsGoogleRelatedKeywordsLiveRequestInfo  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call googleRelatedKeywordsLiveAsync(List<DataforseoLabsGoogleRelatedKeywordsLiveRequestInfo> dataforseoLabsGoogleRelatedKeywordsLiveRequestInfo, final ApiCallback<DataforseoLabsGoogleRelatedKeywordsLiveResponseInfo> _callback) throws ApiException {

        okhttp3.Call localVarCall = googleRelatedKeywordsLiveValidateBeforeCall(dataforseoLabsGoogleRelatedKeywordsLiveRequestInfo, _callback);
        Type localVarReturnType = new TypeToken<DataforseoLabsGoogleRelatedKeywordsLiveResponseInfo>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for googleRelevantPagesLive
     * @param dataforseoLabsGoogleRelevantPagesLiveRequestInfo  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call googleRelevantPagesLiveCall(List<DataforseoLabsGoogleRelevantPagesLiveRequestInfo> dataforseoLabsGoogleRelevantPagesLiveRequestInfo, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = dataforseoLabsGoogleRelevantPagesLiveRequestInfo;

        // create path and map variables
        String localVarPath = "/v3/dataforseo_labs/google/relevant_pages/live";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "basicAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call googleRelevantPagesLiveValidateBeforeCall(List<DataforseoLabsGoogleRelevantPagesLiveRequestInfo> dataforseoLabsGoogleRelevantPagesLiveRequestInfo, final ApiCallback _callback) throws ApiException {
        return googleRelevantPagesLiveCall(dataforseoLabsGoogleRelevantPagesLiveRequestInfo, _callback);

    }

    /**
     * 
     * ‌ for more info please visit &#39;https://docs.dataforseo.com/v3/dataforseo_labs/google/relevant_pages/live/?bash&#39;
     * @param dataforseoLabsGoogleRelevantPagesLiveRequestInfo  (optional)
     * @return DataforseoLabsGoogleRelevantPagesLiveResponseInfo
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public DataforseoLabsGoogleRelevantPagesLiveResponseInfo googleRelevantPagesLive(List<DataforseoLabsGoogleRelevantPagesLiveRequestInfo> dataforseoLabsGoogleRelevantPagesLiveRequestInfo) throws ApiException {
        ApiResponse<DataforseoLabsGoogleRelevantPagesLiveResponseInfo> localVarResp = googleRelevantPagesLiveWithHttpInfo(dataforseoLabsGoogleRelevantPagesLiveRequestInfo);
        return localVarResp.getData();
    }

    /**
     * 
     * ‌ for more info please visit &#39;https://docs.dataforseo.com/v3/dataforseo_labs/google/relevant_pages/live/?bash&#39;
     * @param dataforseoLabsGoogleRelevantPagesLiveRequestInfo  (optional)
     * @return ApiResponse&lt;DataforseoLabsGoogleRelevantPagesLiveResponseInfo&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<DataforseoLabsGoogleRelevantPagesLiveResponseInfo> googleRelevantPagesLiveWithHttpInfo(List<DataforseoLabsGoogleRelevantPagesLiveRequestInfo> dataforseoLabsGoogleRelevantPagesLiveRequestInfo) throws ApiException {
        okhttp3.Call localVarCall = googleRelevantPagesLiveValidateBeforeCall(dataforseoLabsGoogleRelevantPagesLiveRequestInfo, null);
        Type localVarReturnType = new TypeToken<DataforseoLabsGoogleRelevantPagesLiveResponseInfo>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * ‌ for more info please visit &#39;https://docs.dataforseo.com/v3/dataforseo_labs/google/relevant_pages/live/?bash&#39;
     * @param dataforseoLabsGoogleRelevantPagesLiveRequestInfo  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call googleRelevantPagesLiveAsync(List<DataforseoLabsGoogleRelevantPagesLiveRequestInfo> dataforseoLabsGoogleRelevantPagesLiveRequestInfo, final ApiCallback<DataforseoLabsGoogleRelevantPagesLiveResponseInfo> _callback) throws ApiException {

        okhttp3.Call localVarCall = googleRelevantPagesLiveValidateBeforeCall(dataforseoLabsGoogleRelevantPagesLiveRequestInfo, _callback);
        Type localVarReturnType = new TypeToken<DataforseoLabsGoogleRelevantPagesLiveResponseInfo>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for googleSearchIntentLive
     * @param dataforseoLabsGoogleSearchIntentLiveRequestInfo  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call googleSearchIntentLiveCall(List<DataforseoLabsGoogleSearchIntentLiveRequestInfo> dataforseoLabsGoogleSearchIntentLiveRequestInfo, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = dataforseoLabsGoogleSearchIntentLiveRequestInfo;

        // create path and map variables
        String localVarPath = "/v3/dataforseo_labs/google/search_intent/live";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "basicAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call googleSearchIntentLiveValidateBeforeCall(List<DataforseoLabsGoogleSearchIntentLiveRequestInfo> dataforseoLabsGoogleSearchIntentLiveRequestInfo, final ApiCallback _callback) throws ApiException {
        return googleSearchIntentLiveCall(dataforseoLabsGoogleSearchIntentLiveRequestInfo, _callback);

    }

    /**
     * 
     * ‌ This endpoint will provide you with search intent data for up to 1,000 keywords. For each keyword that you specify when setting a task, the API will return the keyword’s search intent and intent probability. Besides the highest probable search intent, the results will also provide you with other likely search intent(s) and their probability. for more info please visit &#39;https://docs.dataforseo.com/v3/dataforseo_labs/google/search_intent/live/?bash&#39;
     * @param dataforseoLabsGoogleSearchIntentLiveRequestInfo  (optional)
     * @return DataforseoLabsGoogleSearchIntentLiveResponseInfo
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public DataforseoLabsGoogleSearchIntentLiveResponseInfo googleSearchIntentLive(List<DataforseoLabsGoogleSearchIntentLiveRequestInfo> dataforseoLabsGoogleSearchIntentLiveRequestInfo) throws ApiException {
        ApiResponse<DataforseoLabsGoogleSearchIntentLiveResponseInfo> localVarResp = googleSearchIntentLiveWithHttpInfo(dataforseoLabsGoogleSearchIntentLiveRequestInfo);
        return localVarResp.getData();
    }

    /**
     * 
     * ‌ This endpoint will provide you with search intent data for up to 1,000 keywords. For each keyword that you specify when setting a task, the API will return the keyword’s search intent and intent probability. Besides the highest probable search intent, the results will also provide you with other likely search intent(s) and their probability. for more info please visit &#39;https://docs.dataforseo.com/v3/dataforseo_labs/google/search_intent/live/?bash&#39;
     * @param dataforseoLabsGoogleSearchIntentLiveRequestInfo  (optional)
     * @return ApiResponse&lt;DataforseoLabsGoogleSearchIntentLiveResponseInfo&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<DataforseoLabsGoogleSearchIntentLiveResponseInfo> googleSearchIntentLiveWithHttpInfo(List<DataforseoLabsGoogleSearchIntentLiveRequestInfo> dataforseoLabsGoogleSearchIntentLiveRequestInfo) throws ApiException {
        okhttp3.Call localVarCall = googleSearchIntentLiveValidateBeforeCall(dataforseoLabsGoogleSearchIntentLiveRequestInfo, null);
        Type localVarReturnType = new TypeToken<DataforseoLabsGoogleSearchIntentLiveResponseInfo>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * ‌ This endpoint will provide you with search intent data for up to 1,000 keywords. For each keyword that you specify when setting a task, the API will return the keyword’s search intent and intent probability. Besides the highest probable search intent, the results will also provide you with other likely search intent(s) and their probability. for more info please visit &#39;https://docs.dataforseo.com/v3/dataforseo_labs/google/search_intent/live/?bash&#39;
     * @param dataforseoLabsGoogleSearchIntentLiveRequestInfo  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call googleSearchIntentLiveAsync(List<DataforseoLabsGoogleSearchIntentLiveRequestInfo> dataforseoLabsGoogleSearchIntentLiveRequestInfo, final ApiCallback<DataforseoLabsGoogleSearchIntentLiveResponseInfo> _callback) throws ApiException {

        okhttp3.Call localVarCall = googleSearchIntentLiveValidateBeforeCall(dataforseoLabsGoogleSearchIntentLiveRequestInfo, _callback);
        Type localVarReturnType = new TypeToken<DataforseoLabsGoogleSearchIntentLiveResponseInfo>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for googleSerpCompetitorsLive
     * @param dataforseoLabsGoogleSerpCompetitorsLiveRequestInfo  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call googleSerpCompetitorsLiveCall(List<DataforseoLabsGoogleSerpCompetitorsLiveRequestInfo> dataforseoLabsGoogleSerpCompetitorsLiveRequestInfo, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = dataforseoLabsGoogleSerpCompetitorsLiveRequestInfo;

        // create path and map variables
        String localVarPath = "/v3/dataforseo_labs/google/serp_competitors/live";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "basicAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call googleSerpCompetitorsLiveValidateBeforeCall(List<DataforseoLabsGoogleSerpCompetitorsLiveRequestInfo> dataforseoLabsGoogleSerpCompetitorsLiveRequestInfo, final ApiCallback _callback) throws ApiException {
        return googleSerpCompetitorsLiveCall(dataforseoLabsGoogleSerpCompetitorsLiveRequestInfo, _callback);

    }

    /**
     * 
     * ‌ This endpoint will provide you with a list of domains ranking for the keywords you specify. You will also get SERP rankings, rating, estimated traffic volume, and visibility values the provided domains gain from the specified keywords. for more info please visit &#39;https://docs.dataforseo.com/v3/dataforseo_labs/google/serp_competitors/live/?bash&#39;
     * @param dataforseoLabsGoogleSerpCompetitorsLiveRequestInfo  (optional)
     * @return DataforseoLabsGoogleSerpCompetitorsLiveResponseInfo
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public DataforseoLabsGoogleSerpCompetitorsLiveResponseInfo googleSerpCompetitorsLive(List<DataforseoLabsGoogleSerpCompetitorsLiveRequestInfo> dataforseoLabsGoogleSerpCompetitorsLiveRequestInfo) throws ApiException {
        ApiResponse<DataforseoLabsGoogleSerpCompetitorsLiveResponseInfo> localVarResp = googleSerpCompetitorsLiveWithHttpInfo(dataforseoLabsGoogleSerpCompetitorsLiveRequestInfo);
        return localVarResp.getData();
    }

    /**
     * 
     * ‌ This endpoint will provide you with a list of domains ranking for the keywords you specify. You will also get SERP rankings, rating, estimated traffic volume, and visibility values the provided domains gain from the specified keywords. for more info please visit &#39;https://docs.dataforseo.com/v3/dataforseo_labs/google/serp_competitors/live/?bash&#39;
     * @param dataforseoLabsGoogleSerpCompetitorsLiveRequestInfo  (optional)
     * @return ApiResponse&lt;DataforseoLabsGoogleSerpCompetitorsLiveResponseInfo&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<DataforseoLabsGoogleSerpCompetitorsLiveResponseInfo> googleSerpCompetitorsLiveWithHttpInfo(List<DataforseoLabsGoogleSerpCompetitorsLiveRequestInfo> dataforseoLabsGoogleSerpCompetitorsLiveRequestInfo) throws ApiException {
        okhttp3.Call localVarCall = googleSerpCompetitorsLiveValidateBeforeCall(dataforseoLabsGoogleSerpCompetitorsLiveRequestInfo, null);
        Type localVarReturnType = new TypeToken<DataforseoLabsGoogleSerpCompetitorsLiveResponseInfo>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * ‌ This endpoint will provide you with a list of domains ranking for the keywords you specify. You will also get SERP rankings, rating, estimated traffic volume, and visibility values the provided domains gain from the specified keywords. for more info please visit &#39;https://docs.dataforseo.com/v3/dataforseo_labs/google/serp_competitors/live/?bash&#39;
     * @param dataforseoLabsGoogleSerpCompetitorsLiveRequestInfo  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call googleSerpCompetitorsLiveAsync(List<DataforseoLabsGoogleSerpCompetitorsLiveRequestInfo> dataforseoLabsGoogleSerpCompetitorsLiveRequestInfo, final ApiCallback<DataforseoLabsGoogleSerpCompetitorsLiveResponseInfo> _callback) throws ApiException {

        okhttp3.Call localVarCall = googleSerpCompetitorsLiveValidateBeforeCall(dataforseoLabsGoogleSerpCompetitorsLiveRequestInfo, _callback);
        Type localVarReturnType = new TypeToken<DataforseoLabsGoogleSerpCompetitorsLiveResponseInfo>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for googleSubdomainsLive
     * @param dataforseoLabsGoogleSubdomainsLiveRequestInfo  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call googleSubdomainsLiveCall(List<DataforseoLabsGoogleSubdomainsLiveRequestInfo> dataforseoLabsGoogleSubdomainsLiveRequestInfo, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = dataforseoLabsGoogleSubdomainsLiveRequestInfo;

        // create path and map variables
        String localVarPath = "/v3/dataforseo_labs/google/subdomains/live";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "basicAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call googleSubdomainsLiveValidateBeforeCall(List<DataforseoLabsGoogleSubdomainsLiveRequestInfo> dataforseoLabsGoogleSubdomainsLiveRequestInfo, final ApiCallback _callback) throws ApiException {
        return googleSubdomainsLiveCall(dataforseoLabsGoogleSubdomainsLiveRequestInfo, _callback);

    }

    /**
     * 
     * ‌‌ This endpoint will provide you with a list of subdomains of the specified domain, along with the ranking distribution across organic and paid search. In addition to that, you will also get the estimated traffic volume of subdomains based on search volume and impressions. for more info please visit &#39;https://docs.dataforseo.com/v3/dataforseo_labs/google/subdomains/live/?bash&#39;
     * @param dataforseoLabsGoogleSubdomainsLiveRequestInfo  (optional)
     * @return DataforseoLabsGoogleSubdomainsLiveResponseInfo
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public DataforseoLabsGoogleSubdomainsLiveResponseInfo googleSubdomainsLive(List<DataforseoLabsGoogleSubdomainsLiveRequestInfo> dataforseoLabsGoogleSubdomainsLiveRequestInfo) throws ApiException {
        ApiResponse<DataforseoLabsGoogleSubdomainsLiveResponseInfo> localVarResp = googleSubdomainsLiveWithHttpInfo(dataforseoLabsGoogleSubdomainsLiveRequestInfo);
        return localVarResp.getData();
    }

    /**
     * 
     * ‌‌ This endpoint will provide you with a list of subdomains of the specified domain, along with the ranking distribution across organic and paid search. In addition to that, you will also get the estimated traffic volume of subdomains based on search volume and impressions. for more info please visit &#39;https://docs.dataforseo.com/v3/dataforseo_labs/google/subdomains/live/?bash&#39;
     * @param dataforseoLabsGoogleSubdomainsLiveRequestInfo  (optional)
     * @return ApiResponse&lt;DataforseoLabsGoogleSubdomainsLiveResponseInfo&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<DataforseoLabsGoogleSubdomainsLiveResponseInfo> googleSubdomainsLiveWithHttpInfo(List<DataforseoLabsGoogleSubdomainsLiveRequestInfo> dataforseoLabsGoogleSubdomainsLiveRequestInfo) throws ApiException {
        okhttp3.Call localVarCall = googleSubdomainsLiveValidateBeforeCall(dataforseoLabsGoogleSubdomainsLiveRequestInfo, null);
        Type localVarReturnType = new TypeToken<DataforseoLabsGoogleSubdomainsLiveResponseInfo>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * ‌‌ This endpoint will provide you with a list of subdomains of the specified domain, along with the ranking distribution across organic and paid search. In addition to that, you will also get the estimated traffic volume of subdomains based on search volume and impressions. for more info please visit &#39;https://docs.dataforseo.com/v3/dataforseo_labs/google/subdomains/live/?bash&#39;
     * @param dataforseoLabsGoogleSubdomainsLiveRequestInfo  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call googleSubdomainsLiveAsync(List<DataforseoLabsGoogleSubdomainsLiveRequestInfo> dataforseoLabsGoogleSubdomainsLiveRequestInfo, final ApiCallback<DataforseoLabsGoogleSubdomainsLiveResponseInfo> _callback) throws ApiException {

        okhttp3.Call localVarCall = googleSubdomainsLiveValidateBeforeCall(dataforseoLabsGoogleSubdomainsLiveRequestInfo, _callback);
        Type localVarReturnType = new TypeToken<DataforseoLabsGoogleSubdomainsLiveResponseInfo>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for googleTopSearchesLive
     * @param dataforseoLabsGoogleTopSearchesLiveRequestInfo  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call googleTopSearchesLiveCall(List<DataforseoLabsGoogleTopSearchesLiveRequestInfo> dataforseoLabsGoogleTopSearchesLiveRequestInfo, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = dataforseoLabsGoogleTopSearchesLiveRequestInfo;

        // create path and map variables
        String localVarPath = "/v3/dataforseo_labs/google/top_searches/live";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "basicAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call googleTopSearchesLiveValidateBeforeCall(List<DataforseoLabsGoogleTopSearchesLiveRequestInfo> dataforseoLabsGoogleTopSearchesLiveRequestInfo, final ApiCallback _callback) throws ApiException {
        return googleTopSearchesLiveCall(dataforseoLabsGoogleTopSearchesLiveRequestInfo, _callback);

    }

    /**
     * 
     * ‌‌ The Top Searches endpoint of DataForSEO Labs API can provide you with over 3.5 billion keywords from the DataForSEO Keyword Database. Each keyword in the API response is provided with a set of relevant keyword data with Google Ads metrics, product categories, and Google SERP data. for more info please visit &#39;https://docs.dataforseo.com/v3/dataforseo_labs/google/top_searches/live/?bash&#39;
     * @param dataforseoLabsGoogleTopSearchesLiveRequestInfo  (optional)
     * @return DataforseoLabsGoogleTopSearchesLiveResponseInfo
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public DataforseoLabsGoogleTopSearchesLiveResponseInfo googleTopSearchesLive(List<DataforseoLabsGoogleTopSearchesLiveRequestInfo> dataforseoLabsGoogleTopSearchesLiveRequestInfo) throws ApiException {
        ApiResponse<DataforseoLabsGoogleTopSearchesLiveResponseInfo> localVarResp = googleTopSearchesLiveWithHttpInfo(dataforseoLabsGoogleTopSearchesLiveRequestInfo);
        return localVarResp.getData();
    }

    /**
     * 
     * ‌‌ The Top Searches endpoint of DataForSEO Labs API can provide you with over 3.5 billion keywords from the DataForSEO Keyword Database. Each keyword in the API response is provided with a set of relevant keyword data with Google Ads metrics, product categories, and Google SERP data. for more info please visit &#39;https://docs.dataforseo.com/v3/dataforseo_labs/google/top_searches/live/?bash&#39;
     * @param dataforseoLabsGoogleTopSearchesLiveRequestInfo  (optional)
     * @return ApiResponse&lt;DataforseoLabsGoogleTopSearchesLiveResponseInfo&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<DataforseoLabsGoogleTopSearchesLiveResponseInfo> googleTopSearchesLiveWithHttpInfo(List<DataforseoLabsGoogleTopSearchesLiveRequestInfo> dataforseoLabsGoogleTopSearchesLiveRequestInfo) throws ApiException {
        okhttp3.Call localVarCall = googleTopSearchesLiveValidateBeforeCall(dataforseoLabsGoogleTopSearchesLiveRequestInfo, null);
        Type localVarReturnType = new TypeToken<DataforseoLabsGoogleTopSearchesLiveResponseInfo>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * ‌‌ The Top Searches endpoint of DataForSEO Labs API can provide you with over 3.5 billion keywords from the DataForSEO Keyword Database. Each keyword in the API response is provided with a set of relevant keyword data with Google Ads metrics, product categories, and Google SERP data. for more info please visit &#39;https://docs.dataforseo.com/v3/dataforseo_labs/google/top_searches/live/?bash&#39;
     * @param dataforseoLabsGoogleTopSearchesLiveRequestInfo  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call googleTopSearchesLiveAsync(List<DataforseoLabsGoogleTopSearchesLiveRequestInfo> dataforseoLabsGoogleTopSearchesLiveRequestInfo, final ApiCallback<DataforseoLabsGoogleTopSearchesLiveResponseInfo> _callback) throws ApiException {

        okhttp3.Call localVarCall = googleTopSearchesLiveValidateBeforeCall(dataforseoLabsGoogleTopSearchesLiveRequestInfo, _callback);
        Type localVarReturnType = new TypeToken<DataforseoLabsGoogleTopSearchesLiveResponseInfo>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
