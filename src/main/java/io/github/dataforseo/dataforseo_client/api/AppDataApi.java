/*
 * DataForSEO API documentation
 * DataForSEO API is the starting point on your journey towards building powerful SEO software. With DataForSEO you can get all the data you need to build an efficient application while also saving your time and budget. DataForSEO API is using the REST technology for interchanging data between your application and our service. The data exchange is made through the widely used HTTP protocol, which allows applying our API to almost all programming languages.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.dataforseo.dataforseo_client.api;

import io.github.dataforseo.dataforseo_client.ApiCallback;
import io.github.dataforseo.dataforseo_client.ApiClient;
import io.github.dataforseo.dataforseo_client.ApiException;
import io.github.dataforseo.dataforseo_client.ApiResponse;
import io.github.dataforseo.dataforseo_client.Configuration;
import io.github.dataforseo.dataforseo_client.Pair;
import io.github.dataforseo.dataforseo_client.ProgressRequestBody;
import io.github.dataforseo.dataforseo_client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import io.github.dataforseo.dataforseo_client.model.AppDataAppleAppInfoTaskGetAdvancedResponseInfo;
import io.github.dataforseo.dataforseo_client.model.AppDataAppleAppInfoTaskPostRequestInfo;
import io.github.dataforseo.dataforseo_client.model.AppDataAppleAppInfoTaskPostResponseInfo;
import io.github.dataforseo.dataforseo_client.model.AppDataAppleAppInfoTasksReadyResponseInfo;
import io.github.dataforseo.dataforseo_client.model.AppDataAppleAppListTaskGetAdvancedResponseInfo;
import io.github.dataforseo.dataforseo_client.model.AppDataAppleAppListTaskPostRequestInfo;
import io.github.dataforseo.dataforseo_client.model.AppDataAppleAppListTaskPostResponseInfo;
import io.github.dataforseo.dataforseo_client.model.AppDataAppleAppListTasksReadyResponseInfo;
import io.github.dataforseo.dataforseo_client.model.AppDataAppleAppListingsCategoriesResponseInfo;
import io.github.dataforseo.dataforseo_client.model.AppDataAppleAppListingsSearchLiveRequestInfo;
import io.github.dataforseo.dataforseo_client.model.AppDataAppleAppListingsSearchLiveResponseInfo;
import io.github.dataforseo.dataforseo_client.model.AppDataAppleAppReviewsTaskGetAdvancedResponseInfo;
import io.github.dataforseo.dataforseo_client.model.AppDataAppleAppReviewsTaskPostRequestInfo;
import io.github.dataforseo.dataforseo_client.model.AppDataAppleAppReviewsTaskPostResponseInfo;
import io.github.dataforseo.dataforseo_client.model.AppDataAppleAppReviewsTasksReadyResponseInfo;
import io.github.dataforseo.dataforseo_client.model.AppDataAppleAppSearchesTaskGetAdvancedResponseInfo;
import io.github.dataforseo.dataforseo_client.model.AppDataAppleAppSearchesTaskPostResponseInfo;
import io.github.dataforseo.dataforseo_client.model.AppDataAppleAppSearchesTasksReadyResponseInfo;
import io.github.dataforseo.dataforseo_client.model.AppDataAppleCategoriesResponseInfo;
import io.github.dataforseo.dataforseo_client.model.AppDataAppleLanguagesResponseInfo;
import io.github.dataforseo.dataforseo_client.model.AppDataAppleLocationsResponseInfo;
import io.github.dataforseo.dataforseo_client.model.AppDataErrorsRequestInfo;
import io.github.dataforseo.dataforseo_client.model.AppDataErrorsResponseInfo;
import io.github.dataforseo.dataforseo_client.model.AppDataGoogleAppInfoTaskGetAdvancedResponseInfo;
import io.github.dataforseo.dataforseo_client.model.AppDataGoogleAppInfoTaskGetHtmlResponseInfo;
import io.github.dataforseo.dataforseo_client.model.AppDataGoogleAppInfoTaskPostRequestInfo;
import io.github.dataforseo.dataforseo_client.model.AppDataGoogleAppInfoTaskPostResponseInfo;
import io.github.dataforseo.dataforseo_client.model.AppDataGoogleAppInfoTasksReadyResponseInfo;
import io.github.dataforseo.dataforseo_client.model.AppDataGoogleAppListTaskGetAdvancedResponseInfo;
import io.github.dataforseo.dataforseo_client.model.AppDataGoogleAppListTaskGetHtmlResponseInfo;
import io.github.dataforseo.dataforseo_client.model.AppDataGoogleAppListTaskPostRequestInfo;
import io.github.dataforseo.dataforseo_client.model.AppDataGoogleAppListTaskPostResponseInfo;
import io.github.dataforseo.dataforseo_client.model.AppDataGoogleAppListTasksReadyResponseInfo;
import io.github.dataforseo.dataforseo_client.model.AppDataGoogleAppListingsCategoriesResponseInfo;
import io.github.dataforseo.dataforseo_client.model.AppDataGoogleAppListingsSearchLiveRequestInfo;
import io.github.dataforseo.dataforseo_client.model.AppDataGoogleAppListingsSearchLiveResponseInfo;
import io.github.dataforseo.dataforseo_client.model.AppDataGoogleAppReviewsTaskGetAdvancedResponseInfo;
import io.github.dataforseo.dataforseo_client.model.AppDataGoogleAppReviewsTaskGetHtmlResponseInfo;
import io.github.dataforseo.dataforseo_client.model.AppDataGoogleAppReviewsTaskPostRequestInfo;
import io.github.dataforseo.dataforseo_client.model.AppDataGoogleAppReviewsTaskPostResponseInfo;
import io.github.dataforseo.dataforseo_client.model.AppDataGoogleAppReviewsTasksReadyResponseInfo;
import io.github.dataforseo.dataforseo_client.model.AppDataGoogleAppSearchesTaskGetAdvancedResponseInfo;
import io.github.dataforseo.dataforseo_client.model.AppDataGoogleAppSearchesTaskGetHtmlResponseInfo;
import io.github.dataforseo.dataforseo_client.model.AppDataGoogleAppSearchesTaskPostResponseInfo;
import io.github.dataforseo.dataforseo_client.model.AppDataGoogleAppSearchesTasksReadyResponseInfo;
import io.github.dataforseo.dataforseo_client.model.AppDataGoogleCategoriesResponseInfo;
import io.github.dataforseo.dataforseo_client.model.AppDataGoogleLanguagesResponseInfo;
import io.github.dataforseo.dataforseo_client.model.AppDataGoogleLocationsResponseInfo;
import io.github.dataforseo.dataforseo_client.model.AppDataIdListRequestInfo;
import io.github.dataforseo.dataforseo_client.model.AppDataIdListResponseInfo;
import io.github.dataforseo.dataforseo_client.model.AppDataTaskRequestInfo;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class AppDataApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public AppDataApi() {
        this(Configuration.getDefaultApiClient());
    }

    public AppDataApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for appDataAppleLanguages
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call appDataAppleLanguagesCall(final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/v3/app_data/apple/languages";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "basicAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call appDataAppleLanguagesValidateBeforeCall(final ApiCallback _callback) throws ApiException {
        return appDataAppleLanguagesCall(_callback);

    }

    /**
     * 
     * By calling this endpoint you will receive the list of Apple languages supported in App Data API. for more info please visit &#39;https://docs.dataforseo.com/v3/app_data/apple/languages/?bash&#39;
     * @return AppDataAppleLanguagesResponseInfo
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public AppDataAppleLanguagesResponseInfo appDataAppleLanguages() throws ApiException {
        ApiResponse<AppDataAppleLanguagesResponseInfo> localVarResp = appDataAppleLanguagesWithHttpInfo();
        return localVarResp.getData();
    }

    /**
     * 
     * By calling this endpoint you will receive the list of Apple languages supported in App Data API. for more info please visit &#39;https://docs.dataforseo.com/v3/app_data/apple/languages/?bash&#39;
     * @return ApiResponse&lt;AppDataAppleLanguagesResponseInfo&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<AppDataAppleLanguagesResponseInfo> appDataAppleLanguagesWithHttpInfo() throws ApiException {
        okhttp3.Call localVarCall = appDataAppleLanguagesValidateBeforeCall(null);
        Type localVarReturnType = new TypeToken<AppDataAppleLanguagesResponseInfo>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * By calling this endpoint you will receive the list of Apple languages supported in App Data API. for more info please visit &#39;https://docs.dataforseo.com/v3/app_data/apple/languages/?bash&#39;
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call appDataAppleLanguagesAsync(final ApiCallback<AppDataAppleLanguagesResponseInfo> _callback) throws ApiException {

        okhttp3.Call localVarCall = appDataAppleLanguagesValidateBeforeCall(_callback);
        Type localVarReturnType = new TypeToken<AppDataAppleLanguagesResponseInfo>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for appDataAppleLocations
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call appDataAppleLocationsCall(final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/v3/app_data/apple/locations";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "basicAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call appDataAppleLocationsValidateBeforeCall(final ApiCallback _callback) throws ApiException {
        return appDataAppleLocationsCall(_callback);

    }

    /**
     * 
     * By calling this endpoint you will receive the list of Apple locations supported in App Data API. for more info please visit &#39;https://docs.dataforseo.com/v3/app_data/apple/locations/?bash&#39;
     * @return AppDataAppleLocationsResponseInfo
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public AppDataAppleLocationsResponseInfo appDataAppleLocations() throws ApiException {
        ApiResponse<AppDataAppleLocationsResponseInfo> localVarResp = appDataAppleLocationsWithHttpInfo();
        return localVarResp.getData();
    }

    /**
     * 
     * By calling this endpoint you will receive the list of Apple locations supported in App Data API. for more info please visit &#39;https://docs.dataforseo.com/v3/app_data/apple/locations/?bash&#39;
     * @return ApiResponse&lt;AppDataAppleLocationsResponseInfo&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<AppDataAppleLocationsResponseInfo> appDataAppleLocationsWithHttpInfo() throws ApiException {
        okhttp3.Call localVarCall = appDataAppleLocationsValidateBeforeCall(null);
        Type localVarReturnType = new TypeToken<AppDataAppleLocationsResponseInfo>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * By calling this endpoint you will receive the list of Apple locations supported in App Data API. for more info please visit &#39;https://docs.dataforseo.com/v3/app_data/apple/locations/?bash&#39;
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call appDataAppleLocationsAsync(final ApiCallback<AppDataAppleLocationsResponseInfo> _callback) throws ApiException {

        okhttp3.Call localVarCall = appDataAppleLocationsValidateBeforeCall(_callback);
        Type localVarReturnType = new TypeToken<AppDataAppleLocationsResponseInfo>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for appDataErrors
     * @param appDataErrorsRequestInfo  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call appDataErrorsCall(List<AppDataErrorsRequestInfo> appDataErrorsRequestInfo, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = appDataErrorsRequestInfo;

        // create path and map variables
        String localVarPath = "/v3/app_data/errors";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "basicAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call appDataErrorsValidateBeforeCall(List<AppDataErrorsRequestInfo> appDataErrorsRequestInfo, final ApiCallback _callback) throws ApiException {
        return appDataErrorsCall(appDataErrorsRequestInfo, _callback);

    }

    /**
     * 
     * By calling this endpoint you will receive information about the App Data API tasks that returned an error within the past 24 hours. for more info please visit &#39;https://docs.dataforseo.com/v3/app_data/errors/?bash&#39;
     * @param appDataErrorsRequestInfo  (optional)
     * @return AppDataErrorsResponseInfo
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public AppDataErrorsResponseInfo appDataErrors(List<AppDataErrorsRequestInfo> appDataErrorsRequestInfo) throws ApiException {
        ApiResponse<AppDataErrorsResponseInfo> localVarResp = appDataErrorsWithHttpInfo(appDataErrorsRequestInfo);
        return localVarResp.getData();
    }

    /**
     * 
     * By calling this endpoint you will receive information about the App Data API tasks that returned an error within the past 24 hours. for more info please visit &#39;https://docs.dataforseo.com/v3/app_data/errors/?bash&#39;
     * @param appDataErrorsRequestInfo  (optional)
     * @return ApiResponse&lt;AppDataErrorsResponseInfo&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<AppDataErrorsResponseInfo> appDataErrorsWithHttpInfo(List<AppDataErrorsRequestInfo> appDataErrorsRequestInfo) throws ApiException {
        okhttp3.Call localVarCall = appDataErrorsValidateBeforeCall(appDataErrorsRequestInfo, null);
        Type localVarReturnType = new TypeToken<AppDataErrorsResponseInfo>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * By calling this endpoint you will receive information about the App Data API tasks that returned an error within the past 24 hours. for more info please visit &#39;https://docs.dataforseo.com/v3/app_data/errors/?bash&#39;
     * @param appDataErrorsRequestInfo  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call appDataErrorsAsync(List<AppDataErrorsRequestInfo> appDataErrorsRequestInfo, final ApiCallback<AppDataErrorsResponseInfo> _callback) throws ApiException {

        okhttp3.Call localVarCall = appDataErrorsValidateBeforeCall(appDataErrorsRequestInfo, _callback);
        Type localVarReturnType = new TypeToken<AppDataErrorsResponseInfo>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for appDataGoogleLanguages
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call appDataGoogleLanguagesCall(final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/v3/app_data/google/languages";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "basicAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call appDataGoogleLanguagesValidateBeforeCall(final ApiCallback _callback) throws ApiException {
        return appDataGoogleLanguagesCall(_callback);

    }

    /**
     * 
     * By calling this endpoint you will receive the list of Google languages supported in App Data API. for more info please visit &#39;https://docs.dataforseo.com/v3/app_data/google/languages/?bash&#39;
     * @return AppDataGoogleLanguagesResponseInfo
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public AppDataGoogleLanguagesResponseInfo appDataGoogleLanguages() throws ApiException {
        ApiResponse<AppDataGoogleLanguagesResponseInfo> localVarResp = appDataGoogleLanguagesWithHttpInfo();
        return localVarResp.getData();
    }

    /**
     * 
     * By calling this endpoint you will receive the list of Google languages supported in App Data API. for more info please visit &#39;https://docs.dataforseo.com/v3/app_data/google/languages/?bash&#39;
     * @return ApiResponse&lt;AppDataGoogleLanguagesResponseInfo&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<AppDataGoogleLanguagesResponseInfo> appDataGoogleLanguagesWithHttpInfo() throws ApiException {
        okhttp3.Call localVarCall = appDataGoogleLanguagesValidateBeforeCall(null);
        Type localVarReturnType = new TypeToken<AppDataGoogleLanguagesResponseInfo>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * By calling this endpoint you will receive the list of Google languages supported in App Data API. for more info please visit &#39;https://docs.dataforseo.com/v3/app_data/google/languages/?bash&#39;
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call appDataGoogleLanguagesAsync(final ApiCallback<AppDataGoogleLanguagesResponseInfo> _callback) throws ApiException {

        okhttp3.Call localVarCall = appDataGoogleLanguagesValidateBeforeCall(_callback);
        Type localVarReturnType = new TypeToken<AppDataGoogleLanguagesResponseInfo>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for appDataGoogleLocations
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call appDataGoogleLocationsCall(final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/v3/app_data/google/locations";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "basicAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call appDataGoogleLocationsValidateBeforeCall(final ApiCallback _callback) throws ApiException {
        return appDataGoogleLocationsCall(_callback);

    }

    /**
     * 
     * By calling this endpoint you will receive the list of Google locations supported in App Data API. for more info please visit &#39;https://docs.dataforseo.com/v3/app_data/google/locations/?bash&#39;
     * @return AppDataGoogleLocationsResponseInfo
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public AppDataGoogleLocationsResponseInfo appDataGoogleLocations() throws ApiException {
        ApiResponse<AppDataGoogleLocationsResponseInfo> localVarResp = appDataGoogleLocationsWithHttpInfo();
        return localVarResp.getData();
    }

    /**
     * 
     * By calling this endpoint you will receive the list of Google locations supported in App Data API. for more info please visit &#39;https://docs.dataforseo.com/v3/app_data/google/locations/?bash&#39;
     * @return ApiResponse&lt;AppDataGoogleLocationsResponseInfo&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<AppDataGoogleLocationsResponseInfo> appDataGoogleLocationsWithHttpInfo() throws ApiException {
        okhttp3.Call localVarCall = appDataGoogleLocationsValidateBeforeCall(null);
        Type localVarReturnType = new TypeToken<AppDataGoogleLocationsResponseInfo>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * By calling this endpoint you will receive the list of Google locations supported in App Data API. for more info please visit &#39;https://docs.dataforseo.com/v3/app_data/google/locations/?bash&#39;
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call appDataGoogleLocationsAsync(final ApiCallback<AppDataGoogleLocationsResponseInfo> _callback) throws ApiException {

        okhttp3.Call localVarCall = appDataGoogleLocationsValidateBeforeCall(_callback);
        Type localVarReturnType = new TypeToken<AppDataGoogleLocationsResponseInfo>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for appDataIdList
     * @param appDataIdListRequestInfo  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call appDataIdListCall(List<AppDataIdListRequestInfo> appDataIdListRequestInfo, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = appDataIdListRequestInfo;

        // create path and map variables
        String localVarPath = "/v3/app_data/id_list";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "basicAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call appDataIdListValidateBeforeCall(List<AppDataIdListRequestInfo> appDataIdListRequestInfo, final ApiCallback _callback) throws ApiException {
        return appDataIdListCall(appDataIdListRequestInfo, _callback);

    }

    /**
     * 
     * This endpoint is designed to provide you with the list of IDs and metadata of the completed App Data tasks during the specified period. You will get all task IDs that were made including successful, uncompleted, and tasks that responded as errors. for more info please visit &#39;https://docs.dataforseo.com/v3/app_data/id_list/?bash&#39;
     * @param appDataIdListRequestInfo  (optional)
     * @return AppDataIdListResponseInfo
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public AppDataIdListResponseInfo appDataIdList(List<AppDataIdListRequestInfo> appDataIdListRequestInfo) throws ApiException {
        ApiResponse<AppDataIdListResponseInfo> localVarResp = appDataIdListWithHttpInfo(appDataIdListRequestInfo);
        return localVarResp.getData();
    }

    /**
     * 
     * This endpoint is designed to provide you with the list of IDs and metadata of the completed App Data tasks during the specified period. You will get all task IDs that were made including successful, uncompleted, and tasks that responded as errors. for more info please visit &#39;https://docs.dataforseo.com/v3/app_data/id_list/?bash&#39;
     * @param appDataIdListRequestInfo  (optional)
     * @return ApiResponse&lt;AppDataIdListResponseInfo&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<AppDataIdListResponseInfo> appDataIdListWithHttpInfo(List<AppDataIdListRequestInfo> appDataIdListRequestInfo) throws ApiException {
        okhttp3.Call localVarCall = appDataIdListValidateBeforeCall(appDataIdListRequestInfo, null);
        Type localVarReturnType = new TypeToken<AppDataIdListResponseInfo>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * This endpoint is designed to provide you with the list of IDs and metadata of the completed App Data tasks during the specified period. You will get all task IDs that were made including successful, uncompleted, and tasks that responded as errors. for more info please visit &#39;https://docs.dataforseo.com/v3/app_data/id_list/?bash&#39;
     * @param appDataIdListRequestInfo  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call appDataIdListAsync(List<AppDataIdListRequestInfo> appDataIdListRequestInfo, final ApiCallback<AppDataIdListResponseInfo> _callback) throws ApiException {

        okhttp3.Call localVarCall = appDataIdListValidateBeforeCall(appDataIdListRequestInfo, _callback);
        Type localVarReturnType = new TypeToken<AppDataIdListResponseInfo>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for appleAppInfoTaskGetAdvanced
     * @param id task identifier unique task identifier in our system in the UUID format you will be able to use it within 30 days to request the results of the task at any time (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call appleAppInfoTaskGetAdvancedCall(String id, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/v3/app_data/apple/app_info/task_get/advanced/{id}"
            .replace("{" + "id" + "}", localVarApiClient.escapeString(id.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "basicAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call appleAppInfoTaskGetAdvancedValidateBeforeCall(String id, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'id' is set
        if (id == null) {
            throw new ApiException("Missing the required parameter 'id' when calling appleAppInfoTaskGetAdvanced(Async)");
        }

        return appleAppInfoTaskGetAdvancedCall(id, _callback);

    }

    /**
     * 
     * This endpoint will provide you with information about the mobile application specified in a POST request. You will receive its ID, icon, description, reviews count, rating, images, and other data. The results are specific to the app_id parameter specified in the POST request. for more info please visit &#39;https://docs.dataforseo.com/v3/app_data/apple/app_info/task_get/advanced/?bash&#39;
     * @param id task identifier unique task identifier in our system in the UUID format you will be able to use it within 30 days to request the results of the task at any time (required)
     * @return AppDataAppleAppInfoTaskGetAdvancedResponseInfo
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public AppDataAppleAppInfoTaskGetAdvancedResponseInfo appleAppInfoTaskGetAdvanced(String id) throws ApiException {
        ApiResponse<AppDataAppleAppInfoTaskGetAdvancedResponseInfo> localVarResp = appleAppInfoTaskGetAdvancedWithHttpInfo(id);
        return localVarResp.getData();
    }

    /**
     * 
     * This endpoint will provide you with information about the mobile application specified in a POST request. You will receive its ID, icon, description, reviews count, rating, images, and other data. The results are specific to the app_id parameter specified in the POST request. for more info please visit &#39;https://docs.dataforseo.com/v3/app_data/apple/app_info/task_get/advanced/?bash&#39;
     * @param id task identifier unique task identifier in our system in the UUID format you will be able to use it within 30 days to request the results of the task at any time (required)
     * @return ApiResponse&lt;AppDataAppleAppInfoTaskGetAdvancedResponseInfo&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<AppDataAppleAppInfoTaskGetAdvancedResponseInfo> appleAppInfoTaskGetAdvancedWithHttpInfo(String id) throws ApiException {
        okhttp3.Call localVarCall = appleAppInfoTaskGetAdvancedValidateBeforeCall(id, null);
        Type localVarReturnType = new TypeToken<AppDataAppleAppInfoTaskGetAdvancedResponseInfo>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * This endpoint will provide you with information about the mobile application specified in a POST request. You will receive its ID, icon, description, reviews count, rating, images, and other data. The results are specific to the app_id parameter specified in the POST request. for more info please visit &#39;https://docs.dataforseo.com/v3/app_data/apple/app_info/task_get/advanced/?bash&#39;
     * @param id task identifier unique task identifier in our system in the UUID format you will be able to use it within 30 days to request the results of the task at any time (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call appleAppInfoTaskGetAdvancedAsync(String id, final ApiCallback<AppDataAppleAppInfoTaskGetAdvancedResponseInfo> _callback) throws ApiException {

        okhttp3.Call localVarCall = appleAppInfoTaskGetAdvancedValidateBeforeCall(id, _callback);
        Type localVarReturnType = new TypeToken<AppDataAppleAppInfoTaskGetAdvancedResponseInfo>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for appleAppInfoTaskPost
     * @param appDataAppleAppInfoTaskPostRequestInfo  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call appleAppInfoTaskPostCall(List<AppDataAppleAppInfoTaskPostRequestInfo> appDataAppleAppInfoTaskPostRequestInfo, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = appDataAppleAppInfoTaskPostRequestInfo;

        // create path and map variables
        String localVarPath = "/v3/app_data/apple/app_info/task_post";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "basicAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call appleAppInfoTaskPostValidateBeforeCall(List<AppDataAppleAppInfoTaskPostRequestInfo> appDataAppleAppInfoTaskPostRequestInfo, final ApiCallback _callback) throws ApiException {
        return appleAppInfoTaskPostCall(appDataAppleAppInfoTaskPostRequestInfo, _callback);

    }

    /**
     * 
     * ‌‌ This endpoint will provide you with information about the App Store application specified in the app_id field of the POST request. for more info please visit &#39;https://docs.dataforseo.com/v3/app_data/apple/app_info/task_post/?bash&#39;
     * @param appDataAppleAppInfoTaskPostRequestInfo  (optional)
     * @return AppDataAppleAppInfoTaskPostResponseInfo
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public AppDataAppleAppInfoTaskPostResponseInfo appleAppInfoTaskPost(List<AppDataAppleAppInfoTaskPostRequestInfo> appDataAppleAppInfoTaskPostRequestInfo) throws ApiException {
        ApiResponse<AppDataAppleAppInfoTaskPostResponseInfo> localVarResp = appleAppInfoTaskPostWithHttpInfo(appDataAppleAppInfoTaskPostRequestInfo);
        return localVarResp.getData();
    }

    /**
     * 
     * ‌‌ This endpoint will provide you with information about the App Store application specified in the app_id field of the POST request. for more info please visit &#39;https://docs.dataforseo.com/v3/app_data/apple/app_info/task_post/?bash&#39;
     * @param appDataAppleAppInfoTaskPostRequestInfo  (optional)
     * @return ApiResponse&lt;AppDataAppleAppInfoTaskPostResponseInfo&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<AppDataAppleAppInfoTaskPostResponseInfo> appleAppInfoTaskPostWithHttpInfo(List<AppDataAppleAppInfoTaskPostRequestInfo> appDataAppleAppInfoTaskPostRequestInfo) throws ApiException {
        okhttp3.Call localVarCall = appleAppInfoTaskPostValidateBeforeCall(appDataAppleAppInfoTaskPostRequestInfo, null);
        Type localVarReturnType = new TypeToken<AppDataAppleAppInfoTaskPostResponseInfo>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * ‌‌ This endpoint will provide you with information about the App Store application specified in the app_id field of the POST request. for more info please visit &#39;https://docs.dataforseo.com/v3/app_data/apple/app_info/task_post/?bash&#39;
     * @param appDataAppleAppInfoTaskPostRequestInfo  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call appleAppInfoTaskPostAsync(List<AppDataAppleAppInfoTaskPostRequestInfo> appDataAppleAppInfoTaskPostRequestInfo, final ApiCallback<AppDataAppleAppInfoTaskPostResponseInfo> _callback) throws ApiException {

        okhttp3.Call localVarCall = appleAppInfoTaskPostValidateBeforeCall(appDataAppleAppInfoTaskPostRequestInfo, _callback);
        Type localVarReturnType = new TypeToken<AppDataAppleAppInfoTaskPostResponseInfo>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for appleAppInfoTasksReady
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call appleAppInfoTasksReadyCall(final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/v3/app_data/apple/app_info/tasks_ready";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "basicAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call appleAppInfoTasksReadyValidateBeforeCall(final ApiCallback _callback) throws ApiException {
        return appleAppInfoTasksReadyCall(_callback);

    }

    /**
     * 
     * ‌ The ‘Tasks Ready’ endpoint is designed to provide you with a list of completed tasks that haven’t been collected yet. If you use the Standard method without specifying the postback_url, you can receive the list of id for all completed tasks using this endpoint. Then, you can collect the results using the ‘Task GET’ endpoints. for more info please visit &#39;https://docs.dataforseo.com/v3/app_data/apple/app_info/tasks_ready/?bash&#39;
     * @return AppDataAppleAppInfoTasksReadyResponseInfo
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public AppDataAppleAppInfoTasksReadyResponseInfo appleAppInfoTasksReady() throws ApiException {
        ApiResponse<AppDataAppleAppInfoTasksReadyResponseInfo> localVarResp = appleAppInfoTasksReadyWithHttpInfo();
        return localVarResp.getData();
    }

    /**
     * 
     * ‌ The ‘Tasks Ready’ endpoint is designed to provide you with a list of completed tasks that haven’t been collected yet. If you use the Standard method without specifying the postback_url, you can receive the list of id for all completed tasks using this endpoint. Then, you can collect the results using the ‘Task GET’ endpoints. for more info please visit &#39;https://docs.dataforseo.com/v3/app_data/apple/app_info/tasks_ready/?bash&#39;
     * @return ApiResponse&lt;AppDataAppleAppInfoTasksReadyResponseInfo&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<AppDataAppleAppInfoTasksReadyResponseInfo> appleAppInfoTasksReadyWithHttpInfo() throws ApiException {
        okhttp3.Call localVarCall = appleAppInfoTasksReadyValidateBeforeCall(null);
        Type localVarReturnType = new TypeToken<AppDataAppleAppInfoTasksReadyResponseInfo>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * ‌ The ‘Tasks Ready’ endpoint is designed to provide you with a list of completed tasks that haven’t been collected yet. If you use the Standard method without specifying the postback_url, you can receive the list of id for all completed tasks using this endpoint. Then, you can collect the results using the ‘Task GET’ endpoints. for more info please visit &#39;https://docs.dataforseo.com/v3/app_data/apple/app_info/tasks_ready/?bash&#39;
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call appleAppInfoTasksReadyAsync(final ApiCallback<AppDataAppleAppInfoTasksReadyResponseInfo> _callback) throws ApiException {

        okhttp3.Call localVarCall = appleAppInfoTasksReadyValidateBeforeCall(_callback);
        Type localVarReturnType = new TypeToken<AppDataAppleAppInfoTasksReadyResponseInfo>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for appleAppListTaskGetAdvanced
     * @param id task identifier unique task identifier in our system in the UUID format you will be able to use it within 30 days to request the results of the task at any time (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call appleAppListTaskGetAdvancedCall(String id, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/v3/app_data/apple/app_list/task_get/advanced/{id}"
            .replace("{" + "id" + "}", localVarApiClient.escapeString(id.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "basicAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call appleAppListTaskGetAdvancedValidateBeforeCall(String id, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'id' is set
        if (id == null) {
            throw new ApiException("Missing the required parameter 'id' when calling appleAppListTaskGetAdvanced(Async)");
        }

        return appleAppListTaskGetAdvancedCall(id, _callback);

    }

    /**
     * 
     * This endpoint will provide you with a list of applications published in the top app charts on the App Store platform, including app IDs, ratings, prices, titles, and more. The results are specific to the app_collection as well as the location and language parameters specified in the POST request. for more info please visit &#39;https://docs.dataforseo.com/v3/app_data/apple/app_list/task_get/advanced/?bash&#39;
     * @param id task identifier unique task identifier in our system in the UUID format you will be able to use it within 30 days to request the results of the task at any time (required)
     * @return AppDataAppleAppListTaskGetAdvancedResponseInfo
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public AppDataAppleAppListTaskGetAdvancedResponseInfo appleAppListTaskGetAdvanced(String id) throws ApiException {
        ApiResponse<AppDataAppleAppListTaskGetAdvancedResponseInfo> localVarResp = appleAppListTaskGetAdvancedWithHttpInfo(id);
        return localVarResp.getData();
    }

    /**
     * 
     * This endpoint will provide you with a list of applications published in the top app charts on the App Store platform, including app IDs, ratings, prices, titles, and more. The results are specific to the app_collection as well as the location and language parameters specified in the POST request. for more info please visit &#39;https://docs.dataforseo.com/v3/app_data/apple/app_list/task_get/advanced/?bash&#39;
     * @param id task identifier unique task identifier in our system in the UUID format you will be able to use it within 30 days to request the results of the task at any time (required)
     * @return ApiResponse&lt;AppDataAppleAppListTaskGetAdvancedResponseInfo&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<AppDataAppleAppListTaskGetAdvancedResponseInfo> appleAppListTaskGetAdvancedWithHttpInfo(String id) throws ApiException {
        okhttp3.Call localVarCall = appleAppListTaskGetAdvancedValidateBeforeCall(id, null);
        Type localVarReturnType = new TypeToken<AppDataAppleAppListTaskGetAdvancedResponseInfo>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * This endpoint will provide you with a list of applications published in the top app charts on the App Store platform, including app IDs, ratings, prices, titles, and more. The results are specific to the app_collection as well as the location and language parameters specified in the POST request. for more info please visit &#39;https://docs.dataforseo.com/v3/app_data/apple/app_list/task_get/advanced/?bash&#39;
     * @param id task identifier unique task identifier in our system in the UUID format you will be able to use it within 30 days to request the results of the task at any time (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call appleAppListTaskGetAdvancedAsync(String id, final ApiCallback<AppDataAppleAppListTaskGetAdvancedResponseInfo> _callback) throws ApiException {

        okhttp3.Call localVarCall = appleAppListTaskGetAdvancedValidateBeforeCall(id, _callback);
        Type localVarReturnType = new TypeToken<AppDataAppleAppListTaskGetAdvancedResponseInfo>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for appleAppListTaskPost
     * @param appDataAppleAppListTaskPostRequestInfo  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call appleAppListTaskPostCall(List<AppDataAppleAppListTaskPostRequestInfo> appDataAppleAppListTaskPostRequestInfo, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = appDataAppleAppListTaskPostRequestInfo;

        // create path and map variables
        String localVarPath = "/v3/app_data/apple/app_list/task_post";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "basicAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call appleAppListTaskPostValidateBeforeCall(List<AppDataAppleAppListTaskPostRequestInfo> appDataAppleAppListTaskPostRequestInfo, final ApiCallback _callback) throws ApiException {
        return appleAppListTaskPostCall(appDataAppleAppListTaskPostRequestInfo, _callback);

    }

    /**
     * 
     * ‌‌ This endpoint will provide you with a list of mobile applications published in the top app charts on the App Store platform. The returned results are specific to the app collection as well as the language and location parameters. for more info please visit &#39;https://docs.dataforseo.com/v3/app_data/apple/app_list/task_post/?bash&#39;
     * @param appDataAppleAppListTaskPostRequestInfo  (optional)
     * @return AppDataAppleAppListTaskPostResponseInfo
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public AppDataAppleAppListTaskPostResponseInfo appleAppListTaskPost(List<AppDataAppleAppListTaskPostRequestInfo> appDataAppleAppListTaskPostRequestInfo) throws ApiException {
        ApiResponse<AppDataAppleAppListTaskPostResponseInfo> localVarResp = appleAppListTaskPostWithHttpInfo(appDataAppleAppListTaskPostRequestInfo);
        return localVarResp.getData();
    }

    /**
     * 
     * ‌‌ This endpoint will provide you with a list of mobile applications published in the top app charts on the App Store platform. The returned results are specific to the app collection as well as the language and location parameters. for more info please visit &#39;https://docs.dataforseo.com/v3/app_data/apple/app_list/task_post/?bash&#39;
     * @param appDataAppleAppListTaskPostRequestInfo  (optional)
     * @return ApiResponse&lt;AppDataAppleAppListTaskPostResponseInfo&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<AppDataAppleAppListTaskPostResponseInfo> appleAppListTaskPostWithHttpInfo(List<AppDataAppleAppListTaskPostRequestInfo> appDataAppleAppListTaskPostRequestInfo) throws ApiException {
        okhttp3.Call localVarCall = appleAppListTaskPostValidateBeforeCall(appDataAppleAppListTaskPostRequestInfo, null);
        Type localVarReturnType = new TypeToken<AppDataAppleAppListTaskPostResponseInfo>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * ‌‌ This endpoint will provide you with a list of mobile applications published in the top app charts on the App Store platform. The returned results are specific to the app collection as well as the language and location parameters. for more info please visit &#39;https://docs.dataforseo.com/v3/app_data/apple/app_list/task_post/?bash&#39;
     * @param appDataAppleAppListTaskPostRequestInfo  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call appleAppListTaskPostAsync(List<AppDataAppleAppListTaskPostRequestInfo> appDataAppleAppListTaskPostRequestInfo, final ApiCallback<AppDataAppleAppListTaskPostResponseInfo> _callback) throws ApiException {

        okhttp3.Call localVarCall = appleAppListTaskPostValidateBeforeCall(appDataAppleAppListTaskPostRequestInfo, _callback);
        Type localVarReturnType = new TypeToken<AppDataAppleAppListTaskPostResponseInfo>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for appleAppListTasksReady
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call appleAppListTasksReadyCall(final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/v3/app_data/apple/app_list/tasks_ready";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "basicAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call appleAppListTasksReadyValidateBeforeCall(final ApiCallback _callback) throws ApiException {
        return appleAppListTasksReadyCall(_callback);

    }

    /**
     * 
     * ‌ The ‘Tasks Ready’ endpoint is designed to provide you with a list of completed tasks that haven’t been collected yet. If you use the Standard method without specifying the postback_url, you can receive the list of id for all completed tasks using this endpoint. Then, you can collect the results using the ‘Task GET’ endpoints. for more info please visit &#39;https://docs.dataforseo.com/v3/app_data/apple/app_list/tasks_ready/?bash&#39;
     * @return AppDataAppleAppListTasksReadyResponseInfo
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public AppDataAppleAppListTasksReadyResponseInfo appleAppListTasksReady() throws ApiException {
        ApiResponse<AppDataAppleAppListTasksReadyResponseInfo> localVarResp = appleAppListTasksReadyWithHttpInfo();
        return localVarResp.getData();
    }

    /**
     * 
     * ‌ The ‘Tasks Ready’ endpoint is designed to provide you with a list of completed tasks that haven’t been collected yet. If you use the Standard method without specifying the postback_url, you can receive the list of id for all completed tasks using this endpoint. Then, you can collect the results using the ‘Task GET’ endpoints. for more info please visit &#39;https://docs.dataforseo.com/v3/app_data/apple/app_list/tasks_ready/?bash&#39;
     * @return ApiResponse&lt;AppDataAppleAppListTasksReadyResponseInfo&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<AppDataAppleAppListTasksReadyResponseInfo> appleAppListTasksReadyWithHttpInfo() throws ApiException {
        okhttp3.Call localVarCall = appleAppListTasksReadyValidateBeforeCall(null);
        Type localVarReturnType = new TypeToken<AppDataAppleAppListTasksReadyResponseInfo>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * ‌ The ‘Tasks Ready’ endpoint is designed to provide you with a list of completed tasks that haven’t been collected yet. If you use the Standard method without specifying the postback_url, you can receive the list of id for all completed tasks using this endpoint. Then, you can collect the results using the ‘Task GET’ endpoints. for more info please visit &#39;https://docs.dataforseo.com/v3/app_data/apple/app_list/tasks_ready/?bash&#39;
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call appleAppListTasksReadyAsync(final ApiCallback<AppDataAppleAppListTasksReadyResponseInfo> _callback) throws ApiException {

        okhttp3.Call localVarCall = appleAppListTasksReadyValidateBeforeCall(_callback);
        Type localVarReturnType = new TypeToken<AppDataAppleAppListTasksReadyResponseInfo>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for appleAppListingsCategories
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call appleAppListingsCategoriesCall(final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/v3/app_data/apple/app_listings/categories";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "basicAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call appleAppListingsCategoriesValidateBeforeCall(final ApiCallback _callback) throws ApiException {
        return appleAppListingsCategoriesCall(_callback);

    }

    /**
     * 
     * This endpoint will provide you with a full list of app categories available on Apple App Store. for more info please visit &#39;https://docs.dataforseo.com/v3/app_data/apple/app_listings/categories/?bash&#39;
     * @return AppDataAppleAppListingsCategoriesResponseInfo
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public AppDataAppleAppListingsCategoriesResponseInfo appleAppListingsCategories() throws ApiException {
        ApiResponse<AppDataAppleAppListingsCategoriesResponseInfo> localVarResp = appleAppListingsCategoriesWithHttpInfo();
        return localVarResp.getData();
    }

    /**
     * 
     * This endpoint will provide you with a full list of app categories available on Apple App Store. for more info please visit &#39;https://docs.dataforseo.com/v3/app_data/apple/app_listings/categories/?bash&#39;
     * @return ApiResponse&lt;AppDataAppleAppListingsCategoriesResponseInfo&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<AppDataAppleAppListingsCategoriesResponseInfo> appleAppListingsCategoriesWithHttpInfo() throws ApiException {
        okhttp3.Call localVarCall = appleAppListingsCategoriesValidateBeforeCall(null);
        Type localVarReturnType = new TypeToken<AppDataAppleAppListingsCategoriesResponseInfo>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * This endpoint will provide you with a full list of app categories available on Apple App Store. for more info please visit &#39;https://docs.dataforseo.com/v3/app_data/apple/app_listings/categories/?bash&#39;
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call appleAppListingsCategoriesAsync(final ApiCallback<AppDataAppleAppListingsCategoriesResponseInfo> _callback) throws ApiException {

        okhttp3.Call localVarCall = appleAppListingsCategoriesValidateBeforeCall(_callback);
        Type localVarReturnType = new TypeToken<AppDataAppleAppListingsCategoriesResponseInfo>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for appleAppListingsSearchLive
     * @param appDataAppleAppListingsSearchLiveRequestInfo  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call appleAppListingsSearchLiveCall(List<AppDataAppleAppListingsSearchLiveRequestInfo> appDataAppleAppListingsSearchLiveRequestInfo, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = appDataAppleAppListingsSearchLiveRequestInfo;

        // create path and map variables
        String localVarPath = "/v3/app_data/apple/app_listings/search/live";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "basicAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call appleAppListingsSearchLiveValidateBeforeCall(List<AppDataAppleAppListingsSearchLiveRequestInfo> appDataAppleAppListingsSearchLiveRequestInfo, final ApiCallback _callback) throws ApiException {
        return appleAppListingsSearchLiveCall(appDataAppleAppListingsSearchLiveRequestInfo, _callback);

    }

    /**
     * 
     * This endpoint will provide you with a list of apps published on App Store along with additional information: its ID, icon, reviews count, rating, price, and other data. The results are specific to the title, description, and categories parameters specified in the API request. for more info please visit &#39;https://docs.dataforseo.com/v3/app_data/apple/app_listings/search/live/?bash&#39;
     * @param appDataAppleAppListingsSearchLiveRequestInfo  (optional)
     * @return AppDataAppleAppListingsSearchLiveResponseInfo
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public AppDataAppleAppListingsSearchLiveResponseInfo appleAppListingsSearchLive(List<AppDataAppleAppListingsSearchLiveRequestInfo> appDataAppleAppListingsSearchLiveRequestInfo) throws ApiException {
        ApiResponse<AppDataAppleAppListingsSearchLiveResponseInfo> localVarResp = appleAppListingsSearchLiveWithHttpInfo(appDataAppleAppListingsSearchLiveRequestInfo);
        return localVarResp.getData();
    }

    /**
     * 
     * This endpoint will provide you with a list of apps published on App Store along with additional information: its ID, icon, reviews count, rating, price, and other data. The results are specific to the title, description, and categories parameters specified in the API request. for more info please visit &#39;https://docs.dataforseo.com/v3/app_data/apple/app_listings/search/live/?bash&#39;
     * @param appDataAppleAppListingsSearchLiveRequestInfo  (optional)
     * @return ApiResponse&lt;AppDataAppleAppListingsSearchLiveResponseInfo&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<AppDataAppleAppListingsSearchLiveResponseInfo> appleAppListingsSearchLiveWithHttpInfo(List<AppDataAppleAppListingsSearchLiveRequestInfo> appDataAppleAppListingsSearchLiveRequestInfo) throws ApiException {
        okhttp3.Call localVarCall = appleAppListingsSearchLiveValidateBeforeCall(appDataAppleAppListingsSearchLiveRequestInfo, null);
        Type localVarReturnType = new TypeToken<AppDataAppleAppListingsSearchLiveResponseInfo>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * This endpoint will provide you with a list of apps published on App Store along with additional information: its ID, icon, reviews count, rating, price, and other data. The results are specific to the title, description, and categories parameters specified in the API request. for more info please visit &#39;https://docs.dataforseo.com/v3/app_data/apple/app_listings/search/live/?bash&#39;
     * @param appDataAppleAppListingsSearchLiveRequestInfo  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call appleAppListingsSearchLiveAsync(List<AppDataAppleAppListingsSearchLiveRequestInfo> appDataAppleAppListingsSearchLiveRequestInfo, final ApiCallback<AppDataAppleAppListingsSearchLiveResponseInfo> _callback) throws ApiException {

        okhttp3.Call localVarCall = appleAppListingsSearchLiveValidateBeforeCall(appDataAppleAppListingsSearchLiveRequestInfo, _callback);
        Type localVarReturnType = new TypeToken<AppDataAppleAppListingsSearchLiveResponseInfo>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for appleAppReviewsTaskGetAdvanced
     * @param id task identifier unique task identifier in our system in the UUID format you will be able to use it within 30 days to request the results of the task at any time (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call appleAppReviewsTaskGetAdvancedCall(String id, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/v3/app_data/apple/app_reviews/task_get/advanced/{id}"
            .replace("{" + "id" + "}", localVarApiClient.escapeString(id.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "basicAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call appleAppReviewsTaskGetAdvancedValidateBeforeCall(String id, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'id' is set
        if (id == null) {
            throw new ApiException("Missing the required parameter 'id' when calling appleAppReviewsTaskGetAdvanced(Async)");
        }

        return appleAppReviewsTaskGetAdvancedCall(id, _callback);

    }

    /**
     * 
     * This endpoint will provide you with feedback data on applications listed on the App Store platform, including review ratings, review content, user profile info of each reviewer, review publication dates, and more. The results are specific to the app_id as well as the location and language parameters specified in the POST request. for more info please visit &#39;https://docs.dataforseo.com/v3/app_data/apple/app_reviews/task_get/advanced/?bash&#39;
     * @param id task identifier unique task identifier in our system in the UUID format you will be able to use it within 30 days to request the results of the task at any time (required)
     * @return AppDataAppleAppReviewsTaskGetAdvancedResponseInfo
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public AppDataAppleAppReviewsTaskGetAdvancedResponseInfo appleAppReviewsTaskGetAdvanced(String id) throws ApiException {
        ApiResponse<AppDataAppleAppReviewsTaskGetAdvancedResponseInfo> localVarResp = appleAppReviewsTaskGetAdvancedWithHttpInfo(id);
        return localVarResp.getData();
    }

    /**
     * 
     * This endpoint will provide you with feedback data on applications listed on the App Store platform, including review ratings, review content, user profile info of each reviewer, review publication dates, and more. The results are specific to the app_id as well as the location and language parameters specified in the POST request. for more info please visit &#39;https://docs.dataforseo.com/v3/app_data/apple/app_reviews/task_get/advanced/?bash&#39;
     * @param id task identifier unique task identifier in our system in the UUID format you will be able to use it within 30 days to request the results of the task at any time (required)
     * @return ApiResponse&lt;AppDataAppleAppReviewsTaskGetAdvancedResponseInfo&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<AppDataAppleAppReviewsTaskGetAdvancedResponseInfo> appleAppReviewsTaskGetAdvancedWithHttpInfo(String id) throws ApiException {
        okhttp3.Call localVarCall = appleAppReviewsTaskGetAdvancedValidateBeforeCall(id, null);
        Type localVarReturnType = new TypeToken<AppDataAppleAppReviewsTaskGetAdvancedResponseInfo>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * This endpoint will provide you with feedback data on applications listed on the App Store platform, including review ratings, review content, user profile info of each reviewer, review publication dates, and more. The results are specific to the app_id as well as the location and language parameters specified in the POST request. for more info please visit &#39;https://docs.dataforseo.com/v3/app_data/apple/app_reviews/task_get/advanced/?bash&#39;
     * @param id task identifier unique task identifier in our system in the UUID format you will be able to use it within 30 days to request the results of the task at any time (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call appleAppReviewsTaskGetAdvancedAsync(String id, final ApiCallback<AppDataAppleAppReviewsTaskGetAdvancedResponseInfo> _callback) throws ApiException {

        okhttp3.Call localVarCall = appleAppReviewsTaskGetAdvancedValidateBeforeCall(id, _callback);
        Type localVarReturnType = new TypeToken<AppDataAppleAppReviewsTaskGetAdvancedResponseInfo>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for appleAppReviewsTaskPost
     * @param appDataAppleAppReviewsTaskPostRequestInfo  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call appleAppReviewsTaskPostCall(List<AppDataAppleAppReviewsTaskPostRequestInfo> appDataAppleAppReviewsTaskPostRequestInfo, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = appDataAppleAppReviewsTaskPostRequestInfo;

        // create path and map variables
        String localVarPath = "/v3/app_data/apple/app_reviews/task_post";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "basicAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call appleAppReviewsTaskPostValidateBeforeCall(List<AppDataAppleAppReviewsTaskPostRequestInfo> appDataAppleAppReviewsTaskPostRequestInfo, final ApiCallback _callback) throws ApiException {
        return appleAppReviewsTaskPostCall(appDataAppleAppReviewsTaskPostRequestInfo, _callback);

    }

    /**
     * 
     * ‌‌ This endpoint will provide you with reviews published on the App Store platform for the app specified in the app_id field. The returned results are specific to the indicated language and location parameters. for more info please visit &#39;https://docs.dataforseo.com/v3/app_data/apple/app_reviews/task_post/?bash&#39;
     * @param appDataAppleAppReviewsTaskPostRequestInfo  (optional)
     * @return AppDataAppleAppReviewsTaskPostResponseInfo
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public AppDataAppleAppReviewsTaskPostResponseInfo appleAppReviewsTaskPost(List<AppDataAppleAppReviewsTaskPostRequestInfo> appDataAppleAppReviewsTaskPostRequestInfo) throws ApiException {
        ApiResponse<AppDataAppleAppReviewsTaskPostResponseInfo> localVarResp = appleAppReviewsTaskPostWithHttpInfo(appDataAppleAppReviewsTaskPostRequestInfo);
        return localVarResp.getData();
    }

    /**
     * 
     * ‌‌ This endpoint will provide you with reviews published on the App Store platform for the app specified in the app_id field. The returned results are specific to the indicated language and location parameters. for more info please visit &#39;https://docs.dataforseo.com/v3/app_data/apple/app_reviews/task_post/?bash&#39;
     * @param appDataAppleAppReviewsTaskPostRequestInfo  (optional)
     * @return ApiResponse&lt;AppDataAppleAppReviewsTaskPostResponseInfo&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<AppDataAppleAppReviewsTaskPostResponseInfo> appleAppReviewsTaskPostWithHttpInfo(List<AppDataAppleAppReviewsTaskPostRequestInfo> appDataAppleAppReviewsTaskPostRequestInfo) throws ApiException {
        okhttp3.Call localVarCall = appleAppReviewsTaskPostValidateBeforeCall(appDataAppleAppReviewsTaskPostRequestInfo, null);
        Type localVarReturnType = new TypeToken<AppDataAppleAppReviewsTaskPostResponseInfo>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * ‌‌ This endpoint will provide you with reviews published on the App Store platform for the app specified in the app_id field. The returned results are specific to the indicated language and location parameters. for more info please visit &#39;https://docs.dataforseo.com/v3/app_data/apple/app_reviews/task_post/?bash&#39;
     * @param appDataAppleAppReviewsTaskPostRequestInfo  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call appleAppReviewsTaskPostAsync(List<AppDataAppleAppReviewsTaskPostRequestInfo> appDataAppleAppReviewsTaskPostRequestInfo, final ApiCallback<AppDataAppleAppReviewsTaskPostResponseInfo> _callback) throws ApiException {

        okhttp3.Call localVarCall = appleAppReviewsTaskPostValidateBeforeCall(appDataAppleAppReviewsTaskPostRequestInfo, _callback);
        Type localVarReturnType = new TypeToken<AppDataAppleAppReviewsTaskPostResponseInfo>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for appleAppReviewsTasksReady
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call appleAppReviewsTasksReadyCall(final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/v3/app_data/apple/app_reviews/tasks_ready";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "basicAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call appleAppReviewsTasksReadyValidateBeforeCall(final ApiCallback _callback) throws ApiException {
        return appleAppReviewsTasksReadyCall(_callback);

    }

    /**
     * 
     * ‌ The ‘Tasks Ready’ endpoint is designed to provide you with a list of completed tasks that haven’t been collected yet. If you use the Standard method without specifying the postback_url, you can receive the list of id for all completed tasks using this endpoint. Then, you can collect the results using the ‘Task GET’ endpoints. for more info please visit &#39;https://docs.dataforseo.com/v3/app_data/apple/app_reviews/tasks_ready/?bash&#39;
     * @return AppDataAppleAppReviewsTasksReadyResponseInfo
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public AppDataAppleAppReviewsTasksReadyResponseInfo appleAppReviewsTasksReady() throws ApiException {
        ApiResponse<AppDataAppleAppReviewsTasksReadyResponseInfo> localVarResp = appleAppReviewsTasksReadyWithHttpInfo();
        return localVarResp.getData();
    }

    /**
     * 
     * ‌ The ‘Tasks Ready’ endpoint is designed to provide you with a list of completed tasks that haven’t been collected yet. If you use the Standard method without specifying the postback_url, you can receive the list of id for all completed tasks using this endpoint. Then, you can collect the results using the ‘Task GET’ endpoints. for more info please visit &#39;https://docs.dataforseo.com/v3/app_data/apple/app_reviews/tasks_ready/?bash&#39;
     * @return ApiResponse&lt;AppDataAppleAppReviewsTasksReadyResponseInfo&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<AppDataAppleAppReviewsTasksReadyResponseInfo> appleAppReviewsTasksReadyWithHttpInfo() throws ApiException {
        okhttp3.Call localVarCall = appleAppReviewsTasksReadyValidateBeforeCall(null);
        Type localVarReturnType = new TypeToken<AppDataAppleAppReviewsTasksReadyResponseInfo>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * ‌ The ‘Tasks Ready’ endpoint is designed to provide you with a list of completed tasks that haven’t been collected yet. If you use the Standard method without specifying the postback_url, you can receive the list of id for all completed tasks using this endpoint. Then, you can collect the results using the ‘Task GET’ endpoints. for more info please visit &#39;https://docs.dataforseo.com/v3/app_data/apple/app_reviews/tasks_ready/?bash&#39;
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call appleAppReviewsTasksReadyAsync(final ApiCallback<AppDataAppleAppReviewsTasksReadyResponseInfo> _callback) throws ApiException {

        okhttp3.Call localVarCall = appleAppReviewsTasksReadyValidateBeforeCall(_callback);
        Type localVarReturnType = new TypeToken<AppDataAppleAppReviewsTasksReadyResponseInfo>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for appleAppSearchesTaskGetAdvanced
     * @param id task identifier unique task identifier in our system in the UUID format you will be able to use it within 30 days to request the results of the task at any time (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call appleAppSearchesTaskGetAdvancedCall(String id, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/v3/app_data/apple/app_searches/task_get/advanced/{id}"
            .replace("{" + "id" + "}", localVarApiClient.escapeString(id.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "basicAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call appleAppSearchesTaskGetAdvancedValidateBeforeCall(String id, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'id' is set
        if (id == null) {
            throw new ApiException("Missing the required parameter 'id' when calling appleAppSearchesTaskGetAdvanced(Async)");
        }

        return appleAppSearchesTaskGetAdvancedCall(id, _callback);

    }

    /**
     * 
     * This endpoint will provide you with a list of apps ranking on the App Store for the keyword specified in a POST request. You will also receive additional information about each application: its ID, icon, reviews count, rating, price, and other data. The results are specific to the keyword as well as location and language parameters specified in the POST request. for more info please visit &#39;https://docs.dataforseo.com/v3/app_data/apple/app_searches/task_get/advanced/?bash&#39;
     * @param id task identifier unique task identifier in our system in the UUID format you will be able to use it within 30 days to request the results of the task at any time (required)
     * @return AppDataAppleAppSearchesTaskGetAdvancedResponseInfo
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public AppDataAppleAppSearchesTaskGetAdvancedResponseInfo appleAppSearchesTaskGetAdvanced(String id) throws ApiException {
        ApiResponse<AppDataAppleAppSearchesTaskGetAdvancedResponseInfo> localVarResp = appleAppSearchesTaskGetAdvancedWithHttpInfo(id);
        return localVarResp.getData();
    }

    /**
     * 
     * This endpoint will provide you with a list of apps ranking on the App Store for the keyword specified in a POST request. You will also receive additional information about each application: its ID, icon, reviews count, rating, price, and other data. The results are specific to the keyword as well as location and language parameters specified in the POST request. for more info please visit &#39;https://docs.dataforseo.com/v3/app_data/apple/app_searches/task_get/advanced/?bash&#39;
     * @param id task identifier unique task identifier in our system in the UUID format you will be able to use it within 30 days to request the results of the task at any time (required)
     * @return ApiResponse&lt;AppDataAppleAppSearchesTaskGetAdvancedResponseInfo&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<AppDataAppleAppSearchesTaskGetAdvancedResponseInfo> appleAppSearchesTaskGetAdvancedWithHttpInfo(String id) throws ApiException {
        okhttp3.Call localVarCall = appleAppSearchesTaskGetAdvancedValidateBeforeCall(id, null);
        Type localVarReturnType = new TypeToken<AppDataAppleAppSearchesTaskGetAdvancedResponseInfo>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * This endpoint will provide you with a list of apps ranking on the App Store for the keyword specified in a POST request. You will also receive additional information about each application: its ID, icon, reviews count, rating, price, and other data. The results are specific to the keyword as well as location and language parameters specified in the POST request. for more info please visit &#39;https://docs.dataforseo.com/v3/app_data/apple/app_searches/task_get/advanced/?bash&#39;
     * @param id task identifier unique task identifier in our system in the UUID format you will be able to use it within 30 days to request the results of the task at any time (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call appleAppSearchesTaskGetAdvancedAsync(String id, final ApiCallback<AppDataAppleAppSearchesTaskGetAdvancedResponseInfo> _callback) throws ApiException {

        okhttp3.Call localVarCall = appleAppSearchesTaskGetAdvancedValidateBeforeCall(id, _callback);
        Type localVarReturnType = new TypeToken<AppDataAppleAppSearchesTaskGetAdvancedResponseInfo>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for appleAppSearchesTaskPost
     * @param appDataTaskRequestInfo  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call appleAppSearchesTaskPostCall(List<AppDataTaskRequestInfo> appDataTaskRequestInfo, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = appDataTaskRequestInfo;

        // create path and map variables
        String localVarPath = "/v3/app_data/apple/app_searches/task_post";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "basicAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call appleAppSearchesTaskPostValidateBeforeCall(List<AppDataTaskRequestInfo> appDataTaskRequestInfo, final ApiCallback _callback) throws ApiException {
        return appleAppSearchesTaskPostCall(appDataTaskRequestInfo, _callback);

    }

    /**
     * 
     * ‌‌ This endpoint will provide you with a list of apps ranking on the App Store for the specified keyword. The returned results are specific to the indicated keyword, as well as the location and language parameters. for more info please visit &#39;https://docs.dataforseo.com/v3/app_data/apple/app_searches/task_post/?bash&#39;
     * @param appDataTaskRequestInfo  (optional)
     * @return AppDataAppleAppSearchesTaskPostResponseInfo
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public AppDataAppleAppSearchesTaskPostResponseInfo appleAppSearchesTaskPost(List<AppDataTaskRequestInfo> appDataTaskRequestInfo) throws ApiException {
        ApiResponse<AppDataAppleAppSearchesTaskPostResponseInfo> localVarResp = appleAppSearchesTaskPostWithHttpInfo(appDataTaskRequestInfo);
        return localVarResp.getData();
    }

    /**
     * 
     * ‌‌ This endpoint will provide you with a list of apps ranking on the App Store for the specified keyword. The returned results are specific to the indicated keyword, as well as the location and language parameters. for more info please visit &#39;https://docs.dataforseo.com/v3/app_data/apple/app_searches/task_post/?bash&#39;
     * @param appDataTaskRequestInfo  (optional)
     * @return ApiResponse&lt;AppDataAppleAppSearchesTaskPostResponseInfo&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<AppDataAppleAppSearchesTaskPostResponseInfo> appleAppSearchesTaskPostWithHttpInfo(List<AppDataTaskRequestInfo> appDataTaskRequestInfo) throws ApiException {
        okhttp3.Call localVarCall = appleAppSearchesTaskPostValidateBeforeCall(appDataTaskRequestInfo, null);
        Type localVarReturnType = new TypeToken<AppDataAppleAppSearchesTaskPostResponseInfo>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * ‌‌ This endpoint will provide you with a list of apps ranking on the App Store for the specified keyword. The returned results are specific to the indicated keyword, as well as the location and language parameters. for more info please visit &#39;https://docs.dataforseo.com/v3/app_data/apple/app_searches/task_post/?bash&#39;
     * @param appDataTaskRequestInfo  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call appleAppSearchesTaskPostAsync(List<AppDataTaskRequestInfo> appDataTaskRequestInfo, final ApiCallback<AppDataAppleAppSearchesTaskPostResponseInfo> _callback) throws ApiException {

        okhttp3.Call localVarCall = appleAppSearchesTaskPostValidateBeforeCall(appDataTaskRequestInfo, _callback);
        Type localVarReturnType = new TypeToken<AppDataAppleAppSearchesTaskPostResponseInfo>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for appleAppSearchesTasksReady
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call appleAppSearchesTasksReadyCall(final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/v3/app_data/apple/app_searches/tasks_ready";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "basicAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call appleAppSearchesTasksReadyValidateBeforeCall(final ApiCallback _callback) throws ApiException {
        return appleAppSearchesTasksReadyCall(_callback);

    }

    /**
     * 
     * ‌ The ‘Tasks Ready’ endpoint is designed to provide you with a list of completed tasks that haven’t been collected yet. If you use the Standard method without specifying the postback_url, you can receive the list of id for all completed tasks using this endpoint. Then, you can collect the results using the ‘Task GET’ endpoints. for more info please visit &#39;https://docs.dataforseo.com/v3/app_data/apple/app_searches/tasks_ready/?bash&#39;
     * @return AppDataAppleAppSearchesTasksReadyResponseInfo
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public AppDataAppleAppSearchesTasksReadyResponseInfo appleAppSearchesTasksReady() throws ApiException {
        ApiResponse<AppDataAppleAppSearchesTasksReadyResponseInfo> localVarResp = appleAppSearchesTasksReadyWithHttpInfo();
        return localVarResp.getData();
    }

    /**
     * 
     * ‌ The ‘Tasks Ready’ endpoint is designed to provide you with a list of completed tasks that haven’t been collected yet. If you use the Standard method without specifying the postback_url, you can receive the list of id for all completed tasks using this endpoint. Then, you can collect the results using the ‘Task GET’ endpoints. for more info please visit &#39;https://docs.dataforseo.com/v3/app_data/apple/app_searches/tasks_ready/?bash&#39;
     * @return ApiResponse&lt;AppDataAppleAppSearchesTasksReadyResponseInfo&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<AppDataAppleAppSearchesTasksReadyResponseInfo> appleAppSearchesTasksReadyWithHttpInfo() throws ApiException {
        okhttp3.Call localVarCall = appleAppSearchesTasksReadyValidateBeforeCall(null);
        Type localVarReturnType = new TypeToken<AppDataAppleAppSearchesTasksReadyResponseInfo>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * ‌ The ‘Tasks Ready’ endpoint is designed to provide you with a list of completed tasks that haven’t been collected yet. If you use the Standard method without specifying the postback_url, you can receive the list of id for all completed tasks using this endpoint. Then, you can collect the results using the ‘Task GET’ endpoints. for more info please visit &#39;https://docs.dataforseo.com/v3/app_data/apple/app_searches/tasks_ready/?bash&#39;
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call appleAppSearchesTasksReadyAsync(final ApiCallback<AppDataAppleAppSearchesTasksReadyResponseInfo> _callback) throws ApiException {

        okhttp3.Call localVarCall = appleAppSearchesTasksReadyValidateBeforeCall(_callback);
        Type localVarReturnType = new TypeToken<AppDataAppleAppSearchesTasksReadyResponseInfo>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for appleCategories
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call appleCategoriesCall(final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/v3/app_data/apple/categories";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "basicAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call appleCategoriesValidateBeforeCall(final ApiCallback _callback) throws ApiException {
        return appleCategoriesCall(_callback);

    }

    /**
     * 
     * This endpoint will provide you with a full list of app categories available on App Store. for more info please visit &#39;https://docs.dataforseo.com/v3/app_data/apple/categories/?bash&#39;
     * @return AppDataAppleCategoriesResponseInfo
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public AppDataAppleCategoriesResponseInfo appleCategories() throws ApiException {
        ApiResponse<AppDataAppleCategoriesResponseInfo> localVarResp = appleCategoriesWithHttpInfo();
        return localVarResp.getData();
    }

    /**
     * 
     * This endpoint will provide you with a full list of app categories available on App Store. for more info please visit &#39;https://docs.dataforseo.com/v3/app_data/apple/categories/?bash&#39;
     * @return ApiResponse&lt;AppDataAppleCategoriesResponseInfo&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<AppDataAppleCategoriesResponseInfo> appleCategoriesWithHttpInfo() throws ApiException {
        okhttp3.Call localVarCall = appleCategoriesValidateBeforeCall(null);
        Type localVarReturnType = new TypeToken<AppDataAppleCategoriesResponseInfo>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * This endpoint will provide you with a full list of app categories available on App Store. for more info please visit &#39;https://docs.dataforseo.com/v3/app_data/apple/categories/?bash&#39;
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call appleCategoriesAsync(final ApiCallback<AppDataAppleCategoriesResponseInfo> _callback) throws ApiException {

        okhttp3.Call localVarCall = appleCategoriesValidateBeforeCall(_callback);
        Type localVarReturnType = new TypeToken<AppDataAppleCategoriesResponseInfo>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for googleAppInfoTaskGetAdvanced
     * @param id task identifier unique task identifier in our system in the UUID format you will be able to use it within 30 days to request the results of the task at any time (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call googleAppInfoTaskGetAdvancedCall(String id, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/v3/app_data/google/app_info/task_get/advanced/{id}"
            .replace("{" + "id" + "}", localVarApiClient.escapeString(id.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "basicAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call googleAppInfoTaskGetAdvancedValidateBeforeCall(String id, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'id' is set
        if (id == null) {
            throw new ApiException("Missing the required parameter 'id' when calling googleAppInfoTaskGetAdvanced(Async)");
        }

        return googleAppInfoTaskGetAdvancedCall(id, _callback);

    }

    /**
     * 
     * This endpoint will provide you with information about the mobile application specified in a POST request. You will receive its ID, icon, description, reviews count, rating, number of installs, images, and other data. The results are specific to the app_id parameter specified in the POST request. for more info please visit &#39;https://docs.dataforseo.com/v3/app_data/google/app_info/task_get/advanced/?bash&#39;
     * @param id task identifier unique task identifier in our system in the UUID format you will be able to use it within 30 days to request the results of the task at any time (required)
     * @return AppDataGoogleAppInfoTaskGetAdvancedResponseInfo
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public AppDataGoogleAppInfoTaskGetAdvancedResponseInfo googleAppInfoTaskGetAdvanced(String id) throws ApiException {
        ApiResponse<AppDataGoogleAppInfoTaskGetAdvancedResponseInfo> localVarResp = googleAppInfoTaskGetAdvancedWithHttpInfo(id);
        return localVarResp.getData();
    }

    /**
     * 
     * This endpoint will provide you with information about the mobile application specified in a POST request. You will receive its ID, icon, description, reviews count, rating, number of installs, images, and other data. The results are specific to the app_id parameter specified in the POST request. for more info please visit &#39;https://docs.dataforseo.com/v3/app_data/google/app_info/task_get/advanced/?bash&#39;
     * @param id task identifier unique task identifier in our system in the UUID format you will be able to use it within 30 days to request the results of the task at any time (required)
     * @return ApiResponse&lt;AppDataGoogleAppInfoTaskGetAdvancedResponseInfo&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<AppDataGoogleAppInfoTaskGetAdvancedResponseInfo> googleAppInfoTaskGetAdvancedWithHttpInfo(String id) throws ApiException {
        okhttp3.Call localVarCall = googleAppInfoTaskGetAdvancedValidateBeforeCall(id, null);
        Type localVarReturnType = new TypeToken<AppDataGoogleAppInfoTaskGetAdvancedResponseInfo>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * This endpoint will provide you with information about the mobile application specified in a POST request. You will receive its ID, icon, description, reviews count, rating, number of installs, images, and other data. The results are specific to the app_id parameter specified in the POST request. for more info please visit &#39;https://docs.dataforseo.com/v3/app_data/google/app_info/task_get/advanced/?bash&#39;
     * @param id task identifier unique task identifier in our system in the UUID format you will be able to use it within 30 days to request the results of the task at any time (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call googleAppInfoTaskGetAdvancedAsync(String id, final ApiCallback<AppDataGoogleAppInfoTaskGetAdvancedResponseInfo> _callback) throws ApiException {

        okhttp3.Call localVarCall = googleAppInfoTaskGetAdvancedValidateBeforeCall(id, _callback);
        Type localVarReturnType = new TypeToken<AppDataGoogleAppInfoTaskGetAdvancedResponseInfo>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for googleAppInfoTaskGetHtml
     * @param id task identifier unique task identifier in our system in the UUID format you will be able to use it within 7 days to request the results of the task at any time (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call googleAppInfoTaskGetHtmlCall(String id, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/v3/app_data/google/app_info/task_get/html/{id}"
            .replace("{" + "id" + "}", localVarApiClient.escapeString(id.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "basicAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call googleAppInfoTaskGetHtmlValidateBeforeCall(String id, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'id' is set
        if (id == null) {
            throw new ApiException("Missing the required parameter 'id' when calling googleAppInfoTaskGetHtml(Async)");
        }

        return googleAppInfoTaskGetHtmlCall(id, _callback);

    }

    /**
     * 
     * Description of the fields for sending a request: for more info please visit &#39;https://docs.dataforseo.com/v3/app_data/google/app_info/task_get/html/?bash&#39;
     * @param id task identifier unique task identifier in our system in the UUID format you will be able to use it within 7 days to request the results of the task at any time (required)
     * @return AppDataGoogleAppInfoTaskGetHtmlResponseInfo
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public AppDataGoogleAppInfoTaskGetHtmlResponseInfo googleAppInfoTaskGetHtml(String id) throws ApiException {
        ApiResponse<AppDataGoogleAppInfoTaskGetHtmlResponseInfo> localVarResp = googleAppInfoTaskGetHtmlWithHttpInfo(id);
        return localVarResp.getData();
    }

    /**
     * 
     * Description of the fields for sending a request: for more info please visit &#39;https://docs.dataforseo.com/v3/app_data/google/app_info/task_get/html/?bash&#39;
     * @param id task identifier unique task identifier in our system in the UUID format you will be able to use it within 7 days to request the results of the task at any time (required)
     * @return ApiResponse&lt;AppDataGoogleAppInfoTaskGetHtmlResponseInfo&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<AppDataGoogleAppInfoTaskGetHtmlResponseInfo> googleAppInfoTaskGetHtmlWithHttpInfo(String id) throws ApiException {
        okhttp3.Call localVarCall = googleAppInfoTaskGetHtmlValidateBeforeCall(id, null);
        Type localVarReturnType = new TypeToken<AppDataGoogleAppInfoTaskGetHtmlResponseInfo>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Description of the fields for sending a request: for more info please visit &#39;https://docs.dataforseo.com/v3/app_data/google/app_info/task_get/html/?bash&#39;
     * @param id task identifier unique task identifier in our system in the UUID format you will be able to use it within 7 days to request the results of the task at any time (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call googleAppInfoTaskGetHtmlAsync(String id, final ApiCallback<AppDataGoogleAppInfoTaskGetHtmlResponseInfo> _callback) throws ApiException {

        okhttp3.Call localVarCall = googleAppInfoTaskGetHtmlValidateBeforeCall(id, _callback);
        Type localVarReturnType = new TypeToken<AppDataGoogleAppInfoTaskGetHtmlResponseInfo>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for googleAppInfoTaskPost
     * @param appDataGoogleAppInfoTaskPostRequestInfo  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call googleAppInfoTaskPostCall(List<AppDataGoogleAppInfoTaskPostRequestInfo> appDataGoogleAppInfoTaskPostRequestInfo, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = appDataGoogleAppInfoTaskPostRequestInfo;

        // create path and map variables
        String localVarPath = "/v3/app_data/google/app_info/task_post";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "basicAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call googleAppInfoTaskPostValidateBeforeCall(List<AppDataGoogleAppInfoTaskPostRequestInfo> appDataGoogleAppInfoTaskPostRequestInfo, final ApiCallback _callback) throws ApiException {
        return googleAppInfoTaskPostCall(appDataGoogleAppInfoTaskPostRequestInfo, _callback);

    }

    /**
     * 
     * ‌‌ This endpoint will provide you with information about the Google Play application specified in the app_id field of the POST request. for more info please visit &#39;https://docs.dataforseo.com/v3/app_data/google/app_info/task_post/?bash&#39;
     * @param appDataGoogleAppInfoTaskPostRequestInfo  (optional)
     * @return AppDataGoogleAppInfoTaskPostResponseInfo
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public AppDataGoogleAppInfoTaskPostResponseInfo googleAppInfoTaskPost(List<AppDataGoogleAppInfoTaskPostRequestInfo> appDataGoogleAppInfoTaskPostRequestInfo) throws ApiException {
        ApiResponse<AppDataGoogleAppInfoTaskPostResponseInfo> localVarResp = googleAppInfoTaskPostWithHttpInfo(appDataGoogleAppInfoTaskPostRequestInfo);
        return localVarResp.getData();
    }

    /**
     * 
     * ‌‌ This endpoint will provide you with information about the Google Play application specified in the app_id field of the POST request. for more info please visit &#39;https://docs.dataforseo.com/v3/app_data/google/app_info/task_post/?bash&#39;
     * @param appDataGoogleAppInfoTaskPostRequestInfo  (optional)
     * @return ApiResponse&lt;AppDataGoogleAppInfoTaskPostResponseInfo&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<AppDataGoogleAppInfoTaskPostResponseInfo> googleAppInfoTaskPostWithHttpInfo(List<AppDataGoogleAppInfoTaskPostRequestInfo> appDataGoogleAppInfoTaskPostRequestInfo) throws ApiException {
        okhttp3.Call localVarCall = googleAppInfoTaskPostValidateBeforeCall(appDataGoogleAppInfoTaskPostRequestInfo, null);
        Type localVarReturnType = new TypeToken<AppDataGoogleAppInfoTaskPostResponseInfo>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * ‌‌ This endpoint will provide you with information about the Google Play application specified in the app_id field of the POST request. for more info please visit &#39;https://docs.dataforseo.com/v3/app_data/google/app_info/task_post/?bash&#39;
     * @param appDataGoogleAppInfoTaskPostRequestInfo  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call googleAppInfoTaskPostAsync(List<AppDataGoogleAppInfoTaskPostRequestInfo> appDataGoogleAppInfoTaskPostRequestInfo, final ApiCallback<AppDataGoogleAppInfoTaskPostResponseInfo> _callback) throws ApiException {

        okhttp3.Call localVarCall = googleAppInfoTaskPostValidateBeforeCall(appDataGoogleAppInfoTaskPostRequestInfo, _callback);
        Type localVarReturnType = new TypeToken<AppDataGoogleAppInfoTaskPostResponseInfo>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for googleAppInfoTasksReady
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call googleAppInfoTasksReadyCall(final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/v3/app_data/google/app_info/tasks_ready";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "basicAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call googleAppInfoTasksReadyValidateBeforeCall(final ApiCallback _callback) throws ApiException {
        return googleAppInfoTasksReadyCall(_callback);

    }

    /**
     * 
     * ‌ The ‘Tasks Ready’ endpoint is designed to provide you with a list of completed tasks that haven’t been collected yet. If you use the Standard method without specifying the postback_url, you can receive the list of id for all completed tasks using this endpoint. Then, you can collect the results using the ‘Task GET’ endpoints. for more info please visit &#39;https://docs.dataforseo.com/v3/app_data/google/app_info/tasks_ready/?bash&#39;
     * @return AppDataGoogleAppInfoTasksReadyResponseInfo
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public AppDataGoogleAppInfoTasksReadyResponseInfo googleAppInfoTasksReady() throws ApiException {
        ApiResponse<AppDataGoogleAppInfoTasksReadyResponseInfo> localVarResp = googleAppInfoTasksReadyWithHttpInfo();
        return localVarResp.getData();
    }

    /**
     * 
     * ‌ The ‘Tasks Ready’ endpoint is designed to provide you with a list of completed tasks that haven’t been collected yet. If you use the Standard method without specifying the postback_url, you can receive the list of id for all completed tasks using this endpoint. Then, you can collect the results using the ‘Task GET’ endpoints. for more info please visit &#39;https://docs.dataforseo.com/v3/app_data/google/app_info/tasks_ready/?bash&#39;
     * @return ApiResponse&lt;AppDataGoogleAppInfoTasksReadyResponseInfo&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<AppDataGoogleAppInfoTasksReadyResponseInfo> googleAppInfoTasksReadyWithHttpInfo() throws ApiException {
        okhttp3.Call localVarCall = googleAppInfoTasksReadyValidateBeforeCall(null);
        Type localVarReturnType = new TypeToken<AppDataGoogleAppInfoTasksReadyResponseInfo>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * ‌ The ‘Tasks Ready’ endpoint is designed to provide you with a list of completed tasks that haven’t been collected yet. If you use the Standard method without specifying the postback_url, you can receive the list of id for all completed tasks using this endpoint. Then, you can collect the results using the ‘Task GET’ endpoints. for more info please visit &#39;https://docs.dataforseo.com/v3/app_data/google/app_info/tasks_ready/?bash&#39;
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call googleAppInfoTasksReadyAsync(final ApiCallback<AppDataGoogleAppInfoTasksReadyResponseInfo> _callback) throws ApiException {

        okhttp3.Call localVarCall = googleAppInfoTasksReadyValidateBeforeCall(_callback);
        Type localVarReturnType = new TypeToken<AppDataGoogleAppInfoTasksReadyResponseInfo>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for googleAppListTaskGetAdvanced
     * @param id task identifier unique task identifier in our system in the UUID format you will be able to use it within 30 days to request the results of the task at any time (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call googleAppListTaskGetAdvancedCall(String id, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/v3/app_data/google/app_list/task_get/advanced/{id}"
            .replace("{" + "id" + "}", localVarApiClient.escapeString(id.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "basicAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call googleAppListTaskGetAdvancedValidateBeforeCall(String id, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'id' is set
        if (id == null) {
            throw new ApiException("Missing the required parameter 'id' when calling googleAppListTaskGetAdvanced(Async)");
        }

        return googleAppListTaskGetAdvancedCall(id, _callback);

    }

    /**
     * 
     * This endpoint will provide you with a list of applications published in the top charts on the Google Play platform, including app IDs, ratings, prices, titles, and more. The results are specific to the app_collection as well as the location and language parameters specified in the POST request. for more info please visit &#39;https://docs.dataforseo.com/v3/app_data/google/app_list/task_get/advanced/?bash&#39;
     * @param id task identifier unique task identifier in our system in the UUID format you will be able to use it within 30 days to request the results of the task at any time (required)
     * @return AppDataGoogleAppListTaskGetAdvancedResponseInfo
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public AppDataGoogleAppListTaskGetAdvancedResponseInfo googleAppListTaskGetAdvanced(String id) throws ApiException {
        ApiResponse<AppDataGoogleAppListTaskGetAdvancedResponseInfo> localVarResp = googleAppListTaskGetAdvancedWithHttpInfo(id);
        return localVarResp.getData();
    }

    /**
     * 
     * This endpoint will provide you with a list of applications published in the top charts on the Google Play platform, including app IDs, ratings, prices, titles, and more. The results are specific to the app_collection as well as the location and language parameters specified in the POST request. for more info please visit &#39;https://docs.dataforseo.com/v3/app_data/google/app_list/task_get/advanced/?bash&#39;
     * @param id task identifier unique task identifier in our system in the UUID format you will be able to use it within 30 days to request the results of the task at any time (required)
     * @return ApiResponse&lt;AppDataGoogleAppListTaskGetAdvancedResponseInfo&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<AppDataGoogleAppListTaskGetAdvancedResponseInfo> googleAppListTaskGetAdvancedWithHttpInfo(String id) throws ApiException {
        okhttp3.Call localVarCall = googleAppListTaskGetAdvancedValidateBeforeCall(id, null);
        Type localVarReturnType = new TypeToken<AppDataGoogleAppListTaskGetAdvancedResponseInfo>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * This endpoint will provide you with a list of applications published in the top charts on the Google Play platform, including app IDs, ratings, prices, titles, and more. The results are specific to the app_collection as well as the location and language parameters specified in the POST request. for more info please visit &#39;https://docs.dataforseo.com/v3/app_data/google/app_list/task_get/advanced/?bash&#39;
     * @param id task identifier unique task identifier in our system in the UUID format you will be able to use it within 30 days to request the results of the task at any time (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call googleAppListTaskGetAdvancedAsync(String id, final ApiCallback<AppDataGoogleAppListTaskGetAdvancedResponseInfo> _callback) throws ApiException {

        okhttp3.Call localVarCall = googleAppListTaskGetAdvancedValidateBeforeCall(id, _callback);
        Type localVarReturnType = new TypeToken<AppDataGoogleAppListTaskGetAdvancedResponseInfo>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for googleAppListTaskGetHtml
     * @param id task identifier unique task identifier in our system in the UUID format you will be able to use it within 7 days to request the results of the task at any time (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call googleAppListTaskGetHtmlCall(String id, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/v3/app_data/google/app_list/task_get/html/{id}"
            .replace("{" + "id" + "}", localVarApiClient.escapeString(id.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "basicAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call googleAppListTaskGetHtmlValidateBeforeCall(String id, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'id' is set
        if (id == null) {
            throw new ApiException("Missing the required parameter 'id' when calling googleAppListTaskGetHtml(Async)");
        }

        return googleAppListTaskGetHtmlCall(id, _callback);

    }

    /**
     * 
     * Description of the fields for sending a request: for more info please visit &#39;https://docs.dataforseo.com/v3/app_data/google/app_list/task_get/html/?bash&#39;
     * @param id task identifier unique task identifier in our system in the UUID format you will be able to use it within 7 days to request the results of the task at any time (required)
     * @return AppDataGoogleAppListTaskGetHtmlResponseInfo
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public AppDataGoogleAppListTaskGetHtmlResponseInfo googleAppListTaskGetHtml(String id) throws ApiException {
        ApiResponse<AppDataGoogleAppListTaskGetHtmlResponseInfo> localVarResp = googleAppListTaskGetHtmlWithHttpInfo(id);
        return localVarResp.getData();
    }

    /**
     * 
     * Description of the fields for sending a request: for more info please visit &#39;https://docs.dataforseo.com/v3/app_data/google/app_list/task_get/html/?bash&#39;
     * @param id task identifier unique task identifier in our system in the UUID format you will be able to use it within 7 days to request the results of the task at any time (required)
     * @return ApiResponse&lt;AppDataGoogleAppListTaskGetHtmlResponseInfo&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<AppDataGoogleAppListTaskGetHtmlResponseInfo> googleAppListTaskGetHtmlWithHttpInfo(String id) throws ApiException {
        okhttp3.Call localVarCall = googleAppListTaskGetHtmlValidateBeforeCall(id, null);
        Type localVarReturnType = new TypeToken<AppDataGoogleAppListTaskGetHtmlResponseInfo>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Description of the fields for sending a request: for more info please visit &#39;https://docs.dataforseo.com/v3/app_data/google/app_list/task_get/html/?bash&#39;
     * @param id task identifier unique task identifier in our system in the UUID format you will be able to use it within 7 days to request the results of the task at any time (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call googleAppListTaskGetHtmlAsync(String id, final ApiCallback<AppDataGoogleAppListTaskGetHtmlResponseInfo> _callback) throws ApiException {

        okhttp3.Call localVarCall = googleAppListTaskGetHtmlValidateBeforeCall(id, _callback);
        Type localVarReturnType = new TypeToken<AppDataGoogleAppListTaskGetHtmlResponseInfo>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for googleAppListTaskPost
     * @param appDataGoogleAppListTaskPostRequestInfo  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call googleAppListTaskPostCall(List<AppDataGoogleAppListTaskPostRequestInfo> appDataGoogleAppListTaskPostRequestInfo, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = appDataGoogleAppListTaskPostRequestInfo;

        // create path and map variables
        String localVarPath = "/v3/app_data/google/app_list/task_post";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "basicAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call googleAppListTaskPostValidateBeforeCall(List<AppDataGoogleAppListTaskPostRequestInfo> appDataGoogleAppListTaskPostRequestInfo, final ApiCallback _callback) throws ApiException {
        return googleAppListTaskPostCall(appDataGoogleAppListTaskPostRequestInfo, _callback);

    }

    /**
     * 
     * ‌‌ This endpoint will provide you with a list of mobile applications published in the top charts on the Google Play platform. The returned results are specific to the app collection as well as the the language and location parameters. for more info please visit &#39;https://docs.dataforseo.com/v3/app_data/google/app_list/task_post/?bash&#39;
     * @param appDataGoogleAppListTaskPostRequestInfo  (optional)
     * @return AppDataGoogleAppListTaskPostResponseInfo
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public AppDataGoogleAppListTaskPostResponseInfo googleAppListTaskPost(List<AppDataGoogleAppListTaskPostRequestInfo> appDataGoogleAppListTaskPostRequestInfo) throws ApiException {
        ApiResponse<AppDataGoogleAppListTaskPostResponseInfo> localVarResp = googleAppListTaskPostWithHttpInfo(appDataGoogleAppListTaskPostRequestInfo);
        return localVarResp.getData();
    }

    /**
     * 
     * ‌‌ This endpoint will provide you with a list of mobile applications published in the top charts on the Google Play platform. The returned results are specific to the app collection as well as the the language and location parameters. for more info please visit &#39;https://docs.dataforseo.com/v3/app_data/google/app_list/task_post/?bash&#39;
     * @param appDataGoogleAppListTaskPostRequestInfo  (optional)
     * @return ApiResponse&lt;AppDataGoogleAppListTaskPostResponseInfo&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<AppDataGoogleAppListTaskPostResponseInfo> googleAppListTaskPostWithHttpInfo(List<AppDataGoogleAppListTaskPostRequestInfo> appDataGoogleAppListTaskPostRequestInfo) throws ApiException {
        okhttp3.Call localVarCall = googleAppListTaskPostValidateBeforeCall(appDataGoogleAppListTaskPostRequestInfo, null);
        Type localVarReturnType = new TypeToken<AppDataGoogleAppListTaskPostResponseInfo>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * ‌‌ This endpoint will provide you with a list of mobile applications published in the top charts on the Google Play platform. The returned results are specific to the app collection as well as the the language and location parameters. for more info please visit &#39;https://docs.dataforseo.com/v3/app_data/google/app_list/task_post/?bash&#39;
     * @param appDataGoogleAppListTaskPostRequestInfo  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call googleAppListTaskPostAsync(List<AppDataGoogleAppListTaskPostRequestInfo> appDataGoogleAppListTaskPostRequestInfo, final ApiCallback<AppDataGoogleAppListTaskPostResponseInfo> _callback) throws ApiException {

        okhttp3.Call localVarCall = googleAppListTaskPostValidateBeforeCall(appDataGoogleAppListTaskPostRequestInfo, _callback);
        Type localVarReturnType = new TypeToken<AppDataGoogleAppListTaskPostResponseInfo>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for googleAppListTasksReady
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call googleAppListTasksReadyCall(final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/v3/app_data/google/app_list/tasks_ready";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "basicAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call googleAppListTasksReadyValidateBeforeCall(final ApiCallback _callback) throws ApiException {
        return googleAppListTasksReadyCall(_callback);

    }

    /**
     * 
     * ‌ The ‘Tasks Ready’ endpoint is designed to provide you with a list of completed tasks that haven’t been collected yet. If you use the Standard method without specifying the postback_url, you can receive the list of id for all completed tasks using this endpoint. Then, you can collect the results using the ‘Task GET’ endpoints. for more info please visit &#39;https://docs.dataforseo.com/v3/app_data/google/app_list/tasks_ready/?bash&#39;
     * @return AppDataGoogleAppListTasksReadyResponseInfo
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public AppDataGoogleAppListTasksReadyResponseInfo googleAppListTasksReady() throws ApiException {
        ApiResponse<AppDataGoogleAppListTasksReadyResponseInfo> localVarResp = googleAppListTasksReadyWithHttpInfo();
        return localVarResp.getData();
    }

    /**
     * 
     * ‌ The ‘Tasks Ready’ endpoint is designed to provide you with a list of completed tasks that haven’t been collected yet. If you use the Standard method without specifying the postback_url, you can receive the list of id for all completed tasks using this endpoint. Then, you can collect the results using the ‘Task GET’ endpoints. for more info please visit &#39;https://docs.dataforseo.com/v3/app_data/google/app_list/tasks_ready/?bash&#39;
     * @return ApiResponse&lt;AppDataGoogleAppListTasksReadyResponseInfo&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<AppDataGoogleAppListTasksReadyResponseInfo> googleAppListTasksReadyWithHttpInfo() throws ApiException {
        okhttp3.Call localVarCall = googleAppListTasksReadyValidateBeforeCall(null);
        Type localVarReturnType = new TypeToken<AppDataGoogleAppListTasksReadyResponseInfo>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * ‌ The ‘Tasks Ready’ endpoint is designed to provide you with a list of completed tasks that haven’t been collected yet. If you use the Standard method without specifying the postback_url, you can receive the list of id for all completed tasks using this endpoint. Then, you can collect the results using the ‘Task GET’ endpoints. for more info please visit &#39;https://docs.dataforseo.com/v3/app_data/google/app_list/tasks_ready/?bash&#39;
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call googleAppListTasksReadyAsync(final ApiCallback<AppDataGoogleAppListTasksReadyResponseInfo> _callback) throws ApiException {

        okhttp3.Call localVarCall = googleAppListTasksReadyValidateBeforeCall(_callback);
        Type localVarReturnType = new TypeToken<AppDataGoogleAppListTasksReadyResponseInfo>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for googleAppListingsCategories
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call googleAppListingsCategoriesCall(final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/v3/app_data/google/app_listings/categories";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "basicAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call googleAppListingsCategoriesValidateBeforeCall(final ApiCallback _callback) throws ApiException {
        return googleAppListingsCategoriesCall(_callback);

    }

    /**
     * 
     * This endpoint will provide you with a full list of app categories available on Google Play. for more info please visit &#39;https://docs.dataforseo.com/v3/app_data/google/app_listings/categories/?bash&#39;
     * @return AppDataGoogleAppListingsCategoriesResponseInfo
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public AppDataGoogleAppListingsCategoriesResponseInfo googleAppListingsCategories() throws ApiException {
        ApiResponse<AppDataGoogleAppListingsCategoriesResponseInfo> localVarResp = googleAppListingsCategoriesWithHttpInfo();
        return localVarResp.getData();
    }

    /**
     * 
     * This endpoint will provide you with a full list of app categories available on Google Play. for more info please visit &#39;https://docs.dataforseo.com/v3/app_data/google/app_listings/categories/?bash&#39;
     * @return ApiResponse&lt;AppDataGoogleAppListingsCategoriesResponseInfo&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<AppDataGoogleAppListingsCategoriesResponseInfo> googleAppListingsCategoriesWithHttpInfo() throws ApiException {
        okhttp3.Call localVarCall = googleAppListingsCategoriesValidateBeforeCall(null);
        Type localVarReturnType = new TypeToken<AppDataGoogleAppListingsCategoriesResponseInfo>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * This endpoint will provide you with a full list of app categories available on Google Play. for more info please visit &#39;https://docs.dataforseo.com/v3/app_data/google/app_listings/categories/?bash&#39;
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call googleAppListingsCategoriesAsync(final ApiCallback<AppDataGoogleAppListingsCategoriesResponseInfo> _callback) throws ApiException {

        okhttp3.Call localVarCall = googleAppListingsCategoriesValidateBeforeCall(_callback);
        Type localVarReturnType = new TypeToken<AppDataGoogleAppListingsCategoriesResponseInfo>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for googleAppListingsSearchLive
     * @param appDataGoogleAppListingsSearchLiveRequestInfo  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call googleAppListingsSearchLiveCall(List<AppDataGoogleAppListingsSearchLiveRequestInfo> appDataGoogleAppListingsSearchLiveRequestInfo, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = appDataGoogleAppListingsSearchLiveRequestInfo;

        // create path and map variables
        String localVarPath = "/v3/app_data/google/app_listings/search/live";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "basicAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call googleAppListingsSearchLiveValidateBeforeCall(List<AppDataGoogleAppListingsSearchLiveRequestInfo> appDataGoogleAppListingsSearchLiveRequestInfo, final ApiCallback _callback) throws ApiException {
        return googleAppListingsSearchLiveCall(appDataGoogleAppListingsSearchLiveRequestInfo, _callback);

    }

    /**
     * 
     * This endpoint will provide you with a list of apps published on Google Play along with additional information: its ID, icon, reviews count, rating, price, and other data. The results are specific to the title, description, and categories parameters specified in the API request. for more info please visit &#39;https://docs.dataforseo.com/v3/app_data/google/app_listings/search/live/?bash&#39;
     * @param appDataGoogleAppListingsSearchLiveRequestInfo  (optional)
     * @return AppDataGoogleAppListingsSearchLiveResponseInfo
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public AppDataGoogleAppListingsSearchLiveResponseInfo googleAppListingsSearchLive(List<AppDataGoogleAppListingsSearchLiveRequestInfo> appDataGoogleAppListingsSearchLiveRequestInfo) throws ApiException {
        ApiResponse<AppDataGoogleAppListingsSearchLiveResponseInfo> localVarResp = googleAppListingsSearchLiveWithHttpInfo(appDataGoogleAppListingsSearchLiveRequestInfo);
        return localVarResp.getData();
    }

    /**
     * 
     * This endpoint will provide you with a list of apps published on Google Play along with additional information: its ID, icon, reviews count, rating, price, and other data. The results are specific to the title, description, and categories parameters specified in the API request. for more info please visit &#39;https://docs.dataforseo.com/v3/app_data/google/app_listings/search/live/?bash&#39;
     * @param appDataGoogleAppListingsSearchLiveRequestInfo  (optional)
     * @return ApiResponse&lt;AppDataGoogleAppListingsSearchLiveResponseInfo&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<AppDataGoogleAppListingsSearchLiveResponseInfo> googleAppListingsSearchLiveWithHttpInfo(List<AppDataGoogleAppListingsSearchLiveRequestInfo> appDataGoogleAppListingsSearchLiveRequestInfo) throws ApiException {
        okhttp3.Call localVarCall = googleAppListingsSearchLiveValidateBeforeCall(appDataGoogleAppListingsSearchLiveRequestInfo, null);
        Type localVarReturnType = new TypeToken<AppDataGoogleAppListingsSearchLiveResponseInfo>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * This endpoint will provide you with a list of apps published on Google Play along with additional information: its ID, icon, reviews count, rating, price, and other data. The results are specific to the title, description, and categories parameters specified in the API request. for more info please visit &#39;https://docs.dataforseo.com/v3/app_data/google/app_listings/search/live/?bash&#39;
     * @param appDataGoogleAppListingsSearchLiveRequestInfo  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call googleAppListingsSearchLiveAsync(List<AppDataGoogleAppListingsSearchLiveRequestInfo> appDataGoogleAppListingsSearchLiveRequestInfo, final ApiCallback<AppDataGoogleAppListingsSearchLiveResponseInfo> _callback) throws ApiException {

        okhttp3.Call localVarCall = googleAppListingsSearchLiveValidateBeforeCall(appDataGoogleAppListingsSearchLiveRequestInfo, _callback);
        Type localVarReturnType = new TypeToken<AppDataGoogleAppListingsSearchLiveResponseInfo>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for googleAppReviewsTaskGetAdvanced
     * @param id task identifier unique task identifier in our system in the UUID format you will be able to use it within 30 days to request the results of the task at any time (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call googleAppReviewsTaskGetAdvancedCall(String id, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/v3/app_data/google/app_reviews/task_get/advanced/{id}"
            .replace("{" + "id" + "}", localVarApiClient.escapeString(id.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "basicAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call googleAppReviewsTaskGetAdvancedValidateBeforeCall(String id, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'id' is set
        if (id == null) {
            throw new ApiException("Missing the required parameter 'id' when calling googleAppReviewsTaskGetAdvanced(Async)");
        }

        return googleAppReviewsTaskGetAdvancedCall(id, _callback);

    }

    /**
     * 
     * This endpoint will provide you with feedback data on applications listed on the Google Play platform, including review ratings, review content, user profile info of each reviewer, review publication dates, and more. The results are specific to the app_id as well as the location and language parameters specified in the POST request. for more info please visit &#39;https://docs.dataforseo.com/v3/app_data/google/app_reviews/task_get/advanced/?bash&#39;
     * @param id task identifier unique task identifier in our system in the UUID format you will be able to use it within 30 days to request the results of the task at any time (required)
     * @return AppDataGoogleAppReviewsTaskGetAdvancedResponseInfo
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public AppDataGoogleAppReviewsTaskGetAdvancedResponseInfo googleAppReviewsTaskGetAdvanced(String id) throws ApiException {
        ApiResponse<AppDataGoogleAppReviewsTaskGetAdvancedResponseInfo> localVarResp = googleAppReviewsTaskGetAdvancedWithHttpInfo(id);
        return localVarResp.getData();
    }

    /**
     * 
     * This endpoint will provide you with feedback data on applications listed on the Google Play platform, including review ratings, review content, user profile info of each reviewer, review publication dates, and more. The results are specific to the app_id as well as the location and language parameters specified in the POST request. for more info please visit &#39;https://docs.dataforseo.com/v3/app_data/google/app_reviews/task_get/advanced/?bash&#39;
     * @param id task identifier unique task identifier in our system in the UUID format you will be able to use it within 30 days to request the results of the task at any time (required)
     * @return ApiResponse&lt;AppDataGoogleAppReviewsTaskGetAdvancedResponseInfo&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<AppDataGoogleAppReviewsTaskGetAdvancedResponseInfo> googleAppReviewsTaskGetAdvancedWithHttpInfo(String id) throws ApiException {
        okhttp3.Call localVarCall = googleAppReviewsTaskGetAdvancedValidateBeforeCall(id, null);
        Type localVarReturnType = new TypeToken<AppDataGoogleAppReviewsTaskGetAdvancedResponseInfo>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * This endpoint will provide you with feedback data on applications listed on the Google Play platform, including review ratings, review content, user profile info of each reviewer, review publication dates, and more. The results are specific to the app_id as well as the location and language parameters specified in the POST request. for more info please visit &#39;https://docs.dataforseo.com/v3/app_data/google/app_reviews/task_get/advanced/?bash&#39;
     * @param id task identifier unique task identifier in our system in the UUID format you will be able to use it within 30 days to request the results of the task at any time (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call googleAppReviewsTaskGetAdvancedAsync(String id, final ApiCallback<AppDataGoogleAppReviewsTaskGetAdvancedResponseInfo> _callback) throws ApiException {

        okhttp3.Call localVarCall = googleAppReviewsTaskGetAdvancedValidateBeforeCall(id, _callback);
        Type localVarReturnType = new TypeToken<AppDataGoogleAppReviewsTaskGetAdvancedResponseInfo>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for googleAppReviewsTaskGetHtml
     * @param id task identifier unique task identifier in our system in the UUID format you will be able to use it within 7 days to request the results of the task at any time (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call googleAppReviewsTaskGetHtmlCall(String id, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/v3/app_data/google/app_reviews/task_get/html/{id}"
            .replace("{" + "id" + "}", localVarApiClient.escapeString(id.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "basicAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call googleAppReviewsTaskGetHtmlValidateBeforeCall(String id, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'id' is set
        if (id == null) {
            throw new ApiException("Missing the required parameter 'id' when calling googleAppReviewsTaskGetHtml(Async)");
        }

        return googleAppReviewsTaskGetHtmlCall(id, _callback);

    }

    /**
     * 
     * Description of the fields for sending a request: for more info please visit &#39;https://docs.dataforseo.com/v3/app_data/google/app_reviews/task_get/html/?bash&#39;
     * @param id task identifier unique task identifier in our system in the UUID format you will be able to use it within 7 days to request the results of the task at any time (required)
     * @return AppDataGoogleAppReviewsTaskGetHtmlResponseInfo
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public AppDataGoogleAppReviewsTaskGetHtmlResponseInfo googleAppReviewsTaskGetHtml(String id) throws ApiException {
        ApiResponse<AppDataGoogleAppReviewsTaskGetHtmlResponseInfo> localVarResp = googleAppReviewsTaskGetHtmlWithHttpInfo(id);
        return localVarResp.getData();
    }

    /**
     * 
     * Description of the fields for sending a request: for more info please visit &#39;https://docs.dataforseo.com/v3/app_data/google/app_reviews/task_get/html/?bash&#39;
     * @param id task identifier unique task identifier in our system in the UUID format you will be able to use it within 7 days to request the results of the task at any time (required)
     * @return ApiResponse&lt;AppDataGoogleAppReviewsTaskGetHtmlResponseInfo&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<AppDataGoogleAppReviewsTaskGetHtmlResponseInfo> googleAppReviewsTaskGetHtmlWithHttpInfo(String id) throws ApiException {
        okhttp3.Call localVarCall = googleAppReviewsTaskGetHtmlValidateBeforeCall(id, null);
        Type localVarReturnType = new TypeToken<AppDataGoogleAppReviewsTaskGetHtmlResponseInfo>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Description of the fields for sending a request: for more info please visit &#39;https://docs.dataforseo.com/v3/app_data/google/app_reviews/task_get/html/?bash&#39;
     * @param id task identifier unique task identifier in our system in the UUID format you will be able to use it within 7 days to request the results of the task at any time (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call googleAppReviewsTaskGetHtmlAsync(String id, final ApiCallback<AppDataGoogleAppReviewsTaskGetHtmlResponseInfo> _callback) throws ApiException {

        okhttp3.Call localVarCall = googleAppReviewsTaskGetHtmlValidateBeforeCall(id, _callback);
        Type localVarReturnType = new TypeToken<AppDataGoogleAppReviewsTaskGetHtmlResponseInfo>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for googleAppReviewsTaskPost
     * @param appDataGoogleAppReviewsTaskPostRequestInfo  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call googleAppReviewsTaskPostCall(List<AppDataGoogleAppReviewsTaskPostRequestInfo> appDataGoogleAppReviewsTaskPostRequestInfo, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = appDataGoogleAppReviewsTaskPostRequestInfo;

        // create path and map variables
        String localVarPath = "/v3/app_data/google/app_reviews/task_post";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "basicAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call googleAppReviewsTaskPostValidateBeforeCall(List<AppDataGoogleAppReviewsTaskPostRequestInfo> appDataGoogleAppReviewsTaskPostRequestInfo, final ApiCallback _callback) throws ApiException {
        return googleAppReviewsTaskPostCall(appDataGoogleAppReviewsTaskPostRequestInfo, _callback);

    }

    /**
     * 
     * ‌‌ This endpoint will provide you with reviews published on the Google Play platform for the app specified in the app_id field. The returned results are specific to the indicated language and location parameters. for more info please visit &#39;https://docs.dataforseo.com/v3/app_data/google/app_reviews/task_post/?bash&#39;
     * @param appDataGoogleAppReviewsTaskPostRequestInfo  (optional)
     * @return AppDataGoogleAppReviewsTaskPostResponseInfo
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public AppDataGoogleAppReviewsTaskPostResponseInfo googleAppReviewsTaskPost(List<AppDataGoogleAppReviewsTaskPostRequestInfo> appDataGoogleAppReviewsTaskPostRequestInfo) throws ApiException {
        ApiResponse<AppDataGoogleAppReviewsTaskPostResponseInfo> localVarResp = googleAppReviewsTaskPostWithHttpInfo(appDataGoogleAppReviewsTaskPostRequestInfo);
        return localVarResp.getData();
    }

    /**
     * 
     * ‌‌ This endpoint will provide you with reviews published on the Google Play platform for the app specified in the app_id field. The returned results are specific to the indicated language and location parameters. for more info please visit &#39;https://docs.dataforseo.com/v3/app_data/google/app_reviews/task_post/?bash&#39;
     * @param appDataGoogleAppReviewsTaskPostRequestInfo  (optional)
     * @return ApiResponse&lt;AppDataGoogleAppReviewsTaskPostResponseInfo&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<AppDataGoogleAppReviewsTaskPostResponseInfo> googleAppReviewsTaskPostWithHttpInfo(List<AppDataGoogleAppReviewsTaskPostRequestInfo> appDataGoogleAppReviewsTaskPostRequestInfo) throws ApiException {
        okhttp3.Call localVarCall = googleAppReviewsTaskPostValidateBeforeCall(appDataGoogleAppReviewsTaskPostRequestInfo, null);
        Type localVarReturnType = new TypeToken<AppDataGoogleAppReviewsTaskPostResponseInfo>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * ‌‌ This endpoint will provide you with reviews published on the Google Play platform for the app specified in the app_id field. The returned results are specific to the indicated language and location parameters. for more info please visit &#39;https://docs.dataforseo.com/v3/app_data/google/app_reviews/task_post/?bash&#39;
     * @param appDataGoogleAppReviewsTaskPostRequestInfo  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call googleAppReviewsTaskPostAsync(List<AppDataGoogleAppReviewsTaskPostRequestInfo> appDataGoogleAppReviewsTaskPostRequestInfo, final ApiCallback<AppDataGoogleAppReviewsTaskPostResponseInfo> _callback) throws ApiException {

        okhttp3.Call localVarCall = googleAppReviewsTaskPostValidateBeforeCall(appDataGoogleAppReviewsTaskPostRequestInfo, _callback);
        Type localVarReturnType = new TypeToken<AppDataGoogleAppReviewsTaskPostResponseInfo>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for googleAppReviewsTasksReady
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call googleAppReviewsTasksReadyCall(final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/v3/app_data/google/app_reviews/tasks_ready";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "basicAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call googleAppReviewsTasksReadyValidateBeforeCall(final ApiCallback _callback) throws ApiException {
        return googleAppReviewsTasksReadyCall(_callback);

    }

    /**
     * 
     * ‌ The ‘Tasks Ready’ endpoint is designed to provide you with a list of completed tasks that haven’t been collected yet. If you use the Standard method without specifying the postback_url, you can receive the list of id for all completed tasks using this endpoint. Then, you can collect the results using the ‘Task GET’ endpoints. for more info please visit &#39;https://docs.dataforseo.com/v3/app_data/google/app_reviews/tasks_ready/?bash&#39;
     * @return AppDataGoogleAppReviewsTasksReadyResponseInfo
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public AppDataGoogleAppReviewsTasksReadyResponseInfo googleAppReviewsTasksReady() throws ApiException {
        ApiResponse<AppDataGoogleAppReviewsTasksReadyResponseInfo> localVarResp = googleAppReviewsTasksReadyWithHttpInfo();
        return localVarResp.getData();
    }

    /**
     * 
     * ‌ The ‘Tasks Ready’ endpoint is designed to provide you with a list of completed tasks that haven’t been collected yet. If you use the Standard method without specifying the postback_url, you can receive the list of id for all completed tasks using this endpoint. Then, you can collect the results using the ‘Task GET’ endpoints. for more info please visit &#39;https://docs.dataforseo.com/v3/app_data/google/app_reviews/tasks_ready/?bash&#39;
     * @return ApiResponse&lt;AppDataGoogleAppReviewsTasksReadyResponseInfo&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<AppDataGoogleAppReviewsTasksReadyResponseInfo> googleAppReviewsTasksReadyWithHttpInfo() throws ApiException {
        okhttp3.Call localVarCall = googleAppReviewsTasksReadyValidateBeforeCall(null);
        Type localVarReturnType = new TypeToken<AppDataGoogleAppReviewsTasksReadyResponseInfo>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * ‌ The ‘Tasks Ready’ endpoint is designed to provide you with a list of completed tasks that haven’t been collected yet. If you use the Standard method without specifying the postback_url, you can receive the list of id for all completed tasks using this endpoint. Then, you can collect the results using the ‘Task GET’ endpoints. for more info please visit &#39;https://docs.dataforseo.com/v3/app_data/google/app_reviews/tasks_ready/?bash&#39;
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call googleAppReviewsTasksReadyAsync(final ApiCallback<AppDataGoogleAppReviewsTasksReadyResponseInfo> _callback) throws ApiException {

        okhttp3.Call localVarCall = googleAppReviewsTasksReadyValidateBeforeCall(_callback);
        Type localVarReturnType = new TypeToken<AppDataGoogleAppReviewsTasksReadyResponseInfo>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for googleAppSearchesTaskGetAdvanced
     * @param id task identifier unique task identifier in our system in the UUID format you will be able to use it within 30 days to request the results of the task at any time (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call googleAppSearchesTaskGetAdvancedCall(String id, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/v3/app_data/google/app_searches/task_get/advanced/{id}"
            .replace("{" + "id" + "}", localVarApiClient.escapeString(id.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "basicAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call googleAppSearchesTaskGetAdvancedValidateBeforeCall(String id, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'id' is set
        if (id == null) {
            throw new ApiException("Missing the required parameter 'id' when calling googleAppSearchesTaskGetAdvanced(Async)");
        }

        return googleAppSearchesTaskGetAdvancedCall(id, _callback);

    }

    /**
     * 
     * This endpoint will provide you with a list of apps ranking on Google Play for the keyword specified in a POST request. You will also receive additional information about each application: its ID, icon, reviews count, rating, price, and other data. The results are specific to the keyword as well as location and language parameters specified in the POST request. for more info please visit &#39;https://docs.dataforseo.com/v3/app_data/google/app_searches/task_get/advanced/?bash&#39;
     * @param id task identifier unique task identifier in our system in the UUID format you will be able to use it within 30 days to request the results of the task at any time (required)
     * @return AppDataGoogleAppSearchesTaskGetAdvancedResponseInfo
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public AppDataGoogleAppSearchesTaskGetAdvancedResponseInfo googleAppSearchesTaskGetAdvanced(String id) throws ApiException {
        ApiResponse<AppDataGoogleAppSearchesTaskGetAdvancedResponseInfo> localVarResp = googleAppSearchesTaskGetAdvancedWithHttpInfo(id);
        return localVarResp.getData();
    }

    /**
     * 
     * This endpoint will provide you with a list of apps ranking on Google Play for the keyword specified in a POST request. You will also receive additional information about each application: its ID, icon, reviews count, rating, price, and other data. The results are specific to the keyword as well as location and language parameters specified in the POST request. for more info please visit &#39;https://docs.dataforseo.com/v3/app_data/google/app_searches/task_get/advanced/?bash&#39;
     * @param id task identifier unique task identifier in our system in the UUID format you will be able to use it within 30 days to request the results of the task at any time (required)
     * @return ApiResponse&lt;AppDataGoogleAppSearchesTaskGetAdvancedResponseInfo&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<AppDataGoogleAppSearchesTaskGetAdvancedResponseInfo> googleAppSearchesTaskGetAdvancedWithHttpInfo(String id) throws ApiException {
        okhttp3.Call localVarCall = googleAppSearchesTaskGetAdvancedValidateBeforeCall(id, null);
        Type localVarReturnType = new TypeToken<AppDataGoogleAppSearchesTaskGetAdvancedResponseInfo>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * This endpoint will provide you with a list of apps ranking on Google Play for the keyword specified in a POST request. You will also receive additional information about each application: its ID, icon, reviews count, rating, price, and other data. The results are specific to the keyword as well as location and language parameters specified in the POST request. for more info please visit &#39;https://docs.dataforseo.com/v3/app_data/google/app_searches/task_get/advanced/?bash&#39;
     * @param id task identifier unique task identifier in our system in the UUID format you will be able to use it within 30 days to request the results of the task at any time (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call googleAppSearchesTaskGetAdvancedAsync(String id, final ApiCallback<AppDataGoogleAppSearchesTaskGetAdvancedResponseInfo> _callback) throws ApiException {

        okhttp3.Call localVarCall = googleAppSearchesTaskGetAdvancedValidateBeforeCall(id, _callback);
        Type localVarReturnType = new TypeToken<AppDataGoogleAppSearchesTaskGetAdvancedResponseInfo>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for googleAppSearchesTaskGetHtml
     * @param id task identifier unique task identifier in our system in the UUID format you will be able to use it within 7 days to request the results of the task at any time (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call googleAppSearchesTaskGetHtmlCall(String id, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/v3/app_data/google/app_searches/task_get/html/{id}"
            .replace("{" + "id" + "}", localVarApiClient.escapeString(id.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "basicAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call googleAppSearchesTaskGetHtmlValidateBeforeCall(String id, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'id' is set
        if (id == null) {
            throw new ApiException("Missing the required parameter 'id' when calling googleAppSearchesTaskGetHtml(Async)");
        }

        return googleAppSearchesTaskGetHtmlCall(id, _callback);

    }

    /**
     * 
     * Description of the fields for sending a request: for more info please visit &#39;https://docs.dataforseo.com/v3/app_data/google/app_searches/task_get/html/?bash&#39;
     * @param id task identifier unique task identifier in our system in the UUID format you will be able to use it within 7 days to request the results of the task at any time (required)
     * @return AppDataGoogleAppSearchesTaskGetHtmlResponseInfo
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public AppDataGoogleAppSearchesTaskGetHtmlResponseInfo googleAppSearchesTaskGetHtml(String id) throws ApiException {
        ApiResponse<AppDataGoogleAppSearchesTaskGetHtmlResponseInfo> localVarResp = googleAppSearchesTaskGetHtmlWithHttpInfo(id);
        return localVarResp.getData();
    }

    /**
     * 
     * Description of the fields for sending a request: for more info please visit &#39;https://docs.dataforseo.com/v3/app_data/google/app_searches/task_get/html/?bash&#39;
     * @param id task identifier unique task identifier in our system in the UUID format you will be able to use it within 7 days to request the results of the task at any time (required)
     * @return ApiResponse&lt;AppDataGoogleAppSearchesTaskGetHtmlResponseInfo&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<AppDataGoogleAppSearchesTaskGetHtmlResponseInfo> googleAppSearchesTaskGetHtmlWithHttpInfo(String id) throws ApiException {
        okhttp3.Call localVarCall = googleAppSearchesTaskGetHtmlValidateBeforeCall(id, null);
        Type localVarReturnType = new TypeToken<AppDataGoogleAppSearchesTaskGetHtmlResponseInfo>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Description of the fields for sending a request: for more info please visit &#39;https://docs.dataforseo.com/v3/app_data/google/app_searches/task_get/html/?bash&#39;
     * @param id task identifier unique task identifier in our system in the UUID format you will be able to use it within 7 days to request the results of the task at any time (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call googleAppSearchesTaskGetHtmlAsync(String id, final ApiCallback<AppDataGoogleAppSearchesTaskGetHtmlResponseInfo> _callback) throws ApiException {

        okhttp3.Call localVarCall = googleAppSearchesTaskGetHtmlValidateBeforeCall(id, _callback);
        Type localVarReturnType = new TypeToken<AppDataGoogleAppSearchesTaskGetHtmlResponseInfo>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for googleAppSearchesTaskPost
     * @param appDataTaskRequestInfo  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call googleAppSearchesTaskPostCall(List<AppDataTaskRequestInfo> appDataTaskRequestInfo, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = appDataTaskRequestInfo;

        // create path and map variables
        String localVarPath = "/v3/app_data/google/app_searches/task_post";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "basicAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call googleAppSearchesTaskPostValidateBeforeCall(List<AppDataTaskRequestInfo> appDataTaskRequestInfo, final ApiCallback _callback) throws ApiException {
        return googleAppSearchesTaskPostCall(appDataTaskRequestInfo, _callback);

    }

    /**
     * 
     * ‌‌ This endpoint will provide you with a list of apps ranking on Google Play for the specified keyword. The returned results are specific to the indicated keyword, as well as the language and location parameters. for more info please visit &#39;https://docs.dataforseo.com/v3/app_data/google/app_searches/task_post/?bash&#39;
     * @param appDataTaskRequestInfo  (optional)
     * @return AppDataGoogleAppSearchesTaskPostResponseInfo
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public AppDataGoogleAppSearchesTaskPostResponseInfo googleAppSearchesTaskPost(List<AppDataTaskRequestInfo> appDataTaskRequestInfo) throws ApiException {
        ApiResponse<AppDataGoogleAppSearchesTaskPostResponseInfo> localVarResp = googleAppSearchesTaskPostWithHttpInfo(appDataTaskRequestInfo);
        return localVarResp.getData();
    }

    /**
     * 
     * ‌‌ This endpoint will provide you with a list of apps ranking on Google Play for the specified keyword. The returned results are specific to the indicated keyword, as well as the language and location parameters. for more info please visit &#39;https://docs.dataforseo.com/v3/app_data/google/app_searches/task_post/?bash&#39;
     * @param appDataTaskRequestInfo  (optional)
     * @return ApiResponse&lt;AppDataGoogleAppSearchesTaskPostResponseInfo&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<AppDataGoogleAppSearchesTaskPostResponseInfo> googleAppSearchesTaskPostWithHttpInfo(List<AppDataTaskRequestInfo> appDataTaskRequestInfo) throws ApiException {
        okhttp3.Call localVarCall = googleAppSearchesTaskPostValidateBeforeCall(appDataTaskRequestInfo, null);
        Type localVarReturnType = new TypeToken<AppDataGoogleAppSearchesTaskPostResponseInfo>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * ‌‌ This endpoint will provide you with a list of apps ranking on Google Play for the specified keyword. The returned results are specific to the indicated keyword, as well as the language and location parameters. for more info please visit &#39;https://docs.dataforseo.com/v3/app_data/google/app_searches/task_post/?bash&#39;
     * @param appDataTaskRequestInfo  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call googleAppSearchesTaskPostAsync(List<AppDataTaskRequestInfo> appDataTaskRequestInfo, final ApiCallback<AppDataGoogleAppSearchesTaskPostResponseInfo> _callback) throws ApiException {

        okhttp3.Call localVarCall = googleAppSearchesTaskPostValidateBeforeCall(appDataTaskRequestInfo, _callback);
        Type localVarReturnType = new TypeToken<AppDataGoogleAppSearchesTaskPostResponseInfo>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for googleAppSearchesTasksReady
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call googleAppSearchesTasksReadyCall(final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/v3/app_data/google/app_searches/tasks_ready";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "basicAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call googleAppSearchesTasksReadyValidateBeforeCall(final ApiCallback _callback) throws ApiException {
        return googleAppSearchesTasksReadyCall(_callback);

    }

    /**
     * 
     * ‌ The ‘Tasks Ready’ endpoint is designed to provide you with a list of completed tasks that haven’t been collected yet. If you use the Standard method without specifying the postback_url, you can receive the list of id for all completed tasks using this endpoint. Then, you can collect the results using the ‘Task GET’ endpoints. for more info please visit &#39;https://docs.dataforseo.com/v3/app_data/google/app_searches/tasks_ready/?bash&#39;
     * @return AppDataGoogleAppSearchesTasksReadyResponseInfo
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public AppDataGoogleAppSearchesTasksReadyResponseInfo googleAppSearchesTasksReady() throws ApiException {
        ApiResponse<AppDataGoogleAppSearchesTasksReadyResponseInfo> localVarResp = googleAppSearchesTasksReadyWithHttpInfo();
        return localVarResp.getData();
    }

    /**
     * 
     * ‌ The ‘Tasks Ready’ endpoint is designed to provide you with a list of completed tasks that haven’t been collected yet. If you use the Standard method without specifying the postback_url, you can receive the list of id for all completed tasks using this endpoint. Then, you can collect the results using the ‘Task GET’ endpoints. for more info please visit &#39;https://docs.dataforseo.com/v3/app_data/google/app_searches/tasks_ready/?bash&#39;
     * @return ApiResponse&lt;AppDataGoogleAppSearchesTasksReadyResponseInfo&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<AppDataGoogleAppSearchesTasksReadyResponseInfo> googleAppSearchesTasksReadyWithHttpInfo() throws ApiException {
        okhttp3.Call localVarCall = googleAppSearchesTasksReadyValidateBeforeCall(null);
        Type localVarReturnType = new TypeToken<AppDataGoogleAppSearchesTasksReadyResponseInfo>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * ‌ The ‘Tasks Ready’ endpoint is designed to provide you with a list of completed tasks that haven’t been collected yet. If you use the Standard method without specifying the postback_url, you can receive the list of id for all completed tasks using this endpoint. Then, you can collect the results using the ‘Task GET’ endpoints. for more info please visit &#39;https://docs.dataforseo.com/v3/app_data/google/app_searches/tasks_ready/?bash&#39;
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call googleAppSearchesTasksReadyAsync(final ApiCallback<AppDataGoogleAppSearchesTasksReadyResponseInfo> _callback) throws ApiException {

        okhttp3.Call localVarCall = googleAppSearchesTasksReadyValidateBeforeCall(_callback);
        Type localVarReturnType = new TypeToken<AppDataGoogleAppSearchesTasksReadyResponseInfo>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for googleCategories
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call googleCategoriesCall(final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/v3/app_data/google/categories";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "basicAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call googleCategoriesValidateBeforeCall(final ApiCallback _callback) throws ApiException {
        return googleCategoriesCall(_callback);

    }

    /**
     * 
     * This endpoint will provide you with a full list of app categories available on Google Play. for more info please visit &#39;https://docs.dataforseo.com/v3/app_data/google/categories/?bash&#39;
     * @return AppDataGoogleCategoriesResponseInfo
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public AppDataGoogleCategoriesResponseInfo googleCategories() throws ApiException {
        ApiResponse<AppDataGoogleCategoriesResponseInfo> localVarResp = googleCategoriesWithHttpInfo();
        return localVarResp.getData();
    }

    /**
     * 
     * This endpoint will provide you with a full list of app categories available on Google Play. for more info please visit &#39;https://docs.dataforseo.com/v3/app_data/google/categories/?bash&#39;
     * @return ApiResponse&lt;AppDataGoogleCategoriesResponseInfo&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<AppDataGoogleCategoriesResponseInfo> googleCategoriesWithHttpInfo() throws ApiException {
        okhttp3.Call localVarCall = googleCategoriesValidateBeforeCall(null);
        Type localVarReturnType = new TypeToken<AppDataGoogleCategoriesResponseInfo>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * This endpoint will provide you with a full list of app categories available on Google Play. for more info please visit &#39;https://docs.dataforseo.com/v3/app_data/google/categories/?bash&#39;
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call googleCategoriesAsync(final ApiCallback<AppDataGoogleCategoriesResponseInfo> _callback) throws ApiException {

        okhttp3.Call localVarCall = googleCategoriesValidateBeforeCall(_callback);
        Type localVarReturnType = new TypeToken<AppDataGoogleCategoriesResponseInfo>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
