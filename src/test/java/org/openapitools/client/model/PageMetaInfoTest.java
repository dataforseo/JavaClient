/*
 * DataForSEO API documentation
 * DataForSEO API is the starting point on your journey towards building powerful SEO software. With DataForSEO you can get all the data you need to build an efficient application while also saving your time and budget. DataForSEO API is using the REST technology for interchanging data between your application and our service. The data exchange is made through the widely used HTTP protocol, which allows applying our API to almost all programming languages.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.openapitools.client.model.HtmlContentInfo;
import org.openapitools.client.model.OnPageResourceIssueInfo;
import org.openapitools.client.model.SpellInfo;
import org.openapitools.jackson.nullable.JsonNullable;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for PageMetaInfo
 */
public class PageMetaInfoTest {
    private final PageMetaInfo model = new PageMetaInfo();

    /**
     * Model tests for PageMetaInfo
     */
    @Test
    public void testPageMetaInfo() {
        // TODO: test PageMetaInfo
    }

    /**
     * Test the property 'title'
     */
    @Test
    public void titleTest() {
        // TODO: test title
    }

    /**
     * Test the property 'charset'
     */
    @Test
    public void charsetTest() {
        // TODO: test charset
    }

    /**
     * Test the property 'follow'
     */
    @Test
    public void followTest() {
        // TODO: test follow
    }

    /**
     * Test the property 'generator'
     */
    @Test
    public void generatorTest() {
        // TODO: test generator
    }

    /**
     * Test the property 'htags'
     */
    @Test
    public void htagsTest() {
        // TODO: test htags
    }

    /**
     * Test the property 'description'
     */
    @Test
    public void descriptionTest() {
        // TODO: test description
    }

    /**
     * Test the property 'favicon'
     */
    @Test
    public void faviconTest() {
        // TODO: test favicon
    }

    /**
     * Test the property 'metaKeywords'
     */
    @Test
    public void metaKeywordsTest() {
        // TODO: test metaKeywords
    }

    /**
     * Test the property 'canonical'
     */
    @Test
    public void canonicalTest() {
        // TODO: test canonical
    }

    /**
     * Test the property 'internalLinksCount'
     */
    @Test
    public void internalLinksCountTest() {
        // TODO: test internalLinksCount
    }

    /**
     * Test the property 'externalLinksCount'
     */
    @Test
    public void externalLinksCountTest() {
        // TODO: test externalLinksCount
    }

    /**
     * Test the property 'inboundLinksCount'
     */
    @Test
    public void inboundLinksCountTest() {
        // TODO: test inboundLinksCount
    }

    /**
     * Test the property 'imagesCount'
     */
    @Test
    public void imagesCountTest() {
        // TODO: test imagesCount
    }

    /**
     * Test the property 'imagesSize'
     */
    @Test
    public void imagesSizeTest() {
        // TODO: test imagesSize
    }

    /**
     * Test the property 'scriptsCount'
     */
    @Test
    public void scriptsCountTest() {
        // TODO: test scriptsCount
    }

    /**
     * Test the property 'scriptsSize'
     */
    @Test
    public void scriptsSizeTest() {
        // TODO: test scriptsSize
    }

    /**
     * Test the property 'stylesheetsCount'
     */
    @Test
    public void stylesheetsCountTest() {
        // TODO: test stylesheetsCount
    }

    /**
     * Test the property 'stylesheetsSize'
     */
    @Test
    public void stylesheetsSizeTest() {
        // TODO: test stylesheetsSize
    }

    /**
     * Test the property 'titleLength'
     */
    @Test
    public void titleLengthTest() {
        // TODO: test titleLength
    }

    /**
     * Test the property 'descriptionLength'
     */
    @Test
    public void descriptionLengthTest() {
        // TODO: test descriptionLength
    }

    /**
     * Test the property 'renderBlockingScriptsCount'
     */
    @Test
    public void renderBlockingScriptsCountTest() {
        // TODO: test renderBlockingScriptsCount
    }

    /**
     * Test the property 'renderBlockingStylesheetsCount'
     */
    @Test
    public void renderBlockingStylesheetsCountTest() {
        // TODO: test renderBlockingStylesheetsCount
    }

    /**
     * Test the property 'cumulativeLayoutShift'
     */
    @Test
    public void cumulativeLayoutShiftTest() {
        // TODO: test cumulativeLayoutShift
    }

    /**
     * Test the property 'metaTitle'
     */
    @Test
    public void metaTitleTest() {
        // TODO: test metaTitle
    }

    /**
     * Test the property 'content'
     */
    @Test
    public void contentTest() {
        // TODO: test content
    }

    /**
     * Test the property 'deprecatedTags'
     */
    @Test
    public void deprecatedTagsTest() {
        // TODO: test deprecatedTags
    }

    /**
     * Test the property 'duplicateMetaTags'
     */
    @Test
    public void duplicateMetaTagsTest() {
        // TODO: test duplicateMetaTags
    }

    /**
     * Test the property 'spell'
     */
    @Test
    public void spellTest() {
        // TODO: test spell
    }

    /**
     * Test the property 'socialMediaTags'
     */
    @Test
    public void socialMediaTagsTest() {
        // TODO: test socialMediaTags
    }

    /**
     * Test the property 'brokenHtml'
     */
    @Test
    public void brokenHtmlTest() {
        // TODO: test brokenHtml
    }

}
