/*
 * DataForSEO API documentation
 * DataForSEO API is the starting point on your journey towards building powerful SEO software. With DataForSEO you can get all the data you need to build an efficient application while also saving your time and budget. DataForSEO API is using the REST technology for interchanging data between your application and our service. The data exchange is made through the widely used HTTP protocol, which allows applying our API to almost all programming languages.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.dataforseo.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.openapitools.jackson.nullable.JsonNullable;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for ContentGenerationTextSummaryLiveResultInfo
 */
public class ContentGenerationTextSummaryLiveResultInfoTest {
    private final ContentGenerationTextSummaryLiveResultInfo model = new ContentGenerationTextSummaryLiveResultInfo();

    /**
     * Model tests for ContentGenerationTextSummaryLiveResultInfo
     */
    @Test
    public void testContentGenerationTextSummaryLiveResultInfo() {
        // TODO: test ContentGenerationTextSummaryLiveResultInfo
    }

    /**
     * Test the property 'sentences'
     */
    @Test
    public void sentencesTest() {
        // TODO: test sentences
    }

    /**
     * Test the property 'paragraphs'
     */
    @Test
    public void paragraphsTest() {
        // TODO: test paragraphs
    }

    /**
     * Test the property 'words'
     */
    @Test
    public void wordsTest() {
        // TODO: test words
    }

    /**
     * Test the property 'charactersWithoutSpaces'
     */
    @Test
    public void charactersWithoutSpacesTest() {
        // TODO: test charactersWithoutSpaces
    }

    /**
     * Test the property 'charactersWithSpaces'
     */
    @Test
    public void charactersWithSpacesTest() {
        // TODO: test charactersWithSpaces
    }

    /**
     * Test the property 'wordsPerSentence'
     */
    @Test
    public void wordsPerSentenceTest() {
        // TODO: test wordsPerSentence
    }

    /**
     * Test the property 'charactersPerWord'
     */
    @Test
    public void charactersPerWordTest() {
        // TODO: test charactersPerWord
    }

    /**
     * Test the property 'vocabularyDensity'
     */
    @Test
    public void vocabularyDensityTest() {
        // TODO: test vocabularyDensity
    }

    /**
     * Test the property 'keywordDensity'
     */
    @Test
    public void keywordDensityTest() {
        // TODO: test keywordDensity
    }

    /**
     * Test the property 'automatedReadabilityIndex'
     */
    @Test
    public void automatedReadabilityIndexTest() {
        // TODO: test automatedReadabilityIndex
    }

    /**
     * Test the property 'colemanLiauIndex'
     */
    @Test
    public void colemanLiauIndexTest() {
        // TODO: test colemanLiauIndex
    }

    /**
     * Test the property 'fleschKincaidGradeLevel'
     */
    @Test
    public void fleschKincaidGradeLevelTest() {
        // TODO: test fleschKincaidGradeLevel
    }

    /**
     * Test the property 'smogReadabilityIndex'
     */
    @Test
    public void smogReadabilityIndexTest() {
        // TODO: test smogReadabilityIndex
    }

    /**
     * Test the property 'spellingErrors'
     */
    @Test
    public void spellingErrorsTest() {
        // TODO: test spellingErrors
    }

    /**
     * Test the property 'grammarErrors'
     */
    @Test
    public void grammarErrorsTest() {
        // TODO: test grammarErrors
    }

}
