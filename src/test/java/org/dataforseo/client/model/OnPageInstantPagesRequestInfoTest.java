/*
 * DataForSEO API documentation
 * DataForSEO API is the starting point on your journey towards building powerful SEO software. With DataForSEO you can get all the data you need to build an efficient application while also saving your time and budget. DataForSEO API is using the REST technology for interchanging data between your application and our service. The data exchange is made through the widely used HTTP protocol, which allows applying our API to almost all programming languages.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.dataforseo.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.openapitools.jackson.nullable.JsonNullable;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for OnPageInstantPagesRequestInfo
 */
public class OnPageInstantPagesRequestInfoTest {
    private final OnPageInstantPagesRequestInfo model = new OnPageInstantPagesRequestInfo();

    /**
     * Model tests for OnPageInstantPagesRequestInfo
     */
    @Test
    public void testOnPageInstantPagesRequestInfo() {
        // TODO: test OnPageInstantPagesRequestInfo
    }

    /**
     * Test the property 'url'
     */
    @Test
    public void urlTest() {
        // TODO: test url
    }

    /**
     * Test the property 'customUserAgent'
     */
    @Test
    public void customUserAgentTest() {
        // TODO: test customUserAgent
    }

    /**
     * Test the property 'browserPreset'
     */
    @Test
    public void browserPresetTest() {
        // TODO: test browserPreset
    }

    /**
     * Test the property 'browserScreenWidth'
     */
    @Test
    public void browserScreenWidthTest() {
        // TODO: test browserScreenWidth
    }

    /**
     * Test the property 'browserScreenHeight'
     */
    @Test
    public void browserScreenHeightTest() {
        // TODO: test browserScreenHeight
    }

    /**
     * Test the property 'browserScreenScaleFactor'
     */
    @Test
    public void browserScreenScaleFactorTest() {
        // TODO: test browserScreenScaleFactor
    }

    /**
     * Test the property 'storeRawHtml'
     */
    @Test
    public void storeRawHtmlTest() {
        // TODO: test storeRawHtml
    }

    /**
     * Test the property 'acceptLanguage'
     */
    @Test
    public void acceptLanguageTest() {
        // TODO: test acceptLanguage
    }

    /**
     * Test the property 'loadResources'
     */
    @Test
    public void loadResourcesTest() {
        // TODO: test loadResources
    }

    /**
     * Test the property 'enableJavascript'
     */
    @Test
    public void enableJavascriptTest() {
        // TODO: test enableJavascript
    }

    /**
     * Test the property 'enableBrowserRendering'
     */
    @Test
    public void enableBrowserRenderingTest() {
        // TODO: test enableBrowserRendering
    }

    /**
     * Test the property 'disableCookiePopup'
     */
    @Test
    public void disableCookiePopupTest() {
        // TODO: test disableCookiePopup
    }

    /**
     * Test the property 'returnDespiteTimeout'
     */
    @Test
    public void returnDespiteTimeoutTest() {
        // TODO: test returnDespiteTimeout
    }

    /**
     * Test the property 'enableXhr'
     */
    @Test
    public void enableXhrTest() {
        // TODO: test enableXhr
    }

    /**
     * Test the property 'customJs'
     */
    @Test
    public void customJsTest() {
        // TODO: test customJs
    }

    /**
     * Test the property 'validateMicromarkup'
     */
    @Test
    public void validateMicromarkupTest() {
        // TODO: test validateMicromarkup
    }

    /**
     * Test the property 'checkSpell'
     */
    @Test
    public void checkSpellTest() {
        // TODO: test checkSpell
    }

    /**
     * Test the property 'checksThreshold'
     */
    @Test
    public void checksThresholdTest() {
        // TODO: test checksThreshold
    }

    /**
     * Test the property 'switchPool'
     */
    @Test
    public void switchPoolTest() {
        // TODO: test switchPool
    }

    /**
     * Test the property 'ipPoolForScan'
     */
    @Test
    public void ipPoolForScanTest() {
        // TODO: test ipPoolForScan
    }

}
