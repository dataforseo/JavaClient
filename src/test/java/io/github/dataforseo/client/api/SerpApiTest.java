/*
 * DataForSEO API documentation
 * DataForSEO API is the starting point on your journey towards building powerful SEO software. With DataForSEO you can get all the data you need to build an efficient application while also saving your time and budget. DataForSEO API is using the REST technology for interchanging data between your application and our service. The data exchange is made through the widely used HTTP protocol, which allows applying our API to almost all programming languages.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.dataforseo.client.api;

import io.github.dataforseo.client.ApiException;
import io.github.dataforseo.client.model.SerpAiSummaryRequestInfo;
import io.github.dataforseo.client.model.SerpAiSummaryResponseInfo;
import io.github.dataforseo.client.model.SerpBaiduLanguagesResponseInfo;
import io.github.dataforseo.client.model.SerpBaiduLocationsCountryResponseInfo;
import io.github.dataforseo.client.model.SerpBaiduLocationsResponseInfo;
import io.github.dataforseo.client.model.SerpBaiduOrganicTaskGetAdvancedResponseInfo;
import io.github.dataforseo.client.model.SerpBaiduOrganicTaskGetHtmlResponseInfo;
import io.github.dataforseo.client.model.SerpBaiduOrganicTaskGetRegularResponseInfo;
import io.github.dataforseo.client.model.SerpBaiduOrganicTaskPostRequestInfo;
import io.github.dataforseo.client.model.SerpBaiduOrganicTaskPostResponseInfo;
import io.github.dataforseo.client.model.SerpBaiduOrganicTasksFixedResponseInfo;
import io.github.dataforseo.client.model.SerpBaiduOrganicTasksReadyResponseInfo;
import io.github.dataforseo.client.model.SerpBingLanguagesResponseInfo;
import io.github.dataforseo.client.model.SerpBingLocalPackLiveHtmlRequestInfo;
import io.github.dataforseo.client.model.SerpBingLocalPackLiveHtmlResponseInfo;
import io.github.dataforseo.client.model.SerpBingLocalPackLiveRegularRequestInfo;
import io.github.dataforseo.client.model.SerpBingLocalPackLiveRegularResponseInfo;
import io.github.dataforseo.client.model.SerpBingLocalPackTaskGetHtmlResponseInfo;
import io.github.dataforseo.client.model.SerpBingLocalPackTaskGetRegularResponseInfo;
import io.github.dataforseo.client.model.SerpBingLocalPackTaskPostRequestInfo;
import io.github.dataforseo.client.model.SerpBingLocalPackTaskPostResponseInfo;
import io.github.dataforseo.client.model.SerpBingLocalPackTasksFixedResponseInfo;
import io.github.dataforseo.client.model.SerpBingLocalPackTasksReadyResponseInfo;
import io.github.dataforseo.client.model.SerpBingLocationsCountryResponseInfo;
import io.github.dataforseo.client.model.SerpBingLocationsResponseInfo;
import io.github.dataforseo.client.model.SerpBingOrganicLiveAdvancedRequestInfo;
import io.github.dataforseo.client.model.SerpBingOrganicLiveAdvancedResponseInfo;
import io.github.dataforseo.client.model.SerpBingOrganicLiveHtmlRequestInfo;
import io.github.dataforseo.client.model.SerpBingOrganicLiveHtmlResponseInfo;
import io.github.dataforseo.client.model.SerpBingOrganicLiveRegularRequestInfo;
import io.github.dataforseo.client.model.SerpBingOrganicLiveRegularResponseInfo;
import io.github.dataforseo.client.model.SerpBingOrganicTaskGetAdvancedResponseInfo;
import io.github.dataforseo.client.model.SerpBingOrganicTaskGetHtmlResponseInfo;
import io.github.dataforseo.client.model.SerpBingOrganicTaskGetRegularResponseInfo;
import io.github.dataforseo.client.model.SerpBingOrganicTaskPostRequestInfo;
import io.github.dataforseo.client.model.SerpBingOrganicTaskPostResponseInfo;
import io.github.dataforseo.client.model.SerpBingOrganicTasksFixedResponseInfo;
import io.github.dataforseo.client.model.SerpBingOrganicTasksReadyResponseInfo;
import io.github.dataforseo.client.model.SerpErrorsRequestInfo;
import io.github.dataforseo.client.model.SerpErrorsResponseInfo;
import io.github.dataforseo.client.model.SerpGoogleAdsAdvertisersLocationsResponseInfo;
import io.github.dataforseo.client.model.SerpGoogleAdsAdvertisersTaskGetAdvancedResponseInfo;
import io.github.dataforseo.client.model.SerpGoogleAdsAdvertisersTaskPostRequestInfo;
import io.github.dataforseo.client.model.SerpGoogleAdsAdvertisersTaskPostResponseInfo;
import io.github.dataforseo.client.model.SerpGoogleAdsAdvertisersTasksReadyResponseInfo;
import io.github.dataforseo.client.model.SerpGoogleAdsSearchLocationsResponseInfo;
import io.github.dataforseo.client.model.SerpGoogleAdsSearchTaskGetAdvancedResponseInfo;
import io.github.dataforseo.client.model.SerpGoogleAdsSearchTaskPostRequestInfo;
import io.github.dataforseo.client.model.SerpGoogleAdsSearchTaskPostResponseInfo;
import io.github.dataforseo.client.model.SerpGoogleAdsSearchTasksReadyResponseInfo;
import io.github.dataforseo.client.model.SerpGoogleAutocompleteLiveAdvancedRequestInfo;
import io.github.dataforseo.client.model.SerpGoogleAutocompleteLiveAdvancedResponseInfo;
import io.github.dataforseo.client.model.SerpGoogleAutocompleteTaskGetAdvancedResponseInfo;
import io.github.dataforseo.client.model.SerpGoogleAutocompleteTaskPostRequestInfo;
import io.github.dataforseo.client.model.SerpGoogleAutocompleteTaskPostResponseInfo;
import io.github.dataforseo.client.model.SerpGoogleAutocompleteTasksFixedResponseInfo;
import io.github.dataforseo.client.model.SerpGoogleAutocompleteTasksReadyResponseInfo;
import io.github.dataforseo.client.model.SerpGoogleDatasetInfoLiveAdvancedRequestInfo;
import io.github.dataforseo.client.model.SerpGoogleDatasetInfoLiveAdvancedResponseInfo;
import io.github.dataforseo.client.model.SerpGoogleDatasetInfoTaskGetAdvancedResponseInfo;
import io.github.dataforseo.client.model.SerpGoogleDatasetInfoTaskPostRequestInfo;
import io.github.dataforseo.client.model.SerpGoogleDatasetInfoTaskPostResponseInfo;
import io.github.dataforseo.client.model.SerpGoogleDatasetInfoTasksFixedResponseInfo;
import io.github.dataforseo.client.model.SerpGoogleDatasetInfoTasksReadyResponseInfo;
import io.github.dataforseo.client.model.SerpGoogleDatasetSearchLiveAdvancedRequestInfo;
import io.github.dataforseo.client.model.SerpGoogleDatasetSearchLiveAdvancedResponseInfo;
import io.github.dataforseo.client.model.SerpGoogleDatasetSearchTaskGetAdvancedResponseInfo;
import io.github.dataforseo.client.model.SerpGoogleDatasetSearchTaskPostRequestInfo;
import io.github.dataforseo.client.model.SerpGoogleDatasetSearchTaskPostResponseInfo;
import io.github.dataforseo.client.model.SerpGoogleDatasetSearchTasksFixedResponseInfo;
import io.github.dataforseo.client.model.SerpGoogleDatasetSearchTasksReadyResponseInfo;
import io.github.dataforseo.client.model.SerpGoogleEventsLiveAdvancedRequestInfo;
import io.github.dataforseo.client.model.SerpGoogleEventsLiveAdvancedResponseInfo;
import io.github.dataforseo.client.model.SerpGoogleEventsTaskGetAdvancedResponseInfo;
import io.github.dataforseo.client.model.SerpGoogleEventsTaskPostRequestInfo;
import io.github.dataforseo.client.model.SerpGoogleEventsTaskPostResponseInfo;
import io.github.dataforseo.client.model.SerpGoogleEventsTasksFixedResponseInfo;
import io.github.dataforseo.client.model.SerpGoogleEventsTasksReadyResponseInfo;
import io.github.dataforseo.client.model.SerpGoogleFinanceExploreLiveAdvancedRequestInfo;
import io.github.dataforseo.client.model.SerpGoogleFinanceExploreLiveAdvancedResponseInfo;
import io.github.dataforseo.client.model.SerpGoogleFinanceExploreLiveHtmlRequestInfo;
import io.github.dataforseo.client.model.SerpGoogleFinanceExploreLiveHtmlResponseInfo;
import io.github.dataforseo.client.model.SerpGoogleFinanceExploreTaskGetAdvancedResponseInfo;
import io.github.dataforseo.client.model.SerpGoogleFinanceExploreTaskGetHtmlResponseInfo;
import io.github.dataforseo.client.model.SerpGoogleFinanceExploreTaskPostRequestInfo;
import io.github.dataforseo.client.model.SerpGoogleFinanceExploreTaskPostResponseInfo;
import io.github.dataforseo.client.model.SerpGoogleFinanceExploreTasksReadyResponseInfo;
import io.github.dataforseo.client.model.SerpGoogleFinanceMarketsLiveAdvancedRequestInfo;
import io.github.dataforseo.client.model.SerpGoogleFinanceMarketsLiveAdvancedResponseInfo;
import io.github.dataforseo.client.model.SerpGoogleFinanceMarketsLiveHtmlRequestInfo;
import io.github.dataforseo.client.model.SerpGoogleFinanceMarketsLiveHtmlResponseInfo;
import io.github.dataforseo.client.model.SerpGoogleFinanceMarketsTaskGetAdvancedResponseInfo;
import io.github.dataforseo.client.model.SerpGoogleFinanceMarketsTaskGetHtmlResponseInfo;
import io.github.dataforseo.client.model.SerpGoogleFinanceMarketsTaskPostRequestInfo;
import io.github.dataforseo.client.model.SerpGoogleFinanceMarketsTaskPostResponseInfo;
import io.github.dataforseo.client.model.SerpGoogleFinanceMarketsTasksReadyResponseInfo;
import io.github.dataforseo.client.model.SerpGoogleFinanceQuoteLiveAdvancedRequestInfo;
import io.github.dataforseo.client.model.SerpGoogleFinanceQuoteLiveAdvancedResponseInfo;
import io.github.dataforseo.client.model.SerpGoogleFinanceQuoteLiveHtmlRequestInfo;
import io.github.dataforseo.client.model.SerpGoogleFinanceQuoteLiveHtmlResponseInfo;
import io.github.dataforseo.client.model.SerpGoogleFinanceQuoteTaskGetAdvancedResponseInfo;
import io.github.dataforseo.client.model.SerpGoogleFinanceQuoteTaskGetHtmlResponseInfo;
import io.github.dataforseo.client.model.SerpGoogleFinanceQuoteTaskPostRequestInfo;
import io.github.dataforseo.client.model.SerpGoogleFinanceQuoteTaskPostResponseInfo;
import io.github.dataforseo.client.model.SerpGoogleFinanceQuoteTasksReadyResponseInfo;
import io.github.dataforseo.client.model.SerpGoogleImagesLiveAdvancedRequestInfo;
import io.github.dataforseo.client.model.SerpGoogleImagesLiveAdvancedResponseInfo;
import io.github.dataforseo.client.model.SerpGoogleImagesLiveHtmlRequestInfo;
import io.github.dataforseo.client.model.SerpGoogleImagesLiveHtmlResponseInfo;
import io.github.dataforseo.client.model.SerpGoogleImagesTaskGetAdvancedResponseInfo;
import io.github.dataforseo.client.model.SerpGoogleImagesTaskGetHtmlResponseInfo;
import io.github.dataforseo.client.model.SerpGoogleImagesTaskPostRequestInfo;
import io.github.dataforseo.client.model.SerpGoogleImagesTaskPostResponseInfo;
import io.github.dataforseo.client.model.SerpGoogleImagesTasksFixedResponseInfo;
import io.github.dataforseo.client.model.SerpGoogleImagesTasksReadyResponseInfo;
import io.github.dataforseo.client.model.SerpGoogleJobsTaskGetAdvancedResponseInfo;
import io.github.dataforseo.client.model.SerpGoogleJobsTaskGetHtmlResponseInfo;
import io.github.dataforseo.client.model.SerpGoogleJobsTaskPostRequestInfo;
import io.github.dataforseo.client.model.SerpGoogleJobsTaskPostResponseInfo;
import io.github.dataforseo.client.model.SerpGoogleJobsTasksFixedResponseInfo;
import io.github.dataforseo.client.model.SerpGoogleJobsTasksReadyResponseInfo;
import io.github.dataforseo.client.model.SerpGoogleLanguagesResponseInfo;
import io.github.dataforseo.client.model.SerpGoogleLocalFinderLiveAdvancedRequestInfo;
import io.github.dataforseo.client.model.SerpGoogleLocalFinderLiveAdvancedResponseInfo;
import io.github.dataforseo.client.model.SerpGoogleLocalFinderLiveHtmlRequestInfo;
import io.github.dataforseo.client.model.SerpGoogleLocalFinderLiveHtmlResponseInfo;
import io.github.dataforseo.client.model.SerpGoogleLocalFinderTaskGetAdvancedResponseInfo;
import io.github.dataforseo.client.model.SerpGoogleLocalFinderTaskGetHtmlResponseInfo;
import io.github.dataforseo.client.model.SerpGoogleLocalFinderTaskPostRequestInfo;
import io.github.dataforseo.client.model.SerpGoogleLocalFinderTaskPostResponseInfo;
import io.github.dataforseo.client.model.SerpGoogleLocalFinderTasksFixedResponseInfo;
import io.github.dataforseo.client.model.SerpGoogleLocalFinderTasksReadyResponseInfo;
import io.github.dataforseo.client.model.SerpGoogleLocationsCountryResponseInfo;
import io.github.dataforseo.client.model.SerpGoogleLocationsResponseInfo;
import io.github.dataforseo.client.model.SerpGoogleMapsLiveAdvancedRequestInfo;
import io.github.dataforseo.client.model.SerpGoogleMapsLiveAdvancedResponseInfo;
import io.github.dataforseo.client.model.SerpGoogleMapsTaskGetAdvancedResponseInfo;
import io.github.dataforseo.client.model.SerpGoogleMapsTaskPostRequestInfo;
import io.github.dataforseo.client.model.SerpGoogleMapsTaskPostResponseInfo;
import io.github.dataforseo.client.model.SerpGoogleMapsTasksFixedResponseInfo;
import io.github.dataforseo.client.model.SerpGoogleMapsTasksReadyResponseInfo;
import io.github.dataforseo.client.model.SerpGoogleNewsLiveAdvancedRequestInfo;
import io.github.dataforseo.client.model.SerpGoogleNewsLiveAdvancedResponseInfo;
import io.github.dataforseo.client.model.SerpGoogleNewsLiveHtmlRequestInfo;
import io.github.dataforseo.client.model.SerpGoogleNewsLiveHtmlResponseInfo;
import io.github.dataforseo.client.model.SerpGoogleNewsTaskGetAdvancedResponseInfo;
import io.github.dataforseo.client.model.SerpGoogleNewsTaskGetHtmlResponseInfo;
import io.github.dataforseo.client.model.SerpGoogleNewsTaskPostRequestInfo;
import io.github.dataforseo.client.model.SerpGoogleNewsTaskPostResponseInfo;
import io.github.dataforseo.client.model.SerpGoogleNewsTasksFixedResponseInfo;
import io.github.dataforseo.client.model.SerpGoogleNewsTasksReadyResponseInfo;
import io.github.dataforseo.client.model.SerpGoogleOrganicLiveAdvancedRequestInfo;
import io.github.dataforseo.client.model.SerpGoogleOrganicLiveAdvancedResponseInfo;
import io.github.dataforseo.client.model.SerpGoogleOrganicLiveHtmlRequestInfo;
import io.github.dataforseo.client.model.SerpGoogleOrganicLiveHtmlResponseInfo;
import io.github.dataforseo.client.model.SerpGoogleOrganicLiveRegularRequestInfo;
import io.github.dataforseo.client.model.SerpGoogleOrganicLiveRegularResponseInfo;
import io.github.dataforseo.client.model.SerpGoogleOrganicTaskGetAdvancedResponseInfo;
import io.github.dataforseo.client.model.SerpGoogleOrganicTaskGetHtmlResponseInfo;
import io.github.dataforseo.client.model.SerpGoogleOrganicTaskGetRegularResponseInfo;
import io.github.dataforseo.client.model.SerpGoogleOrganicTaskPostRequestInfo;
import io.github.dataforseo.client.model.SerpGoogleOrganicTaskPostResponseInfo;
import io.github.dataforseo.client.model.SerpGoogleOrganicTasksFixedResponseInfo;
import io.github.dataforseo.client.model.SerpGoogleOrganicTasksReadyResponseInfo;
import io.github.dataforseo.client.model.SerpGoogleSearchByImageTaskGetAdvancedResponseInfo;
import io.github.dataforseo.client.model.SerpGoogleSearchByImageTaskPostRequestInfo;
import io.github.dataforseo.client.model.SerpGoogleSearchByImageTaskPostResponseInfo;
import io.github.dataforseo.client.model.SerpGoogleSearchByImageTasksFixedResponseInfo;
import io.github.dataforseo.client.model.SerpGoogleSearchByImageTasksReadyResponseInfo;
import io.github.dataforseo.client.model.SerpIdListRequestInfo;
import io.github.dataforseo.client.model.SerpIdListResponseInfo;
import io.github.dataforseo.client.model.SerpNaverOrganicTaskGetAdvancedResponseInfo;
import io.github.dataforseo.client.model.SerpNaverOrganicTaskGetHtmlResponseInfo;
import io.github.dataforseo.client.model.SerpNaverOrganicTaskGetRegularResponseInfo;
import io.github.dataforseo.client.model.SerpNaverOrganicTaskPostRequestInfo;
import io.github.dataforseo.client.model.SerpNaverOrganicTaskPostResponseInfo;
import io.github.dataforseo.client.model.SerpNaverOrganicTasksFixedResponseInfo;
import io.github.dataforseo.client.model.SerpNaverOrganicTasksReadyResponseInfo;
import io.github.dataforseo.client.model.SerpScreenshotRequestInfo;
import io.github.dataforseo.client.model.SerpScreenshotResponseInfo;
import io.github.dataforseo.client.model.SerpSeznamLanguagesResponseInfo;
import io.github.dataforseo.client.model.SerpSeznamLocationsCountryResponseInfo;
import io.github.dataforseo.client.model.SerpSeznamLocationsResponseInfo;
import io.github.dataforseo.client.model.SerpSeznamOrganicTaskGetAdvancedResponseInfo;
import io.github.dataforseo.client.model.SerpSeznamOrganicTaskGetHtmlResponseInfo;
import io.github.dataforseo.client.model.SerpSeznamOrganicTaskGetRegularResponseInfo;
import io.github.dataforseo.client.model.SerpSeznamOrganicTaskPostRequestInfo;
import io.github.dataforseo.client.model.SerpSeznamOrganicTaskPostResponseInfo;
import io.github.dataforseo.client.model.SerpSeznamOrganicTasksFixedResponseInfo;
import io.github.dataforseo.client.model.SerpSeznamOrganicTasksReadyResponseInfo;
import io.github.dataforseo.client.model.SerpTasksReadyResponseInfo;
import io.github.dataforseo.client.model.SerpYahooLanguagesResponseInfo;
import io.github.dataforseo.client.model.SerpYahooLocationsCountryResponseInfo;
import io.github.dataforseo.client.model.SerpYahooLocationsResponseInfo;
import io.github.dataforseo.client.model.SerpYahooOrganicLiveAdvancedRequestInfo;
import io.github.dataforseo.client.model.SerpYahooOrganicLiveAdvancedResponseInfo;
import io.github.dataforseo.client.model.SerpYahooOrganicLiveHtmlRequestInfo;
import io.github.dataforseo.client.model.SerpYahooOrganicLiveHtmlResponseInfo;
import io.github.dataforseo.client.model.SerpYahooOrganicLiveRegularRequestInfo;
import io.github.dataforseo.client.model.SerpYahooOrganicLiveRegularResponseInfo;
import io.github.dataforseo.client.model.SerpYahooOrganicTaskGetAdvancedResponseInfo;
import io.github.dataforseo.client.model.SerpYahooOrganicTaskGetHtmlResponseInfo;
import io.github.dataforseo.client.model.SerpYahooOrganicTaskGetRegularResponseInfo;
import io.github.dataforseo.client.model.SerpYahooOrganicTaskPostRequestInfo;
import io.github.dataforseo.client.model.SerpYahooOrganicTaskPostResponseInfo;
import io.github.dataforseo.client.model.SerpYahooOrganicTasksFixedResponseInfo;
import io.github.dataforseo.client.model.SerpYahooOrganicTasksReadyResponseInfo;
import io.github.dataforseo.client.model.SerpYoutubeLanguagesResponseInfo;
import io.github.dataforseo.client.model.SerpYoutubeLocationsCountryResponseInfo;
import io.github.dataforseo.client.model.SerpYoutubeLocationsResponseInfo;
import io.github.dataforseo.client.model.SerpYoutubeVideoCommentsLiveAdvancedRequestInfo;
import io.github.dataforseo.client.model.SerpYoutubeVideoCommentsLiveAdvancedResponseInfo;
import io.github.dataforseo.client.model.SerpYoutubeVideoCommentsTaskGetAdvancedResponseInfo;
import io.github.dataforseo.client.model.SerpYoutubeVideoCommentsTaskPostRequestInfo;
import io.github.dataforseo.client.model.SerpYoutubeVideoCommentsTaskPostResponseInfo;
import io.github.dataforseo.client.model.SerpYoutubeVideoCommentsTasksFixedResponseInfo;
import io.github.dataforseo.client.model.SerpYoutubeVideoCommentsTasksReadyResponseInfo;
import io.github.dataforseo.client.model.SerpYoutubeVideoInfoLiveAdvancedRequestInfo;
import io.github.dataforseo.client.model.SerpYoutubeVideoInfoLiveAdvancedResponseInfo;
import io.github.dataforseo.client.model.SerpYoutubeVideoInfoTaskGetAdvancedResponseInfo;
import io.github.dataforseo.client.model.SerpYoutubeVideoInfoTaskPostRequestInfo;
import io.github.dataforseo.client.model.SerpYoutubeVideoInfoTaskPostResponseInfo;
import io.github.dataforseo.client.model.SerpYoutubeVideoInfoTasksFixedResponseInfo;
import io.github.dataforseo.client.model.SerpYoutubeVideoInfoTasksReadyResponseInfo;
import io.github.dataforseo.client.model.SerpYoutubeVideoSubtitlesLiveAdvancedRequestInfo;
import io.github.dataforseo.client.model.SerpYoutubeVideoSubtitlesLiveAdvancedResponseInfo;
import io.github.dataforseo.client.model.SerpYoutubeVideoSubtitlesTaskGetAdvancedResponseInfo;
import io.github.dataforseo.client.model.SerpYoutubeVideoSubtitlesTaskPostRequestInfo;
import io.github.dataforseo.client.model.SerpYoutubeVideoSubtitlesTaskPostResponseInfo;
import io.github.dataforseo.client.model.SerpYoutubeVideoSubtitlesTasksFixedResponseInfo;
import io.github.dataforseo.client.model.SerpYoutubeVideoSubtitlesTasksReadyResponseInfo;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for SerpApi
 */
@Disabled
public class SerpApiTest {

    private final SerpApi api = new SerpApi();

    /**
     * ‌‌ The purpose of the Live SERP API AI Summary endpoint is to provide a summary of the content found on any SERP and generate a response based on the user’s specified prompt. To obtain results, you have to specify task_id, which you can find in the response to the POST request. Learn more in our Help Center. for more info please visit &#39;https://docs.dataforseo.com/v3/serp/ai_summary/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aiSummaryTest() throws ApiException {
        List<SerpAiSummaryRequestInfo> serpAiSummaryRequestInfo = null;
        SerpAiSummaryResponseInfo response = api.aiSummary(serpAiSummaryRequestInfo);
        // TODO: test validations
    }

    /**
     * Description of the fields for sending a request: for more info please visit &#39;https://docs.dataforseo.com/v3/serp/baidu/organic/task_get/advanced/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void baiduOrganicTaskGetAdvancedTest() throws ApiException {
        String id = null;
        SerpBaiduOrganicTaskGetAdvancedResponseInfo response = api.baiduOrganicTaskGetAdvanced(id);
        // TODO: test validations
    }

    /**
     * Description of the fields for sending a request: for more info please visit &#39;https://docs.dataforseo.com/v3/serp/baidu/organic/task_get/html/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void baiduOrganicTaskGetHtmlTest() throws ApiException {
        String id = null;
        SerpBaiduOrganicTaskGetHtmlResponseInfo response = api.baiduOrganicTaskGetHtml(id);
        // TODO: test validations
    }

    /**
     * Description of the fields for sending a request: for more info please visit &#39;https://docs.dataforseo.com/v3/serp/baidu/organic/task_get/regular/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void baiduOrganicTaskGetRegularTest() throws ApiException {
        String id = null;
        SerpBaiduOrganicTaskGetRegularResponseInfo response = api.baiduOrganicTaskGetRegular(id);
        // TODO: test validations
    }

    /**
     * ‌‌ Baidu SERP API provides top 100 search engine results. These results are specific to the selected location (see the List of Locations) and other settings. for more info please visit &#39;https://docs.dataforseo.com/v3/serp/baidu/organic/task_post/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void baiduOrganicTaskPostTest() throws ApiException {
        List<SerpBaiduOrganicTaskPostRequestInfo> serpBaiduOrganicTaskPostRequestInfo = null;
        SerpBaiduOrganicTaskPostResponseInfo response = api.baiduOrganicTaskPost(serpBaiduOrganicTaskPostRequestInfo);
        // TODO: test validations
    }

    /**
     * ‌ The ‘Tasks Fixed’ endpoint is designed to provide you with the list of re-parsed tasks, which haven’t been collected yet. If you use the Standard method without specifying the postback_url, you can receive the list of id for all completed re-parsed tasks using this endpoint. Then, you can re-collect the fixed results using the ‘Task GET’ endpoint. for more info please visit &#39;https://docs.dataforseo.com/v3/serp/baidu/organic/tasks_fixed/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void baiduOrganicTasksFixedTest() throws ApiException {
        SerpBaiduOrganicTasksFixedResponseInfo response = api.baiduOrganicTasksFixed();
        // TODO: test validations
    }

    /**
     * ‌ The ‘Tasks Ready’ endpoint is designed to provide you with the list of completed tasks, which haven’t been collected yet. If you use the Standard method without specifying the postback_url, you can receive the list of id for all completed tasks using this endpoint. Then, you can collect the results using the ‘Task GET’ endpoint. Learn more about task completion and obtaining a list of completed tasks in this help center article. for more info please visit &#39;https://docs.dataforseo.com/v3/serp/baidu/organic/tasks_ready/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void baiduOrganicTasksReadyTest() throws ApiException {
        SerpBaiduOrganicTasksReadyResponseInfo response = api.baiduOrganicTasksReady();
        // TODO: test validations
    }

    /**
     * ‌ Live SERP HTML provides a raw HTML page of 100 search engine results for the specified keyword, search engine, and location. for more info please visit &#39;https://docs.dataforseo.com/v3/serp/bing/local_pack/live/html/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void bingLocalPackLiveHtmlTest() throws ApiException {
        List<SerpBingLocalPackLiveHtmlRequestInfo> serpBingLocalPackLiveHtmlRequestInfo = null;
        SerpBingLocalPackLiveHtmlResponseInfo response = api.bingLocalPackLiveHtml(serpBingLocalPackLiveHtmlRequestInfo);
        // TODO: test validations
    }

    /**
     * ‌‌ Live Bing Local Pack SERP provides real-time data on top 100 search engine results for the specified keyword, search engine, and location. for more info please visit &#39;https://docs.dataforseo.com/v3/serp/bing/local_pack/live/regular/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void bingLocalPackLiveRegularTest() throws ApiException {
        List<SerpBingLocalPackLiveRegularRequestInfo> serpBingLocalPackLiveRegularRequestInfo = null;
        SerpBingLocalPackLiveRegularResponseInfo response = api.bingLocalPackLiveRegular(serpBingLocalPackLiveRegularRequestInfo);
        // TODO: test validations
    }

    /**
     * Description of the fields for sending a request: for more info please visit &#39;https://docs.dataforseo.com/v3/serp/bing/local_pack/task_get/html/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void bingLocalPackTaskGetHtmlTest() throws ApiException {
        String id = null;
        SerpBingLocalPackTaskGetHtmlResponseInfo response = api.bingLocalPackTaskGetHtml(id);
        // TODO: test validations
    }

    /**
     * Description of the fields for sending a request: for more info please visit &#39;https://docs.dataforseo.com/v3/serp/bing/local_pack/task_get/regular/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void bingLocalPackTaskGetRegularTest() throws ApiException {
        String id = null;
        SerpBingLocalPackTaskGetRegularResponseInfo response = api.bingLocalPackTaskGetRegular(id);
        // TODO: test validations
    }

    /**
     * ‌‌ SERP API provides top 100 search engine results. These results are specific to the selected location (see the List of Locations) and language (see the List of Languages) settings. for more info please visit &#39;https://docs.dataforseo.com/v3/serp/bing/local_pack/task_post/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void bingLocalPackTaskPostTest() throws ApiException {
        List<SerpBingLocalPackTaskPostRequestInfo> serpBingLocalPackTaskPostRequestInfo = null;
        SerpBingLocalPackTaskPostResponseInfo response = api.bingLocalPackTaskPost(serpBingLocalPackTaskPostRequestInfo);
        // TODO: test validations
    }

    /**
     * ‌ The ‘Tasks Fixed’ endpoint is designed to provide you with the list of re-parsed tasks, which haven’t been collected yet. If you use the Standard method without specifying the postback_url, you can receive the list of id for all completed re-parsed tasks using this endpoint. Then, you can re-collect the fixed results using the ‘Task GET’ endpoint. for more info please visit &#39;https://docs.dataforseo.com/v3/serp/bing/local_pack/tasks_fixed/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void bingLocalPackTasksFixedTest() throws ApiException {
        SerpBingLocalPackTasksFixedResponseInfo response = api.bingLocalPackTasksFixed();
        // TODO: test validations
    }

    /**
     * ‌ The ‘Tasks Ready’ endpoint is designed to provide you with the list of completed tasks, which haven’t been collected yet. If you use the Standard method without specifying the postback_url, you can receive the list of id for all completed tasks using this endpoint. Then, you can collect the results using the ‘Task GET’ endpoint. Learn more about task completion and obtaining a list of completed tasks in this help center article. for more info please visit &#39;https://docs.dataforseo.com/v3/serp/bing/local_pack/tasks_ready/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void bingLocalPackTasksReadyTest() throws ApiException {
        SerpBingLocalPackTasksReadyResponseInfo response = api.bingLocalPackTasksReady();
        // TODO: test validations
    }

    /**
     * ‌‌ Live SERP provides real-time data on top 100 search engine results for the specified keyword, search engine, and location. This endpoint will supply a complete overview of featured snippets and other extra elements of SERPs. for more info please visit &#39;https://docs.dataforseo.com/v3/serp/bing/organic/live/advanced/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void bingOrganicLiveAdvancedTest() throws ApiException {
        List<SerpBingOrganicLiveAdvancedRequestInfo> serpBingOrganicLiveAdvancedRequestInfo = null;
        SerpBingOrganicLiveAdvancedResponseInfo response = api.bingOrganicLiveAdvanced(serpBingOrganicLiveAdvancedRequestInfo);
        // TODO: test validations
    }

    /**
     * ‌ Live SERP HTML provides a raw HTML page of 100 search engine results for the specified keyword, search engine, and location. for more info please visit &#39;https://docs.dataforseo.com/v3/serp/bing/organic/live/html/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void bingOrganicLiveHtmlTest() throws ApiException {
        List<SerpBingOrganicLiveHtmlRequestInfo> serpBingOrganicLiveHtmlRequestInfo = null;
        SerpBingOrganicLiveHtmlResponseInfo response = api.bingOrganicLiveHtml(serpBingOrganicLiveHtmlRequestInfo);
        // TODO: test validations
    }

    /**
     * ‌‌ Live SERP provides real-time data on top 100 search engine results for the specified keyword, search engine, and location. for more info please visit &#39;https://docs.dataforseo.com/v3/serp/bing/organic/live/regular/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void bingOrganicLiveRegularTest() throws ApiException {
        List<SerpBingOrganicLiveRegularRequestInfo> serpBingOrganicLiveRegularRequestInfo = null;
        SerpBingOrganicLiveRegularResponseInfo response = api.bingOrganicLiveRegular(serpBingOrganicLiveRegularRequestInfo);
        // TODO: test validations
    }

    /**
     * Description of the fields for sending a request: for more info please visit &#39;https://docs.dataforseo.com/v3/serp/bing/organic/task_get/advanced/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void bingOrganicTaskGetAdvancedTest() throws ApiException {
        String id = null;
        SerpBingOrganicTaskGetAdvancedResponseInfo response = api.bingOrganicTaskGetAdvanced(id);
        // TODO: test validations
    }

    /**
     * Description of the fields for sending a request: for more info please visit &#39;https://docs.dataforseo.com/v3/serp/bing/organic/task_get/html/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void bingOrganicTaskGetHtmlTest() throws ApiException {
        String id = null;
        SerpBingOrganicTaskGetHtmlResponseInfo response = api.bingOrganicTaskGetHtml(id);
        // TODO: test validations
    }

    /**
     * Description of the fields for sending a request: for more info please visit &#39;https://docs.dataforseo.com/v3/serp/bing/organic/task_get/regular/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void bingOrganicTaskGetRegularTest() throws ApiException {
        String id = null;
        SerpBingOrganicTaskGetRegularResponseInfo response = api.bingOrganicTaskGetRegular(id);
        // TODO: test validations
    }

    /**
     * ‌‌ SERP API provides top 100 search engine results. These results are specific to the selected location (see the List of Locations) and language (see the List of Languages) settings. for more info please visit &#39;https://docs.dataforseo.com/v3/serp/bing/organic/task_post/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void bingOrganicTaskPostTest() throws ApiException {
        List<SerpBingOrganicTaskPostRequestInfo> serpBingOrganicTaskPostRequestInfo = null;
        SerpBingOrganicTaskPostResponseInfo response = api.bingOrganicTaskPost(serpBingOrganicTaskPostRequestInfo);
        // TODO: test validations
    }

    /**
     * ‌ The ‘Tasks Fixed’ endpoint is designed to provide you with the list of re-parsed tasks, which haven’t been collected yet. If you use the Standard method without specifying the postback_url, you can receive the list of id for all completed re-parsed tasks using this endpoint. Then, you can re-collect the fixed results using the ‘Task GET’ endpoint. for more info please visit &#39;https://docs.dataforseo.com/v3/serp/bing/organic/tasks_fixed/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void bingOrganicTasksFixedTest() throws ApiException {
        SerpBingOrganicTasksFixedResponseInfo response = api.bingOrganicTasksFixed();
        // TODO: test validations
    }

    /**
     * ‌ The ‘Tasks Ready’ endpoint is designed to provide you with the list of completed tasks, which haven’t been collected yet. If you use the Standard method without specifying the postback_url, you can receive the list of id for all completed tasks using this endpoint. Then, you can collect the results using the ‘Task GET’ endpoint. Learn more about task completion and obtaining a list of completed tasks in this help center article. for more info please visit &#39;https://docs.dataforseo.com/v3/serp/bing/organic/tasks_ready/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void bingOrganicTasksReadyTest() throws ApiException {
        SerpBingOrganicTasksReadyResponseInfo response = api.bingOrganicTasksReady();
        // TODO: test validations
    }

    /**
     * Description of the fields for sending a request: for more info please visit &#39;https://docs_v3.dataforseo.com/v3/serp/google/ads_advertisers/task_get/advanced/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void googleAdsAdvertisersTaskGetAdvancedTest() throws ApiException {
        String id = null;
        SerpGoogleAdsAdvertisersTaskGetAdvancedResponseInfo response = api.googleAdsAdvertisersTaskGetAdvanced(id);
        // TODO: test validations
    }

    /**
     * Google Ads Advertisers provides information on advertisers that run campaigns on Google Ads based on the Ads Transparency platform. ‌‌ for more info please visit &#39;https://docs_v3.dataforseo.com/v3/serp/google/ads_advertisers/task_post/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void googleAdsAdvertisersTaskPostTest() throws ApiException {
        List<SerpGoogleAdsAdvertisersTaskPostRequestInfo> serpGoogleAdsAdvertisersTaskPostRequestInfo = null;
        SerpGoogleAdsAdvertisersTaskPostResponseInfo response = api.googleAdsAdvertisersTaskPost(serpGoogleAdsAdvertisersTaskPostRequestInfo);
        // TODO: test validations
    }

    /**
     * ‌ The ‘Tasks Ready’ endpoint is designed to provide you with the list of completed tasks, which haven’t been collected yet. If you use the Standard method without specifying the postback_url, you can receive the list of id for all completed tasks using this endpoint. Then, you can collect the results using the ‘Task GET’ endpoint. Learn more about task completion and obtaining a list of completed tasks in this help center article. for more info please visit &#39;https://docs_v3.dataforseo.com/v3/serp/google/ads_advertisers/tasks_ready/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void googleAdsAdvertisersTasksReadyTest() throws ApiException {
        SerpGoogleAdsAdvertisersTasksReadyResponseInfo response = api.googleAdsAdvertisersTasksReady();
        // TODO: test validations
    }

    /**
     * Description of the fields for sending a request: for more info please visit &#39;https://docs_v3.dataforseo.com/v3/serp/google/ads_search/task_get/advanced/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void googleAdsSearchTaskGetAdvancedTest() throws ApiException {
        String id = null;
        SerpGoogleAdsSearchTaskGetAdvancedResponseInfo response = api.googleAdsSearchTaskGetAdvanced(id);
        // TODO: test validations
    }

    /**
     * Google Ads Search provides information on ads that are run by advertisers on Google Ads. Information is based on the Ads Transparency platform and adapted for the convenience of DataForSEO users. ‌‌ for more info please visit &#39;https://docs_v3.dataforseo.com/v3/serp/google/ads_search/task_post/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void googleAdsSearchTaskPostTest() throws ApiException {
        List<SerpGoogleAdsSearchTaskPostRequestInfo> serpGoogleAdsSearchTaskPostRequestInfo = null;
        SerpGoogleAdsSearchTaskPostResponseInfo response = api.googleAdsSearchTaskPost(serpGoogleAdsSearchTaskPostRequestInfo);
        // TODO: test validations
    }

    /**
     * ‌ The ‘Tasks Ready’ endpoint is designed to provide you with the list of completed tasks, which haven’t been collected yet. If you use the Standard method without specifying the postback_url, you can receive the list of id for all completed tasks using this endpoint. Then, you can collect the results using the ‘Task GET’ endpoint. Learn more about task completion and obtaining a list of completed tasks in this help center article. for more info please visit &#39;https://docs_v3.dataforseo.com/v3/serp/google/ads_search/tasks_ready/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void googleAdsSearchTasksReadyTest() throws ApiException {
        SerpGoogleAdsSearchTasksReadyResponseInfo response = api.googleAdsSearchTasksReady();
        // TODO: test validations
    }

    /**
     * ‌‌ Google Autocomplete is a feature within Google Search that improves the search experience by allowing users to complete searches they started to type. DataForSEO SERP API will provide you with all the suggestions Google Autocomplete offers for a particular keyword, the position of the cursor pointer, and the search client. for more info please visit &#39;https://docs.dataforseo.com/v3/serp/google/autocomplete/live/advanced/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void googleAutocompleteLiveAdvancedTest() throws ApiException {
        List<SerpGoogleAutocompleteLiveAdvancedRequestInfo> serpGoogleAutocompleteLiveAdvancedRequestInfo = null;
        SerpGoogleAutocompleteLiveAdvancedResponseInfo response = api.googleAutocompleteLiveAdvanced(serpGoogleAutocompleteLiveAdvancedRequestInfo);
        // TODO: test validations
    }

    /**
     * Description of the fields for sending a request: for more info please visit &#39;https://docs.dataforseo.com/v3/serp/google/autocomplete/task_get/advanced/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void googleAutocompleteTaskGetAdvancedTest() throws ApiException {
        String id = null;
        SerpGoogleAutocompleteTaskGetAdvancedResponseInfo response = api.googleAutocompleteTaskGetAdvanced(id);
        // TODO: test validations
    }

    /**
     * ‌‌ Google Autocomplete is a feature within Google Search that improves the search experience by allowing users to complete searches they started to type. DataForSEO SERP API will provide you with all the suggestions Google Autocomplete offers for a particular keyword, the position of the cursor pointer, and the search client. for more info please visit &#39;https://docs.dataforseo.com/v3/serp/google/autocomplete/task_post/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void googleAutocompleteTaskPostTest() throws ApiException {
        List<SerpGoogleAutocompleteTaskPostRequestInfo> serpGoogleAutocompleteTaskPostRequestInfo = null;
        SerpGoogleAutocompleteTaskPostResponseInfo response = api.googleAutocompleteTaskPost(serpGoogleAutocompleteTaskPostRequestInfo);
        // TODO: test validations
    }

    /**
     * ‌ The ‘Tasks Fixed’ endpoint is designed to provide you with the list of re-parsed tasks, which haven’t been collected yet. If you use the Standard method without specifying the postback_url, you can receive the list of id for all completed re-parsed tasks using this endpoint. Then, you can re-collect the fixed results using the ‘Task GET’ endpoint. for more info please visit &#39;https://docs.dataforseo.com/v3/serp/google/autocomplete/tasks_fixed/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void googleAutocompleteTasksFixedTest() throws ApiException {
        SerpGoogleAutocompleteTasksFixedResponseInfo response = api.googleAutocompleteTasksFixed();
        // TODO: test validations
    }

    /**
     * ‌ The ‘Tasks Ready’ endpoint is designed to provide you with the list of completed tasks, which haven’t been collected yet. If you use the Standard method without specifying the postback_url, you can receive the list of id for all completed tasks using this endpoint. Then, you can collect the results using the ‘Task GET’ endpoint. Learn more about task completion and obtaining a list of completed tasks in this help center article. for more info please visit &#39;https://docs.dataforseo.com/v3/serp/google/autocomplete/tasks_ready/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void googleAutocompleteTasksReadyTest() throws ApiException {
        SerpGoogleAutocompleteTasksReadyResponseInfo response = api.googleAutocompleteTasksReady();
        // TODO: test validations
    }

    /**
     * ‌ Live Google Dataset Info provides real-time data on the dataset you specify in the request. You will get data from a page of the dataset displayed separately from the SERP. It contains information about dataset content, authors, licenses, and description on the SERP. for more info please visit &#39;https://docs.dataforseo.com/v3/serp/google/dataset_info/live/advanced/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void googleDatasetInfoLiveAdvancedTest() throws ApiException {
        List<SerpGoogleDatasetInfoLiveAdvancedRequestInfo> serpGoogleDatasetInfoLiveAdvancedRequestInfo = null;
        SerpGoogleDatasetInfoLiveAdvancedResponseInfo response = api.googleDatasetInfoLiveAdvanced(serpGoogleDatasetInfoLiveAdvancedRequestInfo);
        // TODO: test validations
    }

    /**
     * Description of the fields for sending a request: for more info please visit &#39;https://docs.dataforseo.com/v3/serp/google/dataset_info/task_get/advanced/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void googleDatasetInfoTaskGetAdvancedTest() throws ApiException {
        String id = null;
        SerpGoogleDatasetInfoTaskGetAdvancedResponseInfo response = api.googleDatasetInfoTaskGetAdvanced(id);
        // TODO: test validations
    }

    /**
     * ‌‌ Google Dataset Info API provides detailed information about the dataset you specify in the POST request. You will get data from a page of the dataset displayed separately from the SERP. It contains information about dataset content, authors, licenses, and description on the SERP. for more info please visit &#39;https://docs.dataforseo.com/v3/serp/google/dataset_info/task_post/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void googleDatasetInfoTaskPostTest() throws ApiException {
        List<SerpGoogleDatasetInfoTaskPostRequestInfo> serpGoogleDatasetInfoTaskPostRequestInfo = null;
        SerpGoogleDatasetInfoTaskPostResponseInfo response = api.googleDatasetInfoTaskPost(serpGoogleDatasetInfoTaskPostRequestInfo);
        // TODO: test validations
    }

    /**
     * ‌ The ‘Tasks Fixed’ endpoint is designed to provide you with the list of re-parsed tasks, which haven’t been collected yet. If you use the Standard method without specifying the postback_url, you can receive the list of id for all completed re-parsed tasks using this endpoint. Then, you can re-collect the fixed results using the ‘Task GET’ endpoint. for more info please visit &#39;https://docs.dataforseo.com/v3/serp/google/dataset_info/tasks_fixed/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void googleDatasetInfoTasksFixedTest() throws ApiException {
        SerpGoogleDatasetInfoTasksFixedResponseInfo response = api.googleDatasetInfoTasksFixed();
        // TODO: test validations
    }

    /**
     * ‌ The ‘Tasks Ready’ endpoint is designed to provide you with the list of completed tasks, which haven’t been collected yet. If you use the Standard method without specifying the postback_url, you can receive the list of id for all completed tasks using this endpoint. Then, you can collect the results using the ‘Task GET’ endpoint. Learn more about task completion and obtaining a list of completed tasks in this help center article. for more info please visit &#39;https://docs.dataforseo.com/v3/serp/google/dataset_info/tasks_ready/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void googleDatasetInfoTasksReadyTest() throws ApiException {
        SerpGoogleDatasetInfoTasksReadyResponseInfo response = api.googleDatasetInfoTasksReady();
        // TODO: test validations
    }

    /**
     * ‌ Live Google Dataset Search provides real-time data on the top 20 Google Dataset search engine results. These results are specific to the indicated keyword. You can specify other parameters optionally. for more info please visit &#39;https://docs.dataforseo.com/v3/serp/google/dataset_search/live/advanced/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void googleDatasetSearchLiveAdvancedTest() throws ApiException {
        List<SerpGoogleDatasetSearchLiveAdvancedRequestInfo> serpGoogleDatasetSearchLiveAdvancedRequestInfo = null;
        SerpGoogleDatasetSearchLiveAdvancedResponseInfo response = api.googleDatasetSearchLiveAdvanced(serpGoogleDatasetSearchLiveAdvancedRequestInfo);
        // TODO: test validations
    }

    /**
     * Description of the fields for sending a request: for more info please visit &#39;https://docs.dataforseo.com/v3/serp/google/dataset_search/task_get/advanced/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void googleDatasetSearchTaskGetAdvancedTest() throws ApiException {
        String id = null;
        SerpGoogleDatasetSearchTaskGetAdvancedResponseInfo response = api.googleDatasetSearchTaskGetAdvanced(id);
        // TODO: test validations
    }

    /**
     * ‌‌ Google Dataset Search API provides top 20 Google Dataset search engine results. These results are specific to the indicated keyword. You can specify other parameters optionally. for more info please visit &#39;https://docs.dataforseo.com/v3/serp/google/dataset_search/task_post/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void googleDatasetSearchTaskPostTest() throws ApiException {
        List<SerpGoogleDatasetSearchTaskPostRequestInfo> serpGoogleDatasetSearchTaskPostRequestInfo = null;
        SerpGoogleDatasetSearchTaskPostResponseInfo response = api.googleDatasetSearchTaskPost(serpGoogleDatasetSearchTaskPostRequestInfo);
        // TODO: test validations
    }

    /**
     * ‌ The ‘Tasks Fixed’ endpoint is designed to provide you with the list of re-parsed tasks, which haven’t been collected yet. If you use the Standard method without specifying the postback_url, you can receive the list of id for all completed re-parsed tasks using this endpoint. Then, you can re-collect the fixed results using the ‘Task GET’ endpoint. for more info please visit &#39;https://docs.dataforseo.com/v3/serp/google/dataset_search/tasks_fixed/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void googleDatasetSearchTasksFixedTest() throws ApiException {
        SerpGoogleDatasetSearchTasksFixedResponseInfo response = api.googleDatasetSearchTasksFixed();
        // TODO: test validations
    }

    /**
     * ‌ The ‘Tasks Ready’ endpoint is designed to provide you with the list of completed tasks, which haven’t been collected yet. If you use the Standard method without specifying the postback_url, you can receive the list of id for all completed tasks using this endpoint. Then, you can collect the results using the ‘Task GET’ endpoint. Learn more about task completion and obtaining a list of completed tasks in this help center article. for more info please visit &#39;https://docs.dataforseo.com/v3/serp/google/dataset_search/tasks_ready/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void googleDatasetSearchTasksReadyTest() throws ApiException {
        SerpGoogleDatasetSearchTasksReadyResponseInfo response = api.googleDatasetSearchTasksReady();
        // TODO: test validations
    }

    /**
     * ‌‌ Live Google Events SERP provides real-time data from Google Events Search for the specified keyword and location. Note that Google Events SERP API works for the English language only. for more info please visit &#39;https://docs.dataforseo.com/v3/serp/google/events/live/advanced/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void googleEventsLiveAdvancedTest() throws ApiException {
        List<SerpGoogleEventsLiveAdvancedRequestInfo> serpGoogleEventsLiveAdvancedRequestInfo = null;
        SerpGoogleEventsLiveAdvancedResponseInfo response = api.googleEventsLiveAdvanced(serpGoogleEventsLiveAdvancedRequestInfo);
        // TODO: test validations
    }

    /**
     * Description of the fields for sending a request: for more info please visit &#39;https://docs.dataforseo.com/v3/serp/google/events/task_get/advanced/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void googleEventsTaskGetAdvancedTest() throws ApiException {
        String id = null;
        SerpGoogleEventsTaskGetAdvancedResponseInfo response = api.googleEventsTaskGetAdvanced(id);
        // TODO: test validations
    }

    /**
     * ‌‌ Google Events SERP provides data from Google Events Search for the specified keyword and location (see the List of Locations). Note that Google Events SERP API works for the English language only. for more info please visit &#39;https://docs.dataforseo.com/v3/serp/google/events/task_post/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void googleEventsTaskPostTest() throws ApiException {
        List<SerpGoogleEventsTaskPostRequestInfo> serpGoogleEventsTaskPostRequestInfo = null;
        SerpGoogleEventsTaskPostResponseInfo response = api.googleEventsTaskPost(serpGoogleEventsTaskPostRequestInfo);
        // TODO: test validations
    }

    /**
     * ‌ The ‘Tasks Fixed’ endpoint is designed to provide you with the list of re-parsed tasks, which haven’t been collected yet. If you use the Standard method without specifying the postback_url, you can receive the list of id for all completed re-parsed tasks using this endpoint. Then, you can re-collect the fixed results using the ‘Task GET’ endpoint. for more info please visit &#39;https://docs.dataforseo.com/v3/serp/google/events/tasks_fixed/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void googleEventsTasksFixedTest() throws ApiException {
        SerpGoogleEventsTasksFixedResponseInfo response = api.googleEventsTasksFixed();
        // TODO: test validations
    }

    /**
     * ‌ The ‘Tasks Ready’ endpoint is designed to provide you with the list of completed tasks, which haven’t been collected yet. If you use the Standard method without specifying the postback_url, you can receive the list of id for all completed tasks using this endpoint. Then, you can collect the results using the ‘Task GET’ endpoint. Learn more about task completion and obtaining a list of completed tasks in this help center article. for more info please visit &#39;https://docs.dataforseo.com/v3/serp/google/events/tasks_ready/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void googleEventsTasksReadyTest() throws ApiException {
        SerpGoogleEventsTasksReadyResponseInfo response = api.googleEventsTasksReady();
        // TODO: test validations
    }

    /**
     * ‌ Live Google Finance Explore provides real-time data from the ‘Explore’ tab of Google Finance. These results are specific to the parameters you specify in the request: location and language. for more info please visit &#39;https://docs.dataforseo.com/v3/serp/google/finance_explore/live/advanced/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void googleFinanceExploreLiveAdvancedTest() throws ApiException {
        List<SerpGoogleFinanceExploreLiveAdvancedRequestInfo> serpGoogleFinanceExploreLiveAdvancedRequestInfo = null;
        SerpGoogleFinanceExploreLiveAdvancedResponseInfo response = api.googleFinanceExploreLiveAdvanced(serpGoogleFinanceExploreLiveAdvancedRequestInfo);
        // TODO: test validations
    }

    /**
     * ‌ Live SERP HTML provides raw HTML page from the ‘Explore’ tab of Google Finance. These results are specific to the parameters you specify in the request: location and language. for more info please visit &#39;https://docs.dataforseo.com/v3/serp/google/finance_explore/live/html/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void googleFinanceExploreLiveHtmlTest() throws ApiException {
        List<SerpGoogleFinanceExploreLiveHtmlRequestInfo> serpGoogleFinanceExploreLiveHtmlRequestInfo = null;
        SerpGoogleFinanceExploreLiveHtmlResponseInfo response = api.googleFinanceExploreLiveHtml(serpGoogleFinanceExploreLiveHtmlRequestInfo);
        // TODO: test validations
    }

    /**
     * ‌ Live Google Finance Explore provides real-time data from the ‘Explore’ tab of Google Finance. These results are specific to the parameters you specify in the request: ticker in the keyword field, location and language. for more info please visit &#39;https://docs.dataforseo.com/v3/serp/google/finance_explore/task_get/advanced/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void googleFinanceExploreTaskGetAdvancedTest() throws ApiException {
        String id = null;
        SerpGoogleFinanceExploreTaskGetAdvancedResponseInfo response = api.googleFinanceExploreTaskGetAdvanced(id);
        // TODO: test validations
    }

    /**
     * Description of the fields for sending a request: for more info please visit &#39;https://docs.dataforseo.com/v3/serp/google/finance_explore/task_get/html/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void googleFinanceExploreTaskGetHtmlTest() throws ApiException {
        String id = null;
        SerpGoogleFinanceExploreTaskGetHtmlResponseInfo response = api.googleFinanceExploreTaskGetHtml(id);
        // TODO: test validations
    }

    /**
     * ‌ Google Finance Explore API provides real-time data from the ‘Explore’ tab of Google Finance. These results are specific to the parameters you specify in the request: location and language. for more info please visit &#39;https://docs.dataforseo.com/v3/serp/google/finance_explore/task_post/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void googleFinanceExploreTaskPostTest() throws ApiException {
        List<SerpGoogleFinanceExploreTaskPostRequestInfo> serpGoogleFinanceExploreTaskPostRequestInfo = null;
        SerpGoogleFinanceExploreTaskPostResponseInfo response = api.googleFinanceExploreTaskPost(serpGoogleFinanceExploreTaskPostRequestInfo);
        // TODO: test validations
    }

    /**
     * ‌ The ‘Tasks Ready’ endpoint is designed to provide you with the list of completed tasks, which haven’t been collected yet. If you use the Standard method without specifying the postback_url, you can receive the list of id for all completed tasks using this endpoint. Then, you can collect the results using the ‘Task GET’ endpoint. Learn more about task completion and obtaining a list of completed tasks in this help center article. for more info please visit &#39;https://docs.dataforseo.com/v3/serp/google/finance_explore/tasks_ready/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void googleFinanceExploreTasksReadyTest() throws ApiException {
        SerpGoogleFinanceExploreTasksReadyResponseInfo response = api.googleFinanceExploreTasksReady();
        // TODO: test validations
    }

    /**
     * ‌ Live Google Finance Markets provides real-time data from the ‘Markets’ tab of Google Finance. These results are specific to the parameters you specify in the request: location, language, and market_type. for more info please visit &#39;https://docs.dataforseo.com/v3/serp/google/finance_markets/live/advanced/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void googleFinanceMarketsLiveAdvancedTest() throws ApiException {
        List<SerpGoogleFinanceMarketsLiveAdvancedRequestInfo> serpGoogleFinanceMarketsLiveAdvancedRequestInfo = null;
        SerpGoogleFinanceMarketsLiveAdvancedResponseInfo response = api.googleFinanceMarketsLiveAdvanced(serpGoogleFinanceMarketsLiveAdvancedRequestInfo);
        // TODO: test validations
    }

    /**
     * ‌ Live SERP HTML provides raw HTML from the ‘Markets’ tab of Google Finance. These results are specific to the parameters you specify in the request: location and language. for more info please visit &#39;https://docs.dataforseo.com/v3/serp/google/finance_markets/live/html/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void googleFinanceMarketsLiveHtmlTest() throws ApiException {
        List<SerpGoogleFinanceMarketsLiveHtmlRequestInfo> serpGoogleFinanceMarketsLiveHtmlRequestInfo = null;
        SerpGoogleFinanceMarketsLiveHtmlResponseInfo response = api.googleFinanceMarketsLiveHtml(serpGoogleFinanceMarketsLiveHtmlRequestInfo);
        // TODO: test validations
    }

    /**
     * ‌ Google Finance Markets API provides real-time data from the ‘Markets’ tab of Google Finance. These results are specific to the parameters you specify in the request: ticker in the keyword field, location and language. for more info please visit &#39;https://docs.dataforseo.com/v3/serp/google/finance_markets/task_get/advanced/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void googleFinanceMarketsTaskGetAdvancedTest() throws ApiException {
        String id = null;
        SerpGoogleFinanceMarketsTaskGetAdvancedResponseInfo response = api.googleFinanceMarketsTaskGetAdvanced(id);
        // TODO: test validations
    }

    /**
     * Description of the fields for sending a request: for more info please visit &#39;https://docs.dataforseo.com/v3/serp/google/finance_markets/task_get/html/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void googleFinanceMarketsTaskGetHtmlTest() throws ApiException {
        String id = null;
        SerpGoogleFinanceMarketsTaskGetHtmlResponseInfo response = api.googleFinanceMarketsTaskGetHtml(id);
        // TODO: test validations
    }

    /**
     * ‌ Google Finance Markets API provides real-time data from the ‘Markets’ tab of Google Finance. These results are specific to the parameters you specify in the request:  location, language, and market_type. for more info please visit &#39;https://docs.dataforseo.com/v3/serp/google/finance_markets/task_post/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void googleFinanceMarketsTaskPostTest() throws ApiException {
        List<SerpGoogleFinanceMarketsTaskPostRequestInfo> serpGoogleFinanceMarketsTaskPostRequestInfo = null;
        SerpGoogleFinanceMarketsTaskPostResponseInfo response = api.googleFinanceMarketsTaskPost(serpGoogleFinanceMarketsTaskPostRequestInfo);
        // TODO: test validations
    }

    /**
     * ‌ The ‘Tasks Ready’ endpoint is designed to provide you with the list of completed tasks, which haven’t been collected yet. If you use the Standard method without specifying the postback_url, you can receive the list of id for all completed tasks using this endpoint. Then, you can collect the results using the ‘Task GET’ endpoint. Learn more about task completion and obtaining a list of completed tasks in this help center article. for more info please visit &#39;https://docs.dataforseo.com/v3/serp/google/finance_markets/tasks_ready/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void googleFinanceMarketsTasksReadyTest() throws ApiException {
        SerpGoogleFinanceMarketsTasksReadyResponseInfo response = api.googleFinanceMarketsTasksReady();
        // TODO: test validations
    }

    /**
     * ‌ Live Google Finance Quote provides real-time data from the ‘Quote’ tab of Google Finance. These results are specific to the parameters you specify in the request: ticker in the keyword field, location and language. for more info please visit &#39;https://docs.dataforseo.com/v3/serp/google/finance_quote/live/advanced/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void googleFinanceQuoteLiveAdvancedTest() throws ApiException {
        List<SerpGoogleFinanceQuoteLiveAdvancedRequestInfo> serpGoogleFinanceQuoteLiveAdvancedRequestInfo = null;
        SerpGoogleFinanceQuoteLiveAdvancedResponseInfo response = api.googleFinanceQuoteLiveAdvanced(serpGoogleFinanceQuoteLiveAdvancedRequestInfo);
        // TODO: test validations
    }

    /**
     * ‌ Live SERP HTML provides raw HTML from the ‘Quote’ tab of Google Finance. These results are specific to the parameters you specify in the request: ticker in the keyword field, location and language. for more info please visit &#39;https://docs.dataforseo.com/v3/serp/google/finance_quote/live/html/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void googleFinanceQuoteLiveHtmlTest() throws ApiException {
        List<SerpGoogleFinanceQuoteLiveHtmlRequestInfo> serpGoogleFinanceQuoteLiveHtmlRequestInfo = null;
        SerpGoogleFinanceQuoteLiveHtmlResponseInfo response = api.googleFinanceQuoteLiveHtml(serpGoogleFinanceQuoteLiveHtmlRequestInfo);
        // TODO: test validations
    }

    /**
     * ‌ Live Google Finance Quote provides real-time data from the ‘Quote’ tab of Google Finance. These results are specific to the parameters you specify in the request: ticker in the keyword field, location and language. for more info please visit &#39;https://docs.dataforseo.com/v3/serp/google/finance_quote/task_get/advanced/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void googleFinanceQuoteTaskGetAdvancedTest() throws ApiException {
        String id = null;
        SerpGoogleFinanceQuoteTaskGetAdvancedResponseInfo response = api.googleFinanceQuoteTaskGetAdvanced(id);
        // TODO: test validations
    }

    /**
     * Description of the fields for sending a request: for more info please visit &#39;https://docs.dataforseo.com/v3/serp/google/finance_quote/task_get/html/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void googleFinanceQuoteTaskGetHtmlTest() throws ApiException {
        String id = null;
        SerpGoogleFinanceQuoteTaskGetHtmlResponseInfo response = api.googleFinanceQuoteTaskGetHtml(id);
        // TODO: test validations
    }

    /**
     * ‌ Google Finance Quote provides real-time data from the ‘Quote’ tab of Google Finance. These results are specific to the parameters you specify in the request: ticker in the keyword field, location and language. for more info please visit &#39;https://docs.dataforseo.com/v3/serp/google/finance_quote/task_post/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void googleFinanceQuoteTaskPostTest() throws ApiException {
        List<SerpGoogleFinanceQuoteTaskPostRequestInfo> serpGoogleFinanceQuoteTaskPostRequestInfo = null;
        SerpGoogleFinanceQuoteTaskPostResponseInfo response = api.googleFinanceQuoteTaskPost(serpGoogleFinanceQuoteTaskPostRequestInfo);
        // TODO: test validations
    }

    /**
     * ‌ The ‘Tasks Ready’ endpoint is designed to provide you with the list of completed tasks, which haven’t been collected yet. If you use the Standard method without specifying the postback_url, you can receive the list of id for all completed tasks using this endpoint. Then, you can collect the results using the ‘Task GET’ endpoint. Learn more about task completion and obtaining a list of completed tasks in this help center article. for more info please visit &#39;https://docs.dataforseo.com/v3/serp/google/finance_quote/tasks_ready/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void googleFinanceQuoteTasksReadyTest() throws ApiException {
        SerpGoogleFinanceQuoteTasksReadyResponseInfo response = api.googleFinanceQuoteTasksReady();
        // TODO: test validations
    }

    /**
     * ‌ Live Google Images SERP provides real-time data on top 100 images results for the specified keyword, search engine, and location. for more info please visit &#39;https://docs.dataforseo.com/v3/serp/google/images/live/advanced/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void googleImagesLiveAdvancedTest() throws ApiException {
        List<SerpGoogleImagesLiveAdvancedRequestInfo> serpGoogleImagesLiveAdvancedRequestInfo = null;
        SerpGoogleImagesLiveAdvancedResponseInfo response = api.googleImagesLiveAdvanced(serpGoogleImagesLiveAdvancedRequestInfo);
        // TODO: test validations
    }

    /**
     * ‌ Live SERP HTML provides a raw HTML page of 100 search engine results for the specified keyword, search engine, and location. for more info please visit &#39;https://docs.dataforseo.com/v3/serp/google/images/live/html/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void googleImagesLiveHtmlTest() throws ApiException {
        List<SerpGoogleImagesLiveHtmlRequestInfo> serpGoogleImagesLiveHtmlRequestInfo = null;
        SerpGoogleImagesLiveHtmlResponseInfo response = api.googleImagesLiveHtml(serpGoogleImagesLiveHtmlRequestInfo);
        // TODO: test validations
    }

    /**
     * Description of the fields for sending a request: for more info please visit &#39;https://docs.dataforseo.com/v3/serp/google/images/task_get/advanced/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void googleImagesTaskGetAdvancedTest() throws ApiException {
        String id = null;
        SerpGoogleImagesTaskGetAdvancedResponseInfo response = api.googleImagesTaskGetAdvanced(id);
        // TODO: test validations
    }

    /**
     * Description of the fields for sending a request: for more info please visit &#39;https://docs.dataforseo.com/v3/serp/google/images/task_get/html/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void googleImagesTaskGetHtmlTest() throws ApiException {
        String id = null;
        SerpGoogleImagesTaskGetHtmlResponseInfo response = api.googleImagesTaskGetHtml(id);
        // TODO: test validations
    }

    /**
     * ‌‌ SERP API provides top 100 search engine results. These results are specific to the selected location (see the List of Locations) and language (see the List of Languages) settings. for more info please visit &#39;https://docs.dataforseo.com/v3/serp/google/images/task_post/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void googleImagesTaskPostTest() throws ApiException {
        List<SerpGoogleImagesTaskPostRequestInfo> serpGoogleImagesTaskPostRequestInfo = null;
        SerpGoogleImagesTaskPostResponseInfo response = api.googleImagesTaskPost(serpGoogleImagesTaskPostRequestInfo);
        // TODO: test validations
    }

    /**
     * ‌ The ‘Tasks Fixed’ endpoint is designed to provide you with the list of re-parsed tasks, which haven’t been collected yet. If you use the Standard method without specifying the postback_url, you can receive the list of id for all completed re-parsed tasks using this endpoint. Then, you can re-collect the fixed results using the ‘Task GET’ endpoint. for more info please visit &#39;https://docs.dataforseo.com/v3/serp/google/images/tasks_fixed/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void googleImagesTasksFixedTest() throws ApiException {
        SerpGoogleImagesTasksFixedResponseInfo response = api.googleImagesTasksFixed();
        // TODO: test validations
    }

    /**
     * ‌ The ‘Tasks Ready’ endpoint is designed to provide you with the list of completed tasks, which haven’t been collected yet. If you use the Standard method without specifying the postback_url, you can receive the list of id for all completed tasks using this endpoint. Then, you can collect the results using the ‘Task GET’ endpoint. Learn more about task completion and obtaining a list of completed tasks in this help center article. for more info please visit &#39;https://docs.dataforseo.com/v3/serp/google/images/tasks_ready/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void googleImagesTasksReadyTest() throws ApiException {
        SerpGoogleImagesTasksReadyResponseInfo response = api.googleImagesTasksReady();
        // TODO: test validations
    }

    /**
     * Description of the fields for sending a request: for more info please visit &#39;https://docs.dataforseo.com/v3/serp/google/jobs/task_get/advanced/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void googleJobsTaskGetAdvancedTest() throws ApiException {
        String id = null;
        SerpGoogleJobsTaskGetAdvancedResponseInfo response = api.googleJobsTaskGetAdvanced(id);
        // TODO: test validations
    }

    /**
     * Description of the fields for sending a request: for more info please visit &#39;https://docs.dataforseo.com/v3/serp/google/jobs/task_get/html/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void googleJobsTaskGetHtmlTest() throws ApiException {
        String id = null;
        SerpGoogleJobsTaskGetHtmlResponseInfo response = api.googleJobsTaskGetHtml(id);
        // TODO: test validations
    }

    /**
     * ‌‌ This endpoint will provide you with SERP data from the Google Jobs search engine. The returned results are specific to the keyword as well as the language and location parameters of the POST request. for more info please visit &#39;https://docs.dataforseo.com/v3/serp/google/jobs/task_post/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void googleJobsTaskPostTest() throws ApiException {
        List<SerpGoogleJobsTaskPostRequestInfo> serpGoogleJobsTaskPostRequestInfo = null;
        SerpGoogleJobsTaskPostResponseInfo response = api.googleJobsTaskPost(serpGoogleJobsTaskPostRequestInfo);
        // TODO: test validations
    }

    /**
     * ‌ The ‘Tasks Fixed’ endpoint is designed to provide you with the list of re-parsed tasks, which haven’t been collected yet. If you use the Standard method without specifying the postback_url, you can receive the list of id for all completed re-parsed tasks using this endpoint. Then, you can re-collect the fixed results using the ‘Task GET’ endpoint. for more info please visit &#39;https://docs.dataforseo.com/v3/serp/google/jobs/tasks_fixed/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void googleJobsTasksFixedTest() throws ApiException {
        SerpGoogleJobsTasksFixedResponseInfo response = api.googleJobsTasksFixed();
        // TODO: test validations
    }

    /**
     * ‌ The ‘Tasks Ready’ endpoint is designed to provide you with the list of completed tasks, which haven’t been collected yet. If you use the Standard method without specifying the postback_url, you can receive the list of id for all completed tasks using this endpoint. Then, you can collect the results using the ‘Task GET’ endpoint. Learn more about task completion and obtaining a list of completed tasks in this help center article. for more info please visit &#39;https://docs.dataforseo.com/v3/serp/google/jobs/tasks_ready/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void googleJobsTasksReadyTest() throws ApiException {
        SerpGoogleJobsTasksReadyResponseInfo response = api.googleJobsTasksReady();
        // TODO: test validations
    }

    /**
     * ‌‌ Live Google Local finder SERP provides real-time search engine results for the specified keyword and location. By default, you can get up to 20 results for desktop and up to 10 results for mobile. for more info please visit &#39;https://docs.dataforseo.com/v3/serp/google/local_finder/live/advanced/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void googleLocalFinderLiveAdvancedTest() throws ApiException {
        List<SerpGoogleLocalFinderLiveAdvancedRequestInfo> serpGoogleLocalFinderLiveAdvancedRequestInfo = null;
        SerpGoogleLocalFinderLiveAdvancedResponseInfo response = api.googleLocalFinderLiveAdvanced(serpGoogleLocalFinderLiveAdvancedRequestInfo);
        // TODO: test validations
    }

    /**
     * ‌ Live Google Local Finder SERP HTML provides a raw HTML page of the search engine results for the specified keyword, search engine, and location. for more info please visit &#39;https://docs.dataforseo.com/v3/serp/google/local_finder/live/html/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void googleLocalFinderLiveHtmlTest() throws ApiException {
        List<SerpGoogleLocalFinderLiveHtmlRequestInfo> serpGoogleLocalFinderLiveHtmlRequestInfo = null;
        SerpGoogleLocalFinderLiveHtmlResponseInfo response = api.googleLocalFinderLiveHtml(serpGoogleLocalFinderLiveHtmlRequestInfo);
        // TODO: test validations
    }

    /**
     * Description of the fields for sending a request: for more info please visit &#39;https://docs.dataforseo.com/v3/serp/google/local_finder/task_get/advanced/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void googleLocalFinderTaskGetAdvancedTest() throws ApiException {
        String id = null;
        SerpGoogleLocalFinderTaskGetAdvancedResponseInfo response = api.googleLocalFinderTaskGetAdvanced(id);
        // TODO: test validations
    }

    /**
     * Description of the fields for sending a request: for more info please visit &#39;https://docs.dataforseo.com/v3/serp/google/local_finder/task_get/html/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void googleLocalFinderTaskGetHtmlTest() throws ApiException {
        String id = null;
        SerpGoogleLocalFinderTaskGetHtmlResponseInfo response = api.googleLocalFinderTaskGetHtml(id);
        // TODO: test validations
    }

    /**
     * ‌‌ Google Local Finder SERP API provides top search engine results specific to the selected location (see the List of Locations) and language (see the List of Languages) settings. for more info please visit &#39;https://docs.dataforseo.com/v3/serp/google/local_finder/task_post/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void googleLocalFinderTaskPostTest() throws ApiException {
        List<SerpGoogleLocalFinderTaskPostRequestInfo> serpGoogleLocalFinderTaskPostRequestInfo = null;
        SerpGoogleLocalFinderTaskPostResponseInfo response = api.googleLocalFinderTaskPost(serpGoogleLocalFinderTaskPostRequestInfo);
        // TODO: test validations
    }

    /**
     * ‌ The ‘Tasks Fixed’ endpoint is designed to provide you with the list of re-parsed tasks, which haven’t been collected yet. If you use the Standard method without specifying the postback_url, you can receive the list of id for all completed re-parsed tasks using this endpoint. Then, you can re-collect the fixed results using the ‘Task GET’ endpoint. for more info please visit &#39;https://docs.dataforseo.com/v3/serp/google/local_finder/tasks_fixed/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void googleLocalFinderTasksFixedTest() throws ApiException {
        SerpGoogleLocalFinderTasksFixedResponseInfo response = api.googleLocalFinderTasksFixed();
        // TODO: test validations
    }

    /**
     * ‌ The ‘Tasks Ready’ endpoint is designed to provide you with the list of completed tasks, which haven’t been collected yet. If you use the Standard method without specifying the postback_url, you can receive the list of id for all completed tasks using this endpoint. Then, you can collect the results using the ‘Task GET’ endpoint. Learn more about task completion and obtaining a list of completed tasks in this help center article. for more info please visit &#39;https://docs.dataforseo.com/v3/serp/google/local_finder/tasks_ready/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void googleLocalFinderTasksReadyTest() throws ApiException {
        SerpGoogleLocalFinderTasksReadyResponseInfo response = api.googleLocalFinderTasksReady();
        // TODO: test validations
    }

    /**
     * ‌‌ Live Google Maps SERP provides real-time data on top 100 search engine results for the specified keyword, search engine, and location. for more info please visit &#39;https://docs.dataforseo.com/v3/serp/google/maps/live/advanced/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void googleMapsLiveAdvancedTest() throws ApiException {
        List<SerpGoogleMapsLiveAdvancedRequestInfo> serpGoogleMapsLiveAdvancedRequestInfo = null;
        SerpGoogleMapsLiveAdvancedResponseInfo response = api.googleMapsLiveAdvanced(serpGoogleMapsLiveAdvancedRequestInfo);
        // TODO: test validations
    }

    /**
     * Description of the fields for sending a request: for more info please visit &#39;https://docs.dataforseo.com/v3/serp/google/maps/task_get/advanced/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void googleMapsTaskGetAdvancedTest() throws ApiException {
        String id = null;
        SerpGoogleMapsTaskGetAdvancedResponseInfo response = api.googleMapsTaskGetAdvanced(id);
        // TODO: test validations
    }

    /**
     * ‌‌ SERP API provides top 100 search engine results. These results are specific to the selected location (see the List of Locations) and language (see the List of Languages) settings. for more info please visit &#39;https://docs.dataforseo.com/v3/serp/google/maps/task_post/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void googleMapsTaskPostTest() throws ApiException {
        List<SerpGoogleMapsTaskPostRequestInfo> serpGoogleMapsTaskPostRequestInfo = null;
        SerpGoogleMapsTaskPostResponseInfo response = api.googleMapsTaskPost(serpGoogleMapsTaskPostRequestInfo);
        // TODO: test validations
    }

    /**
     * ‌ The ‘Tasks Fixed’ endpoint is designed to provide you with the list of re-parsed tasks, which haven’t been collected yet. If you use the Standard method without specifying the postback_url, you can receive the list of id for all completed re-parsed tasks using this endpoint. Then, you can re-collect the fixed results using the ‘Task GET’ endpoint. for more info please visit &#39;https://docs.dataforseo.com/v3/serp/google/maps/tasks_fixed/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void googleMapsTasksFixedTest() throws ApiException {
        SerpGoogleMapsTasksFixedResponseInfo response = api.googleMapsTasksFixed();
        // TODO: test validations
    }

    /**
     * ‌ The ‘Tasks Ready’ endpoint is designed to provide you with the list of completed tasks, which haven’t been collected yet. If you use the Standard method without specifying the postback_url, you can receive the list of id for all completed tasks using this endpoint. Then, you can collect the results using the ‘Task GET’ endpoint. Learn more about task completion and obtaining a list of completed tasks in this help center article. for more info please visit &#39;https://docs.dataforseo.com/v3/serp/google/maps/tasks_ready/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void googleMapsTasksReadyTest() throws ApiException {
        SerpGoogleMapsTasksReadyResponseInfo response = api.googleMapsTasksReady();
        // TODO: test validations
    }

    /**
     * ‌‌ Live Google News SERP provides real-time data on top 100 search engine results for the specified keyword, search engine, and location. for more info please visit &#39;https://docs.dataforseo.com/v3/serp/google/news/live/advanced/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void googleNewsLiveAdvancedTest() throws ApiException {
        List<SerpGoogleNewsLiveAdvancedRequestInfo> serpGoogleNewsLiveAdvancedRequestInfo = null;
        SerpGoogleNewsLiveAdvancedResponseInfo response = api.googleNewsLiveAdvanced(serpGoogleNewsLiveAdvancedRequestInfo);
        // TODO: test validations
    }

    /**
     * ‌ Live SERP HTML provides a raw HTML page of 100 search engine results for the specified keyword, search engine, and location. for more info please visit &#39;https://docs.dataforseo.com/v3/serp/google/news/live/html/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void googleNewsLiveHtmlTest() throws ApiException {
        List<SerpGoogleNewsLiveHtmlRequestInfo> serpGoogleNewsLiveHtmlRequestInfo = null;
        SerpGoogleNewsLiveHtmlResponseInfo response = api.googleNewsLiveHtml(serpGoogleNewsLiveHtmlRequestInfo);
        // TODO: test validations
    }

    /**
     * Description of the fields for sending a request: for more info please visit &#39;https://docs.dataforseo.com/v3/serp/google/news/task_get/advanced/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void googleNewsTaskGetAdvancedTest() throws ApiException {
        String id = null;
        SerpGoogleNewsTaskGetAdvancedResponseInfo response = api.googleNewsTaskGetAdvanced(id);
        // TODO: test validations
    }

    /**
     * Description of the fields for sending a request: for more info please visit &#39;https://docs.dataforseo.com/v3/serp/google/news/task_get/html/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void googleNewsTaskGetHtmlTest() throws ApiException {
        String id = null;
        SerpGoogleNewsTaskGetHtmlResponseInfo response = api.googleNewsTaskGetHtml(id);
        // TODO: test validations
    }

    /**
     * ‌‌ SERP API provides top 100 search engine results. These results are specific to the selected location (see the List of Locations) and language (see the List of Languages) settings. for more info please visit &#39;https://docs.dataforseo.com/v3/serp/google/news/task_post/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void googleNewsTaskPostTest() throws ApiException {
        List<SerpGoogleNewsTaskPostRequestInfo> serpGoogleNewsTaskPostRequestInfo = null;
        SerpGoogleNewsTaskPostResponseInfo response = api.googleNewsTaskPost(serpGoogleNewsTaskPostRequestInfo);
        // TODO: test validations
    }

    /**
     * ‌ The ‘Tasks Fixed’ endpoint is designed to provide you with the list of re-parsed tasks, which haven’t been collected yet. If you use the Standard method without specifying the postback_url, you can receive the list of id for all completed re-parsed tasks using this endpoint. Then, you can re-collect the fixed results using the ‘Task GET’ endpoint. for more info please visit &#39;https://docs.dataforseo.com/v3/serp/google/news/tasks_fixed/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void googleNewsTasksFixedTest() throws ApiException {
        SerpGoogleNewsTasksFixedResponseInfo response = api.googleNewsTasksFixed();
        // TODO: test validations
    }

    /**
     * ‌ The ‘Tasks Ready’ endpoint is designed to provide you with the list of completed tasks, which haven’t been collected yet. If you use the Standard method without specifying the postback_url, you can receive the list of id for all completed tasks using this endpoint. Then, you can collect the results using the ‘Task GET’ endpoint. Learn more about task completion and obtaining a list of completed tasks in this help center article. for more info please visit &#39;https://docs.dataforseo.com/v3/serp/google/news/tasks_ready/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void googleNewsTasksReadyTest() throws ApiException {
        SerpGoogleNewsTasksReadyResponseInfo response = api.googleNewsTasksReady();
        // TODO: test validations
    }

    /**
     * ‌ Live SERP provides real-time data on top 100 search engine results for the specified keyword, search engine, and location. This endpoint will supply a complete overview of featured snippets and other extra elements of SERPs. for more info please visit &#39;https://docs.dataforseo.com/v3/serp/google/organic/live/advanced/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void googleOrganicLiveAdvancedTest() throws ApiException {
        List<SerpGoogleOrganicLiveAdvancedRequestInfo> serpGoogleOrganicLiveAdvancedRequestInfo = null;
        SerpGoogleOrganicLiveAdvancedResponseInfo response = api.googleOrganicLiveAdvanced(serpGoogleOrganicLiveAdvancedRequestInfo);
        // TODO: test validations
    }

    /**
     * ‌ Live SERP HTML provides a raw HTML page of 100 search engine results for the specified keyword, search engine, and location. for more info please visit &#39;https://docs.dataforseo.com/v3/serp/google/organic/live/html/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void googleOrganicLiveHtmlTest() throws ApiException {
        List<SerpGoogleOrganicLiveHtmlRequestInfo> serpGoogleOrganicLiveHtmlRequestInfo = null;
        SerpGoogleOrganicLiveHtmlResponseInfo response = api.googleOrganicLiveHtml(serpGoogleOrganicLiveHtmlRequestInfo);
        // TODO: test validations
    }

    /**
     * ‌‌ Live SERP provides real-time data on top 100 search engine results for the specified keyword, search engine, and location. for more info please visit &#39;https://docs.dataforseo.com/v3/serp/google/organic/live/regular/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void googleOrganicLiveRegularTest() throws ApiException {
        List<SerpGoogleOrganicLiveRegularRequestInfo> serpGoogleOrganicLiveRegularRequestInfo = null;
        SerpGoogleOrganicLiveRegularResponseInfo response = api.googleOrganicLiveRegular(serpGoogleOrganicLiveRegularRequestInfo);
        // TODO: test validations
    }

    /**
     * Description of the fields for sending a request: for more info please visit &#39;https://docs.dataforseo.com/v3/serp/google/organic/task_get/advanced/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void googleOrganicTaskGetAdvancedTest() throws ApiException {
        String id = null;
        SerpGoogleOrganicTaskGetAdvancedResponseInfo response = api.googleOrganicTaskGetAdvanced(id);
        // TODO: test validations
    }

    /**
     * Description of the fields for sending a request: for more info please visit &#39;https://docs.dataforseo.com/v3/serp/google/organic/task_get/html/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void googleOrganicTaskGetHtmlTest() throws ApiException {
        String id = null;
        SerpGoogleOrganicTaskGetHtmlResponseInfo response = api.googleOrganicTaskGetHtml(id);
        // TODO: test validations
    }

    /**
     * Description of the fields for sending a request: for more info please visit &#39;https://docs.dataforseo.com/v3/serp/google/organic/task_get/regular/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void googleOrganicTaskGetRegularTest() throws ApiException {
        String id = null;
        SerpGoogleOrganicTaskGetRegularResponseInfo response = api.googleOrganicTaskGetRegular(id);
        // TODO: test validations
    }

    /**
     * ‌‌ SERP API provides top 100 search engine results. These results are specific to the selected location (see the List of Locations) and language (see the List of Languages) settings. for more info please visit &#39;https://docs.dataforseo.com/v3/serp/google/organic/task_post/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void googleOrganicTaskPostTest() throws ApiException {
        List<SerpGoogleOrganicTaskPostRequestInfo> serpGoogleOrganicTaskPostRequestInfo = null;
        SerpGoogleOrganicTaskPostResponseInfo response = api.googleOrganicTaskPost(serpGoogleOrganicTaskPostRequestInfo);
        // TODO: test validations
    }

    /**
     * ‌ The ‘Tasks Fixed’ endpoint is designed to provide you with the list of re-parsed tasks, which haven’t been collected yet. If you use the Standard method without specifying the postback_url, you can receive the list of id for all completed re-parsed tasks using this endpoint. Then, you can re-collect the fixed results using the ‘Task GET’ endpoint. for more info please visit &#39;https://docs.dataforseo.com/v3/serp/google/organic/tasks_fixed/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void googleOrganicTasksFixedTest() throws ApiException {
        SerpGoogleOrganicTasksFixedResponseInfo response = api.googleOrganicTasksFixed();
        // TODO: test validations
    }

    /**
     * ‌ The ‘Tasks Ready’ endpoint is designed to provide you with the list of completed tasks, which haven’t been collected yet. If you use the Standard method without specifying the postback_url, you can receive the list of id for all completed tasks using this endpoint. Then, you can collect the results using the ‘Task GET’ endpoint. Learn more about task completion and obtaining a list of completed tasks in this help center article. for more info please visit &#39;https://docs.dataforseo.com/v3/serp/google/organic/tasks_ready/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void googleOrganicTasksReadyTest() throws ApiException {
        SerpGoogleOrganicTasksReadyResponseInfo response = api.googleOrganicTasksReady();
        // TODO: test validations
    }

    /**
     * Description of the fields for sending a request: for more info please visit &#39;https://docs.dataforseo.com/v3/serp/google/search_by_image/task_get/advanced/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void googleSearchByImageTaskGetAdvancedTest() throws ApiException {
        String id = null;
        SerpGoogleSearchByImageTaskGetAdvancedResponseInfo response = api.googleSearchByImageTaskGetAdvanced(id);
        // TODO: test validations
    }

    /**
     * ‌‌ Google Search By Image SERP API provides up to top 100 search engine results based on the image you specified. These results are specific to the selected location (see the List of Locations) and language (see the List of Languages) settings. for more info please visit &#39;https://docs.dataforseo.com/v3/serp/google/search_by_image/task_post/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void googleSearchByImageTaskPostTest() throws ApiException {
        List<SerpGoogleSearchByImageTaskPostRequestInfo> serpGoogleSearchByImageTaskPostRequestInfo = null;
        SerpGoogleSearchByImageTaskPostResponseInfo response = api.googleSearchByImageTaskPost(serpGoogleSearchByImageTaskPostRequestInfo);
        // TODO: test validations
    }

    /**
     * ‌ The ‘Tasks Fixed’ endpoint is designed to provide you with the list of re-parsed tasks, which haven’t been collected yet. If you use the Standard method without specifying the postback_url, you can receive the list of id for all completed re-parsed tasks using this endpoint. Then, you can re-collect the fixed results using the ‘Task GET’ endpoint. for more info please visit &#39;https://docs.dataforseo.com/v3/serp/google/search_by_image/tasks_fixed/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void googleSearchByImageTasksFixedTest() throws ApiException {
        SerpGoogleSearchByImageTasksFixedResponseInfo response = api.googleSearchByImageTasksFixed();
        // TODO: test validations
    }

    /**
     * ‌ The ‘Tasks Ready’ endpoint is designed to provide you with the list of completed tasks, which haven’t been collected yet. If you use the Standard method without specifying the postback_url, you can receive the list of id for all completed tasks using this endpoint. Then, you can collect the results using the ‘Task GET’ endpoint. for more info please visit &#39;https://docs.dataforseo.com/v3/serp/google/search_by_image/tasks_ready/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void googleSearchByImageTasksReadyTest() throws ApiException {
        SerpGoogleSearchByImageTasksReadyResponseInfo response = api.googleSearchByImageTasksReady();
        // TODO: test validations
    }

    /**
     * Description of the fields for sending a request: for more info please visit &#39;https://docs.dataforseo.com/v3/serp/naver/organic/task_get/advanced/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void naverOrganicTaskGetAdvancedTest() throws ApiException {
        String id = null;
        SerpNaverOrganicTaskGetAdvancedResponseInfo response = api.naverOrganicTaskGetAdvanced(id);
        // TODO: test validations
    }

    /**
     * Description of the fields for sending a request: for more info please visit &#39;https://docs.dataforseo.com/v3/serp/naver/organic/task_get/html/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void naverOrganicTaskGetHtmlTest() throws ApiException {
        String id = null;
        SerpNaverOrganicTaskGetHtmlResponseInfo response = api.naverOrganicTaskGetHtml(id);
        // TODO: test validations
    }

    /**
     * Description of the fields for sending a request: for more info please visit &#39;https://docs.dataforseo.com/v3/serp/naver/organic/task_get/regular/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void naverOrganicTaskGetRegularTest() throws ApiException {
        String id = null;
        SerpNaverOrganicTaskGetRegularResponseInfo response = api.naverOrganicTaskGetRegular(id);
        // TODO: test validations
    }

    /**
     * ‌‌ Naver SERP API provides top 100 search engine results. Naver search results do not vary by location and language, and the search parameters for this search engine do not contain language and location variables. However, you can specify a keyword in any language, and the search engine results may vary depending on the language you used for specifying the search query. for more info please visit &#39;https://docs.dataforseo.com/v3/serp/naver/organic/task_post/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void naverOrganicTaskPostTest() throws ApiException {
        List<SerpNaverOrganicTaskPostRequestInfo> serpNaverOrganicTaskPostRequestInfo = null;
        SerpNaverOrganicTaskPostResponseInfo response = api.naverOrganicTaskPost(serpNaverOrganicTaskPostRequestInfo);
        // TODO: test validations
    }

    /**
     * ‌ The ‘Tasks Fixed’ endpoint is designed to provide you with the list of re-parsed tasks, which haven’t been collected yet. If you use the Standard method without specifying the postback_url, you can receive the list of id for all completed re-parsed tasks using this endpoint. Then, you can re-collect the fixed results using the ‘Task GET’ endpoint. for more info please visit &#39;https://docs.dataforseo.com/v3/serp/naver/organic/tasks_fixed/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void naverOrganicTasksFixedTest() throws ApiException {
        SerpNaverOrganicTasksFixedResponseInfo response = api.naverOrganicTasksFixed();
        // TODO: test validations
    }

    /**
     * ‌ The ‘Tasks Ready’ endpoint is designed to provide you with the list of completed tasks, which haven’t been collected yet. If you use the Standard method without specifying the postback_url, you can receive the list of id for all completed tasks using this endpoint. Then, you can collect the results using the ‘Task GET’ endpoint. Learn more about task completion and obtaining a list of completed tasks in this help center article. for more info please visit &#39;https://docs.dataforseo.com/v3/serp/naver/organic/tasks_ready/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void naverOrganicTasksReadyTest() throws ApiException {
        SerpNaverOrganicTasksReadyResponseInfo response = api.naverOrganicTasksReady();
        // TODO: test validations
    }

    /**
     * ‌‌ Using the Live Page Screenshot endpoint, you can capture a screenshot of any SERP page. for more info please visit &#39;https://docs.dataforseo.com/v3/serp/screenshot/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void screenshotTest() throws ApiException {
        List<SerpScreenshotRequestInfo> serpScreenshotRequestInfo = null;
        SerpScreenshotResponseInfo response = api.screenshot(serpScreenshotRequestInfo);
        // TODO: test validations
    }

    /**
     * You will receive the list of languages by calling this API. You can also download the full list of supported languages in the CSV format (last updated 2023-05-02). for more info please visit &#39;https://docs.dataforseo.com/v3/serp/baidu/languages/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void serpBaiduLanguagesTest() throws ApiException {
        SerpBaiduLanguagesResponseInfo response = api.serpBaiduLanguages();
        // TODO: test validations
    }

    /**
     * You will receive the list of locations by this API call. You can filter the list of locations by country when setting a task. for more info please visit &#39;https://docs.dataforseo.com/v3/serp/baidu/locations/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void serpBaiduLocationsTest() throws ApiException {
        SerpBaiduLocationsResponseInfo response = api.serpBaiduLocations();
        // TODO: test validations
    }

    /**
     * You will receive the list of locations by this API call. You can filter the list of locations by country when setting a task. for more info please visit &#39;https://docs.dataforseo.com/v3/serp/baidu/locations/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void serpBaiduLocationsCountryTest() throws ApiException {
        String country = null;
        SerpBaiduLocationsCountryResponseInfo response = api.serpBaiduLocationsCountry(country);
        // TODO: test validations
    }

    /**
     * You will receive the list of languages by calling this API. for more info please visit &#39;https://docs.dataforseo.com/v3/serp/bing/languages/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void serpBingLanguagesTest() throws ApiException {
        SerpBingLanguagesResponseInfo response = api.serpBingLanguages();
        // TODO: test validations
    }

    /**
     * You will receive the list of locations by this API call. You can filter the list of locations by country when setting a task. for more info please visit &#39;https://docs.dataforseo.com/v3/serp/bing/locations/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void serpBingLocationsTest() throws ApiException {
        SerpBingLocationsResponseInfo response = api.serpBingLocations();
        // TODO: test validations
    }

    /**
     * You will receive the list of locations by this API call. You can filter the list of locations by country when setting a task. for more info please visit &#39;https://docs.dataforseo.com/v3/serp/bing/locations/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void serpBingLocationsCountryTest() throws ApiException {
        String country = null;
        SerpBingLocationsCountryResponseInfo response = api.serpBingLocationsCountry(country);
        // TODO: test validations
    }

    /**
     * By calling this endpoint you will receive information about the SERP API tasks that returned an error within the past 7 days. for more info please visit &#39;https://docs.dataforseo.com/v3/serp/errors/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void serpErrorsTest() throws ApiException {
        List<SerpErrorsRequestInfo> serpErrorsRequestInfo = null;
        SerpErrorsResponseInfo response = api.serpErrors(serpErrorsRequestInfo);
        // TODO: test validations
    }

    /**
     * for more info please visit &#39;https://docs_v3.dataforseo.com/v3/serp/google/ads_advertisers/locations/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void serpGoogleAdsAdvertisersLocationsTest() throws ApiException {
        SerpGoogleAdsAdvertisersLocationsResponseInfo response = api.serpGoogleAdsAdvertisersLocations();
        // TODO: test validations
    }

    /**
     * for more info please visit &#39;https://docs_v3.dataforseo.com/v3/serp/google/ads_search/locations/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void serpGoogleAdsSearchLocationsTest() throws ApiException {
        SerpGoogleAdsSearchLocationsResponseInfo response = api.serpGoogleAdsSearchLocations();
        // TODO: test validations
    }

    /**
     * You will receive the list of languages by calling this API. for more info please visit &#39;https://docs.dataforseo.com/v3/serp/google/languages/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void serpGoogleLanguagesTest() throws ApiException {
        SerpGoogleLanguagesResponseInfo response = api.serpGoogleLanguages();
        // TODO: test validations
    }

    /**
     * You will receive the list of locations by this API call. You can filter the list of locations by country when setting a task. for more info please visit &#39;https://docs.dataforseo.com/v3/serp/google/locations/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void serpGoogleLocationsTest() throws ApiException {
        SerpGoogleLocationsResponseInfo response = api.serpGoogleLocations();
        // TODO: test validations
    }

    /**
     * You will receive the list of locations by this API call. You can filter the list of locations by country when setting a task. for more info please visit &#39;https://docs.dataforseo.com/v3/serp/google/locations/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void serpGoogleLocationsCountryTest() throws ApiException {
        String country = null;
        SerpGoogleLocationsCountryResponseInfo response = api.serpGoogleLocationsCountry(country);
        // TODO: test validations
    }

    /**
     * This endpoint is designed to provide you with the list of IDs and metadata of the completed SERP tasks during the specified period. You will get all task IDs that were made including successful, uncompleted, and tasks that responded as errors. for more info please visit &#39;https://docs.dataforseo.com/v3/serp/id_list/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void serpIdListTest() throws ApiException {
        List<SerpIdListRequestInfo> serpIdListRequestInfo = null;
        SerpIdListResponseInfo response = api.serpIdList(serpIdListRequestInfo);
        // TODO: test validations
    }

    /**
     * You will receive the list of languages by calling this API. for more info please visit &#39;https://docs.dataforseo.com/v3/serp/seznam/languages/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void serpSeznamLanguagesTest() throws ApiException {
        SerpSeznamLanguagesResponseInfo response = api.serpSeznamLanguages();
        // TODO: test validations
    }

    /**
     * You will receive the list of locations by this API call. You can filter the list of locations by country when setting a task. for more info please visit &#39;https://docs.dataforseo.com/v3/serp/seznam/locations/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void serpSeznamLocationsTest() throws ApiException {
        SerpSeznamLocationsResponseInfo response = api.serpSeznamLocations();
        // TODO: test validations
    }

    /**
     * You will receive the list of locations by this API call. You can filter the list of locations by country when setting a task. for more info please visit &#39;https://docs.dataforseo.com/v3/serp/seznam/locations/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void serpSeznamLocationsCountryTest() throws ApiException {
        String country = null;
        SerpSeznamLocationsCountryResponseInfo response = api.serpSeznamLocationsCountry(country);
        // TODO: test validations
    }

    /**
     * You will receive the list of languages by calling this API. for more info please visit &#39;https://docs.dataforseo.com/v3/serp/yahoo/languages/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void serpYahooLanguagesTest() throws ApiException {
        SerpYahooLanguagesResponseInfo response = api.serpYahooLanguages();
        // TODO: test validations
    }

    /**
     * You will receive the list of locations by this API call. You can filter the list of locations by country when setting a task. for more info please visit &#39;https://docs.dataforseo.com/v3/serp/yahoo/locations/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void serpYahooLocationsTest() throws ApiException {
        SerpYahooLocationsResponseInfo response = api.serpYahooLocations();
        // TODO: test validations
    }

    /**
     * You will receive the list of locations by this API call. You can filter the list of locations by country when setting a task. for more info please visit &#39;https://docs.dataforseo.com/v3/serp/yahoo/locations/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void serpYahooLocationsCountryTest() throws ApiException {
        String country = null;
        SerpYahooLocationsCountryResponseInfo response = api.serpYahooLocationsCountry(country);
        // TODO: test validations
    }

    /**
     * You will receive the list of languages by calling this API. for more info please visit &#39;https://docs.dataforseo.com/v3/serp/youtube/languages/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void serpYoutubeLanguagesTest() throws ApiException {
        SerpYoutubeLanguagesResponseInfo response = api.serpYoutubeLanguages();
        // TODO: test validations
    }

    /**
     * You will receive the list of locations by this API call. You can filter the list of locations by country when setting a task. for more info please visit &#39;https://docs.dataforseo.com/v3/serp/youtube/locations/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void serpYoutubeLocationsTest() throws ApiException {
        SerpYoutubeLocationsResponseInfo response = api.serpYoutubeLocations();
        // TODO: test validations
    }

    /**
     * You will receive the list of locations by this API call. You can filter the list of locations by country when setting a task. for more info please visit &#39;https://docs.dataforseo.com/v3/serp/youtube/locations/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void serpYoutubeLocationsCountryTest() throws ApiException {
        String country = null;
        SerpYoutubeLocationsCountryResponseInfo response = api.serpYoutubeLocationsCountry(country);
        // TODO: test validations
    }

    /**
     * Description of the fields for sending a request: for more info please visit &#39;https://docs.dataforseo.com/v3/serp/seznam/organic/task_get/advanced/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void seznamOrganicTaskGetAdvancedTest() throws ApiException {
        String id = null;
        SerpSeznamOrganicTaskGetAdvancedResponseInfo response = api.seznamOrganicTaskGetAdvanced(id);
        // TODO: test validations
    }

    /**
     * Description of the fields for sending a request: for more info please visit &#39;https://docs.dataforseo.com/v3/serp/seznam/organic/task_get/html/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void seznamOrganicTaskGetHtmlTest() throws ApiException {
        String id = null;
        SerpSeznamOrganicTaskGetHtmlResponseInfo response = api.seznamOrganicTaskGetHtml(id);
        // TODO: test validations
    }

    /**
     * Description of the fields for sending a request: for more info please visit &#39;https://docs.dataforseo.com/v3/serp/seznam/organic/task_get/regular/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void seznamOrganicTaskGetRegularTest() throws ApiException {
        String id = null;
        SerpSeznamOrganicTaskGetRegularResponseInfo response = api.seznamOrganicTaskGetRegular(id);
        // TODO: test validations
    }

    /**
     * ‌‌ Seznam SERP API provides top 10 search engine results from one of the most popular search engines in the Czech Republic. Seznam is focused on the local search market, and thus supports the Czech language only. for more info please visit &#39;https://docs.dataforseo.com/v3/serp/seznam/organic/task_post/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void seznamOrganicTaskPostTest() throws ApiException {
        List<SerpSeznamOrganicTaskPostRequestInfo> serpSeznamOrganicTaskPostRequestInfo = null;
        SerpSeznamOrganicTaskPostResponseInfo response = api.seznamOrganicTaskPost(serpSeznamOrganicTaskPostRequestInfo);
        // TODO: test validations
    }

    /**
     * ‌ The ‘Tasks Fixed’ endpoint is designed to provide you with the list of re-parsed tasks, which haven’t been collected yet. If you use the Standard method without specifying the postback_url, you can receive the list of id for all completed re-parsed tasks using this endpoint. Then, you can re-collect the fixed results using the ‘Task GET’ endpoint. for more info please visit &#39;https://docs.dataforseo.com/v3/serp/seznam/organic/tasks_fixed/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void seznamOrganicTasksFixedTest() throws ApiException {
        SerpSeznamOrganicTasksFixedResponseInfo response = api.seznamOrganicTasksFixed();
        // TODO: test validations
    }

    /**
     * ‌ The ‘Tasks Ready’ endpoint is designed to provide you with the list of completed tasks, which haven’t been collected yet. If you use the Standard method without specifying the postback_url, you can receive the list of id for all completed tasks using this endpoint. Then, you can collect the results using the ‘Task GET’ endpoint. Learn more about task completion and obtaining a list of completed tasks in this help center article. for more info please visit &#39;https://docs.dataforseo.com/v3/serp/seznam/organic/tasks_ready/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void seznamOrganicTasksReadyTest() throws ApiException {
        SerpSeznamOrganicTasksReadyResponseInfo response = api.seznamOrganicTasksReady();
        // TODO: test validations
    }

    /**
     * ‌ The ‘Tasks Ready’ endpoint is designed to provide you with the list of completed tasks, which haven’t been collected yet. If you use the Standard method without specifying the postback_url, you can receive the list of id for all completed tasks using this endpoint. Then, you can collect the results using the ‘Task GET’ endpoint. Learn more about task completion and obtaining a list of completed tasks in this help center article. for more info please visit &#39;https://docs.dataforseo.com/v3/serp/google/organic/tasks_ready/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void tasksReadyTest() throws ApiException {
        SerpTasksReadyResponseInfo response = api.tasksReady();
        // TODO: test validations
    }

    /**
     * ‌ Live SERP provides real-time data on top search engine results. These results are specific to the selected location (see the List of Locations) and language (see the List of Languages) settings. for more info please visit &#39;https://docs.dataforseo.com/v3/serp/yahoo/organic/live/advanced/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void yahooOrganicLiveAdvancedTest() throws ApiException {
        List<SerpYahooOrganicLiveAdvancedRequestInfo> serpYahooOrganicLiveAdvancedRequestInfo = null;
        SerpYahooOrganicLiveAdvancedResponseInfo response = api.yahooOrganicLiveAdvanced(serpYahooOrganicLiveAdvancedRequestInfo);
        // TODO: test validations
    }

    /**
     * ‌ Live SERP HTML provides a raw HTML page of 100 search engine results for the specified keyword, search engine, and location. for more info please visit &#39;https://docs.dataforseo.com/v3/serp/yahoo/organic/live/html/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void yahooOrganicLiveHtmlTest() throws ApiException {
        List<SerpYahooOrganicLiveHtmlRequestInfo> serpYahooOrganicLiveHtmlRequestInfo = null;
        SerpYahooOrganicLiveHtmlResponseInfo response = api.yahooOrganicLiveHtml(serpYahooOrganicLiveHtmlRequestInfo);
        // TODO: test validations
    }

    /**
     * ‌‌ Live Yahoo SERP provides real-time data on up to 100 top search engine results for the specified keyword, search engine, and location. for more info please visit &#39;https://docs.dataforseo.com/v3/serp/yahoo/organic/live/regular/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void yahooOrganicLiveRegularTest() throws ApiException {
        List<SerpYahooOrganicLiveRegularRequestInfo> serpYahooOrganicLiveRegularRequestInfo = null;
        SerpYahooOrganicLiveRegularResponseInfo response = api.yahooOrganicLiveRegular(serpYahooOrganicLiveRegularRequestInfo);
        // TODO: test validations
    }

    /**
     * Description of the fields for sending a request: for more info please visit &#39;https://docs.dataforseo.com/v3/serp/yahoo/organic/task_get/advanced/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void yahooOrganicTaskGetAdvancedTest() throws ApiException {
        String id = null;
        SerpYahooOrganicTaskGetAdvancedResponseInfo response = api.yahooOrganicTaskGetAdvanced(id);
        // TODO: test validations
    }

    /**
     * Description of the fields for sending a request: for more info please visit &#39;https://docs.dataforseo.com/v3/serp/yahoo/organic/task_get/html/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void yahooOrganicTaskGetHtmlTest() throws ApiException {
        String id = null;
        SerpYahooOrganicTaskGetHtmlResponseInfo response = api.yahooOrganicTaskGetHtml(id);
        // TODO: test validations
    }

    /**
     * Description of the fields for sending a request: for more info please visit &#39;https://docs.dataforseo.com/v3/serp/yahoo/organic/task_get/regular/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void yahooOrganicTaskGetRegularTest() throws ApiException {
        String id = null;
        SerpYahooOrganicTaskGetRegularResponseInfo response = api.yahooOrganicTaskGetRegular(id);
        // TODO: test validations
    }

    /**
     * ‌‌ SERP API provides top search engine results. These results are specific to the selected location (see the List of Locations) and language (see the List of Languages) settings. for more info please visit &#39;https://docs.dataforseo.com/v3/serp/yahoo/organic/task_post/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void yahooOrganicTaskPostTest() throws ApiException {
        List<SerpYahooOrganicTaskPostRequestInfo> serpYahooOrganicTaskPostRequestInfo = null;
        SerpYahooOrganicTaskPostResponseInfo response = api.yahooOrganicTaskPost(serpYahooOrganicTaskPostRequestInfo);
        // TODO: test validations
    }

    /**
     * ‌ The ‘Tasks Fixed’ endpoint is designed to provide you with the list of re-parsed tasks, which haven’t been collected yet. If you use the Standard method without specifying the postback_url, you can receive the list of id for all completed re-parsed tasks using this endpoint. Then, you can re-collect the fixed results using the ‘Task GET’ endpoint. for more info please visit &#39;https://docs.dataforseo.com/v3/serp/yahoo/organic/tasks_fixed/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void yahooOrganicTasksFixedTest() throws ApiException {
        SerpYahooOrganicTasksFixedResponseInfo response = api.yahooOrganicTasksFixed();
        // TODO: test validations
    }

    /**
     * ‌ The ‘Tasks Ready’ endpoint is designed to provide you with the list of completed tasks, which haven’t been collected yet. If you use the Standard method without specifying the postback_url, you can receive the list of id for all completed tasks using this endpoint. Then, you can collect the results using the ‘Task GET’ endpoint. Learn more about task completion and obtaining a list of completed tasks in this help center article. for more info please visit &#39;https://docs.dataforseo.com/v3/serp/yahoo/organic/tasks_ready/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void yahooOrganicTasksReadyTest() throws ApiException {
        SerpYahooOrganicTasksReadyResponseInfo response = api.yahooOrganicTasksReady();
        // TODO: test validations
    }

    /**
     * ‌ Live YouTube Comments provides real-time data on comments on the video you specify in the request. You will get the top 20 comments on the video as well as information about the author, and key comment metrics. for more info please visit &#39;https://docs.dataforseo.com/v3/serp/youtube/video_comments/live/advanced/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void youtubeVideoCommentsLiveAdvancedTest() throws ApiException {
        List<SerpYoutubeVideoCommentsLiveAdvancedRequestInfo> serpYoutubeVideoCommentsLiveAdvancedRequestInfo = null;
        SerpYoutubeVideoCommentsLiveAdvancedResponseInfo response = api.youtubeVideoCommentsLiveAdvanced(serpYoutubeVideoCommentsLiveAdvancedRequestInfo);
        // TODO: test validations
    }

    /**
     * Description of the fields for sending a request: for more info please visit &#39;https://docs.dataforseo.com/v3/serp/youtube/video_comments/task_get/advanced/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void youtubeVideoCommentsTaskGetAdvancedTest() throws ApiException {
        String id = null;
        SerpYoutubeVideoCommentsTaskGetAdvancedResponseInfo response = api.youtubeVideoCommentsTaskGetAdvanced(id);
        // TODO: test validations
    }

    /**
     * ‌‌ YouTube Comments API provides data on comments on the video you specify in the request. You will get the top 20 comments on the video as well as information about the author, and key comment metrics. for more info please visit &#39;https://docs.dataforseo.com/v3/serp/youtube/video_comments/task_post/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void youtubeVideoCommentsTaskPostTest() throws ApiException {
        List<SerpYoutubeVideoCommentsTaskPostRequestInfo> serpYoutubeVideoCommentsTaskPostRequestInfo = null;
        SerpYoutubeVideoCommentsTaskPostResponseInfo response = api.youtubeVideoCommentsTaskPost(serpYoutubeVideoCommentsTaskPostRequestInfo);
        // TODO: test validations
    }

    /**
     * ‌ The ‘Tasks Fixed’ endpoint is designed to provide you with the list of re-parsed tasks, which haven’t been collected yet. If you use the Standard method without specifying the postback_url, you can receive the list of id for all completed re-parsed tasks using this endpoint. Then, you can re-collect the fixed results using the ‘Task GET’ endpoint. for more info please visit &#39;https://docs.dataforseo.com/v3/serp/youtube/video_comments/tasks_fixed/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void youtubeVideoCommentsTasksFixedTest() throws ApiException {
        SerpYoutubeVideoCommentsTasksFixedResponseInfo response = api.youtubeVideoCommentsTasksFixed();
        // TODO: test validations
    }

    /**
     * ‌ The ‘Tasks Ready’ endpoint is designed to provide you with the list of completed tasks, which haven’t been collected yet. If you use the Standard method without specifying the postback_url, you can receive the list of id for all completed tasks using this endpoint. Then, you can collect the results using the ‘Task GET’ endpoint. Learn more about task completion and obtaining a list of completed tasks in this help center article. for more info please visit &#39;https://docs.dataforseo.com/v3/serp/youtube/video_comments/tasks_ready/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void youtubeVideoCommentsTasksReadyTest() throws ApiException {
        SerpYoutubeVideoCommentsTasksReadyResponseInfo response = api.youtubeVideoCommentsTasksReady();
        // TODO: test validations
    }

    /**
     * ‌ Live YouTube Video Info provides real-time data on the video you specify in the request. You will get data from the watching page containing key video and content metrics as well as the channel where the video is published. for more info please visit &#39;https://docs.dataforseo.com/v3/serp/youtube/video_info/live/advanced/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void youtubeVideoInfoLiveAdvancedTest() throws ApiException {
        List<SerpYoutubeVideoInfoLiveAdvancedRequestInfo> serpYoutubeVideoInfoLiveAdvancedRequestInfo = null;
        SerpYoutubeVideoInfoLiveAdvancedResponseInfo response = api.youtubeVideoInfoLiveAdvanced(serpYoutubeVideoInfoLiveAdvancedRequestInfo);
        // TODO: test validations
    }

    /**
     * Description of the fields for sending a request: for more info please visit &#39;https://docs.dataforseo.com/v3/serp/youtube/video_info/task_get/advanced/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void youtubeVideoInfoTaskGetAdvancedTest() throws ApiException {
        String id = null;
        SerpYoutubeVideoInfoTaskGetAdvancedResponseInfo response = api.youtubeVideoInfoTaskGetAdvanced(id);
        // TODO: test validations
    }

    /**
     * ‌‌ YouTube Video Info API provides detailed information about the video you specify in the POST request. You will get data from the watching page containing key video and content metrics as well as the channel where the video is published. for more info please visit &#39;https://docs.dataforseo.com/v3/serp/youtube/video_info/task_post/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void youtubeVideoInfoTaskPostTest() throws ApiException {
        List<SerpYoutubeVideoInfoTaskPostRequestInfo> serpYoutubeVideoInfoTaskPostRequestInfo = null;
        SerpYoutubeVideoInfoTaskPostResponseInfo response = api.youtubeVideoInfoTaskPost(serpYoutubeVideoInfoTaskPostRequestInfo);
        // TODO: test validations
    }

    /**
     * ‌ The ‘Tasks Fixed’ endpoint is designed to provide you with the list of re-parsed tasks, which haven’t been collected yet. If you use the Standard method without specifying the postback_url, you can receive the list of id for all completed re-parsed tasks using this endpoint. Then, you can re-collect the fixed results using the ‘Task GET’ endpoint. for more info please visit &#39;https://docs.dataforseo.com/v3/serp/youtube/video_info/tasks_fixed/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void youtubeVideoInfoTasksFixedTest() throws ApiException {
        SerpYoutubeVideoInfoTasksFixedResponseInfo response = api.youtubeVideoInfoTasksFixed();
        // TODO: test validations
    }

    /**
     * ‌ The ‘Tasks Ready’ endpoint is designed to provide you with the list of completed tasks, which haven’t been collected yet. If you use the Standard method without specifying the postback_url, you can receive the list of id for all completed tasks using this endpoint. Then, you can collect the results using the ‘Task GET’ endpoint. Learn more about task completion and obtaining a list of completed tasks in this help center article. for more info please visit &#39;https://docs.dataforseo.com/v3/serp/youtube/video_info/tasks_ready/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void youtubeVideoInfoTasksReadyTest() throws ApiException {
        SerpYoutubeVideoInfoTasksReadyResponseInfo response = api.youtubeVideoInfoTasksReady();
        // TODO: test validations
    }

    /**
     * ‌ Live YouTube Subtitles provides real-time data on subtitles in the video you specify in the request. You will get data from the watching page containing subtitled text, its language, and duration in the video. for more info please visit &#39;https://docs.dataforseo.com/v3/serp/youtube/video_subtitles/live/advanced/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void youtubeVideoSubtitlesLiveAdvancedTest() throws ApiException {
        List<SerpYoutubeVideoSubtitlesLiveAdvancedRequestInfo> serpYoutubeVideoSubtitlesLiveAdvancedRequestInfo = null;
        SerpYoutubeVideoSubtitlesLiveAdvancedResponseInfo response = api.youtubeVideoSubtitlesLiveAdvanced(serpYoutubeVideoSubtitlesLiveAdvancedRequestInfo);
        // TODO: test validations
    }

    /**
     * Description of the fields for sending a request: for more info please visit &#39;https://docs.dataforseo.com/v3/serp/youtube/video_subtitles/task_get/advanced/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void youtubeVideoSubtitlesTaskGetAdvancedTest() throws ApiException {
        String id = null;
        SerpYoutubeVideoSubtitlesTaskGetAdvancedResponseInfo response = api.youtubeVideoSubtitlesTaskGetAdvanced(id);
        // TODO: test validations
    }

    /**
     * ‌‌ YouTube Subtitles API provides data on all subtitles in the video you specify in the POST request. You will get data from the watching page containing subtitled text, its language, and duration in the video. for more info please visit &#39;https://docs.dataforseo.com/v3/serp/youtube/video_subtitles/task_post/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void youtubeVideoSubtitlesTaskPostTest() throws ApiException {
        List<SerpYoutubeVideoSubtitlesTaskPostRequestInfo> serpYoutubeVideoSubtitlesTaskPostRequestInfo = null;
        SerpYoutubeVideoSubtitlesTaskPostResponseInfo response = api.youtubeVideoSubtitlesTaskPost(serpYoutubeVideoSubtitlesTaskPostRequestInfo);
        // TODO: test validations
    }

    /**
     * ‌ The ‘Tasks Fixed’ endpoint is designed to provide you with the list of re-parsed tasks, which haven’t been collected yet. If you use the Standard method without specifying the postback_url, you can receive the list of id for all completed re-parsed tasks using this endpoint. Then, you can re-collect the fixed results using the ‘Task GET’ endpoint. for more info please visit &#39;https://docs.dataforseo.com/v3/serp/youtube/video_subtitles/tasks_fixed/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void youtubeVideoSubtitlesTasksFixedTest() throws ApiException {
        SerpYoutubeVideoSubtitlesTasksFixedResponseInfo response = api.youtubeVideoSubtitlesTasksFixed();
        // TODO: test validations
    }

    /**
     * ‌ The ‘Tasks Ready’ endpoint is designed to provide you with the list of completed tasks, which haven’t been collected yet. If you use the Standard method without specifying the postback_url, you can receive the list of id for all completed tasks using this endpoint. Then, you can collect the results using the ‘Task GET’ endpoint. Learn more about task completion and obtaining a list of completed tasks in this help center article. for more info please visit &#39;https://docs.dataforseo.com/v3/serp/youtube/video_subtitles/tasks_ready/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void youtubeVideoSubtitlesTasksReadyTest() throws ApiException {
        SerpYoutubeVideoSubtitlesTasksReadyResponseInfo response = api.youtubeVideoSubtitlesTasksReady();
        // TODO: test validations
    }

}
