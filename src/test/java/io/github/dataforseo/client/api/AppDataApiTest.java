/*
 * DataForSEO API documentation
 * DataForSEO API is the starting point on your journey towards building powerful SEO software. With DataForSEO you can get all the data you need to build an efficient application while also saving your time and budget. DataForSEO API is using the REST technology for interchanging data between your application and our service. The data exchange is made through the widely used HTTP protocol, which allows applying our API to almost all programming languages.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.dataforseo.client.api;

import io.github.dataforseo.client.ApiException;
import io.github.dataforseo.client.model.AppDataAppleAppInfoTaskGetAdvancedResponseInfo;
import io.github.dataforseo.client.model.AppDataAppleAppInfoTaskPostRequestInfo;
import io.github.dataforseo.client.model.AppDataAppleAppInfoTaskPostResponseInfo;
import io.github.dataforseo.client.model.AppDataAppleAppInfoTasksReadyResponseInfo;
import io.github.dataforseo.client.model.AppDataAppleAppListTaskGetAdvancedResponseInfo;
import io.github.dataforseo.client.model.AppDataAppleAppListTaskPostRequestInfo;
import io.github.dataforseo.client.model.AppDataAppleAppListTaskPostResponseInfo;
import io.github.dataforseo.client.model.AppDataAppleAppListTasksReadyResponseInfo;
import io.github.dataforseo.client.model.AppDataAppleAppListingsCategoriesResponseInfo;
import io.github.dataforseo.client.model.AppDataAppleAppListingsSearchLiveRequestInfo;
import io.github.dataforseo.client.model.AppDataAppleAppListingsSearchLiveResponseInfo;
import io.github.dataforseo.client.model.AppDataAppleAppReviewsTaskGetAdvancedResponseInfo;
import io.github.dataforseo.client.model.AppDataAppleAppReviewsTaskPostRequestInfo;
import io.github.dataforseo.client.model.AppDataAppleAppReviewsTaskPostResponseInfo;
import io.github.dataforseo.client.model.AppDataAppleAppReviewsTasksReadyResponseInfo;
import io.github.dataforseo.client.model.AppDataAppleAppSearchesTaskGetAdvancedResponseInfo;
import io.github.dataforseo.client.model.AppDataAppleAppSearchesTaskPostRequestInfo;
import io.github.dataforseo.client.model.AppDataAppleAppSearchesTaskPostResponseInfo;
import io.github.dataforseo.client.model.AppDataAppleAppSearchesTasksReadyResponseInfo;
import io.github.dataforseo.client.model.AppDataAppleCategoriesResponseInfo;
import io.github.dataforseo.client.model.AppDataAppleLanguagesResponseInfo;
import io.github.dataforseo.client.model.AppDataAppleLocationsResponseInfo;
import io.github.dataforseo.client.model.AppDataErrorsRequestInfo;
import io.github.dataforseo.client.model.AppDataErrorsResponseInfo;
import io.github.dataforseo.client.model.AppDataGoogleAppInfoTaskGetAdvancedResponseInfo;
import io.github.dataforseo.client.model.AppDataGoogleAppInfoTaskGetHtmlResponseInfo;
import io.github.dataforseo.client.model.AppDataGoogleAppInfoTaskPostRequestInfo;
import io.github.dataforseo.client.model.AppDataGoogleAppInfoTaskPostResponseInfo;
import io.github.dataforseo.client.model.AppDataGoogleAppInfoTasksReadyResponseInfo;
import io.github.dataforseo.client.model.AppDataGoogleAppListTaskGetAdvancedResponseInfo;
import io.github.dataforseo.client.model.AppDataGoogleAppListTaskGetHtmlResponseInfo;
import io.github.dataforseo.client.model.AppDataGoogleAppListTaskPostRequestInfo;
import io.github.dataforseo.client.model.AppDataGoogleAppListTaskPostResponseInfo;
import io.github.dataforseo.client.model.AppDataGoogleAppListTasksReadyResponseInfo;
import io.github.dataforseo.client.model.AppDataGoogleAppListingsCategoriesResponseInfo;
import io.github.dataforseo.client.model.AppDataGoogleAppListingsSearchLiveRequestInfo;
import io.github.dataforseo.client.model.AppDataGoogleAppListingsSearchLiveResponseInfo;
import io.github.dataforseo.client.model.AppDataGoogleAppReviewsTaskGetAdvancedResponseInfo;
import io.github.dataforseo.client.model.AppDataGoogleAppReviewsTaskGetHtmlResponseInfo;
import io.github.dataforseo.client.model.AppDataGoogleAppReviewsTaskPostRequestInfo;
import io.github.dataforseo.client.model.AppDataGoogleAppReviewsTaskPostResponseInfo;
import io.github.dataforseo.client.model.AppDataGoogleAppReviewsTasksReadyResponseInfo;
import io.github.dataforseo.client.model.AppDataGoogleAppSearchesTaskGetAdvancedResponseInfo;
import io.github.dataforseo.client.model.AppDataGoogleAppSearchesTaskGetHtmlResponseInfo;
import io.github.dataforseo.client.model.AppDataGoogleAppSearchesTaskPostRequestInfo;
import io.github.dataforseo.client.model.AppDataGoogleAppSearchesTaskPostResponseInfo;
import io.github.dataforseo.client.model.AppDataGoogleAppSearchesTasksReadyResponseInfo;
import io.github.dataforseo.client.model.AppDataGoogleCategoriesResponseInfo;
import io.github.dataforseo.client.model.AppDataGoogleLanguagesResponseInfo;
import io.github.dataforseo.client.model.AppDataGoogleLocationsCountryResponseInfo;
import io.github.dataforseo.client.model.AppDataGoogleLocationsResponseInfo;
import io.github.dataforseo.client.model.AppDataIdListRequestInfo;
import io.github.dataforseo.client.model.AppDataIdListResponseInfo;
import io.github.dataforseo.client.model.AppDataTasksReadyResponseInfo;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for AppDataApi
 */
@Disabled
public class AppDataApiTest {

    private final AppDataApi api = new AppDataApi();

    /**
     * By calling this endpoint you will receive the list of Apple languages supported in App Data API. for more info please visit &#39;https://docs.dataforseo.com/v3/app_data/apple/languages/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void appDataAppleLanguagesTest() throws ApiException {
        AppDataAppleLanguagesResponseInfo response = api.appDataAppleLanguages();
        // TODO: test validations
    }

    /**
     * By calling this endpoint you will receive the list of Apple locations supported in App Data API. for more info please visit &#39;https://docs.dataforseo.com/v3/app_data/apple/locations/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void appDataAppleLocationsTest() throws ApiException {
        AppDataAppleLocationsResponseInfo response = api.appDataAppleLocations();
        // TODO: test validations
    }

    /**
     * By calling this endpoint you will receive information about the App Data API tasks that returned an error within the past 7 days. for more info please visit &#39;https://docs.dataforseo.com/v3/app_data/errors/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void appDataErrorsTest() throws ApiException {
        List<AppDataErrorsRequestInfo> appDataErrorsRequestInfo = null;
        AppDataErrorsResponseInfo response = api.appDataErrors(appDataErrorsRequestInfo);
        // TODO: test validations
    }

    /**
     * By calling this endpoint you will receive the list of Google languages supported in App Data API. for more info please visit &#39;https://docs.dataforseo.com/v3/app_data/google/languages/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void appDataGoogleLanguagesTest() throws ApiException {
        AppDataGoogleLanguagesResponseInfo response = api.appDataGoogleLanguages();
        // TODO: test validations
    }

    /**
     * By calling this endpoint you will receive the list of Google locations supported in App Data API. for more info please visit &#39;https://docs.dataforseo.com/v3/app_data/google/locations/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void appDataGoogleLocationsTest() throws ApiException {
        AppDataGoogleLocationsResponseInfo response = api.appDataGoogleLocations();
        // TODO: test validations
    }

    /**
     * By calling this endpoint you will receive the list of Google locations supported in App Data API. for more info please visit &#39;https://docs.dataforseo.com/v3/app_data/google/locations/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void appDataGoogleLocationsCountryTest() throws ApiException {
        String country = null;
        AppDataGoogleLocationsCountryResponseInfo response = api.appDataGoogleLocationsCountry(country);
        // TODO: test validations
    }

    /**
     * This endpoint is designed to provide you with the list of IDs and metadata of the completed App Data tasks during the specified period. You will get all task IDs that were made including successful, uncompleted, and tasks that responded as errors. for more info please visit &#39;https://docs.dataforseo.com/v3/app_data/id_list/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void appDataIdListTest() throws ApiException {
        List<AppDataIdListRequestInfo> appDataIdListRequestInfo = null;
        AppDataIdListResponseInfo response = api.appDataIdList(appDataIdListRequestInfo);
        // TODO: test validations
    }

    /**
     * ‌ The ‘Tasks Ready’ endpoint is designed to provide you with a list of completed tasks that haven’t been collected yet. If you use the Standard method without specifying the postback_url, you can receive the list of id for all completed tasks using this endpoint. Then, you can collect the results using the ‘Task GET’ endpoints. for more info please visit &#39;https://docs.dataforseo.com/v3/app_data/google/app_searches/tasks_ready/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void appDataTasksReadyTest() throws ApiException {
        AppDataTasksReadyResponseInfo response = api.appDataTasksReady();
        // TODO: test validations
    }

    /**
     * This endpoint will provide you with information about the mobile application specified in a POST request. You will receive its ID, icon, description, reviews count, rating, images, and other data. The results are specific to the app_id parameter specified in the POST request. for more info please visit &#39;https://docs.dataforseo.com/v3/app_data/apple/app_info/task_get/advanced/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void appleAppInfoTaskGetAdvancedTest() throws ApiException {
        String id = null;
        AppDataAppleAppInfoTaskGetAdvancedResponseInfo response = api.appleAppInfoTaskGetAdvanced(id);
        // TODO: test validations
    }

    /**
     * ‌‌ This endpoint will provide you with information about the App Store application specified in the app_id field of the POST request. for more info please visit &#39;https://docs.dataforseo.com/v3/app_data/apple/app_info/task_post/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void appleAppInfoTaskPostTest() throws ApiException {
        List<AppDataAppleAppInfoTaskPostRequestInfo> appDataAppleAppInfoTaskPostRequestInfo = null;
        AppDataAppleAppInfoTaskPostResponseInfo response = api.appleAppInfoTaskPost(appDataAppleAppInfoTaskPostRequestInfo);
        // TODO: test validations
    }

    /**
     * ‌ The ‘Tasks Ready’ endpoint is designed to provide you with a list of completed tasks that haven’t been collected yet. If you use the Standard method without specifying the postback_url, you can receive the list of id for all completed tasks using this endpoint. Then, you can collect the results using the ‘Task GET’ endpoints. for more info please visit &#39;https://docs.dataforseo.com/v3/app_data/apple/app_info/tasks_ready/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void appleAppInfoTasksReadyTest() throws ApiException {
        AppDataAppleAppInfoTasksReadyResponseInfo response = api.appleAppInfoTasksReady();
        // TODO: test validations
    }

    /**
     * This endpoint will provide you with a list of applications published in the top app charts on the App Store platform, including app IDs, ratings, prices, titles, and more. The results are specific to the app_collection as well as the location and language parameters specified in the POST request. for more info please visit &#39;https://docs.dataforseo.com/v3/app_data/apple/app_list/task_get/advanced/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void appleAppListTaskGetAdvancedTest() throws ApiException {
        String id = null;
        AppDataAppleAppListTaskGetAdvancedResponseInfo response = api.appleAppListTaskGetAdvanced(id);
        // TODO: test validations
    }

    /**
     * ‌‌ This endpoint will provide you with a list of mobile applications published in the top app charts on the App Store platform. The returned results are specific to the app collection as well as the language and location parameters. for more info please visit &#39;https://docs.dataforseo.com/v3/app_data/apple/app_list/task_post/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void appleAppListTaskPostTest() throws ApiException {
        List<AppDataAppleAppListTaskPostRequestInfo> appDataAppleAppListTaskPostRequestInfo = null;
        AppDataAppleAppListTaskPostResponseInfo response = api.appleAppListTaskPost(appDataAppleAppListTaskPostRequestInfo);
        // TODO: test validations
    }

    /**
     * ‌ The ‘Tasks Ready’ endpoint is designed to provide you with a list of completed tasks that haven’t been collected yet. If you use the Standard method without specifying the postback_url, you can receive the list of id for all completed tasks using this endpoint. Then, you can collect the results using the ‘Task GET’ endpoints. for more info please visit &#39;https://docs.dataforseo.com/v3/app_data/apple/app_list/tasks_ready/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void appleAppListTasksReadyTest() throws ApiException {
        AppDataAppleAppListTasksReadyResponseInfo response = api.appleAppListTasksReady();
        // TODO: test validations
    }

    /**
     * This endpoint will provide you with a full list of app categories available on Apple App Store. for more info please visit &#39;https://docs.dataforseo.com/v3/app_data/apple/app_listings/categories/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void appleAppListingsCategoriesTest() throws ApiException {
        AppDataAppleAppListingsCategoriesResponseInfo response = api.appleAppListingsCategories();
        // TODO: test validations
    }

    /**
     * This endpoint will provide you with a list of apps published on App Store along with additional information: its ID, icon, reviews count, rating, price, and other data. The results are specific to the title, description, and categories parameters specified in the API request. for more info please visit &#39;https://docs.dataforseo.com/v3/app_data/apple/app_listings/search/live/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void appleAppListingsSearchLiveTest() throws ApiException {
        List<AppDataAppleAppListingsSearchLiveRequestInfo> appDataAppleAppListingsSearchLiveRequestInfo = null;
        AppDataAppleAppListingsSearchLiveResponseInfo response = api.appleAppListingsSearchLive(appDataAppleAppListingsSearchLiveRequestInfo);
        // TODO: test validations
    }

    /**
     * This endpoint will provide you with feedback data on applications listed on the App Store platform, including review ratings, review content, user profile info of each reviewer, review publication dates, and more. The results are specific to the app_id as well as the location and language parameters specified in the POST request. for more info please visit &#39;https://docs.dataforseo.com/v3/app_data/apple/app_reviews/task_get/advanced/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void appleAppReviewsTaskGetAdvancedTest() throws ApiException {
        String id = null;
        AppDataAppleAppReviewsTaskGetAdvancedResponseInfo response = api.appleAppReviewsTaskGetAdvanced(id);
        // TODO: test validations
    }

    /**
     * ‌‌ This endpoint will provide you with reviews published on the App Store platform for the app specified in the app_id field. The returned results are specific to the indicated language and location parameters. for more info please visit &#39;https://docs.dataforseo.com/v3/app_data/apple/app_reviews/task_post/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void appleAppReviewsTaskPostTest() throws ApiException {
        List<AppDataAppleAppReviewsTaskPostRequestInfo> appDataAppleAppReviewsTaskPostRequestInfo = null;
        AppDataAppleAppReviewsTaskPostResponseInfo response = api.appleAppReviewsTaskPost(appDataAppleAppReviewsTaskPostRequestInfo);
        // TODO: test validations
    }

    /**
     * ‌ The ‘Tasks Ready’ endpoint is designed to provide you with a list of completed tasks that haven’t been collected yet. If you use the Standard method without specifying the postback_url, you can receive the list of id for all completed tasks using this endpoint. Then, you can collect the results using the ‘Task GET’ endpoints. for more info please visit &#39;https://docs.dataforseo.com/v3/app_data/apple/app_reviews/tasks_ready/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void appleAppReviewsTasksReadyTest() throws ApiException {
        AppDataAppleAppReviewsTasksReadyResponseInfo response = api.appleAppReviewsTasksReady();
        // TODO: test validations
    }

    /**
     * This endpoint will provide you with a list of apps ranking on the App Store for the keyword specified in a POST request. You will also receive additional information about each application: its ID, icon, reviews count, rating, price, and other data. The results are specific to the keyword as well as location and language parameters specified in the POST request. for more info please visit &#39;https://docs.dataforseo.com/v3/app_data/apple/app_searches/task_get/advanced/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void appleAppSearchesTaskGetAdvancedTest() throws ApiException {
        String id = null;
        AppDataAppleAppSearchesTaskGetAdvancedResponseInfo response = api.appleAppSearchesTaskGetAdvanced(id);
        // TODO: test validations
    }

    /**
     * ‌‌ This endpoint will provide you with a list of apps ranking on the App Store for the specified keyword. The returned results are specific to the indicated keyword, as well as the location and language parameters. for more info please visit &#39;https://docs.dataforseo.com/v3/app_data/apple/app_searches/task_post/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void appleAppSearchesTaskPostTest() throws ApiException {
        List<AppDataAppleAppSearchesTaskPostRequestInfo> appDataAppleAppSearchesTaskPostRequestInfo = null;
        AppDataAppleAppSearchesTaskPostResponseInfo response = api.appleAppSearchesTaskPost(appDataAppleAppSearchesTaskPostRequestInfo);
        // TODO: test validations
    }

    /**
     * ‌ The ‘Tasks Ready’ endpoint is designed to provide you with a list of completed tasks that haven’t been collected yet. If you use the Standard method without specifying the postback_url, you can receive the list of id for all completed tasks using this endpoint. Then, you can collect the results using the ‘Task GET’ endpoints. for more info please visit &#39;https://docs.dataforseo.com/v3/app_data/apple/app_searches/tasks_ready/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void appleAppSearchesTasksReadyTest() throws ApiException {
        AppDataAppleAppSearchesTasksReadyResponseInfo response = api.appleAppSearchesTasksReady();
        // TODO: test validations
    }

    /**
     * This endpoint will provide you with a full list of app categories available on App Store. for more info please visit &#39;https://docs.dataforseo.com/v3/app_data/apple/categories/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void appleCategoriesTest() throws ApiException {
        AppDataAppleCategoriesResponseInfo response = api.appleCategories();
        // TODO: test validations
    }

    /**
     * This endpoint will provide you with information about the mobile application specified in a POST request. You will receive its ID, icon, description, reviews count, rating, number of installs, images, and other data. The results are specific to the app_id parameter specified in the POST request. for more info please visit &#39;https://docs.dataforseo.com/v3/app_data/google/app_info/task_get/advanced/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void googleAppInfoTaskGetAdvancedTest() throws ApiException {
        String id = null;
        AppDataGoogleAppInfoTaskGetAdvancedResponseInfo response = api.googleAppInfoTaskGetAdvanced(id);
        // TODO: test validations
    }

    /**
     * Description of the fields for sending a request: for more info please visit &#39;https://docs.dataforseo.com/v3/app_data/google/app_info/task_get/html/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void googleAppInfoTaskGetHtmlTest() throws ApiException {
        String id = null;
        AppDataGoogleAppInfoTaskGetHtmlResponseInfo response = api.googleAppInfoTaskGetHtml(id);
        // TODO: test validations
    }

    /**
     * ‌‌ This endpoint will provide you with information about the Google Play application specified in the app_id field of the POST request. for more info please visit &#39;https://docs.dataforseo.com/v3/app_data/google/app_info/task_post/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void googleAppInfoTaskPostTest() throws ApiException {
        List<AppDataGoogleAppInfoTaskPostRequestInfo> appDataGoogleAppInfoTaskPostRequestInfo = null;
        AppDataGoogleAppInfoTaskPostResponseInfo response = api.googleAppInfoTaskPost(appDataGoogleAppInfoTaskPostRequestInfo);
        // TODO: test validations
    }

    /**
     * ‌ The ‘Tasks Ready’ endpoint is designed to provide you with a list of completed tasks that haven’t been collected yet. If you use the Standard method without specifying the postback_url, you can receive the list of id for all completed tasks using this endpoint. Then, you can collect the results using the ‘Task GET’ endpoints. for more info please visit &#39;https://docs.dataforseo.com/v3/app_data/google/app_info/tasks_ready/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void googleAppInfoTasksReadyTest() throws ApiException {
        AppDataGoogleAppInfoTasksReadyResponseInfo response = api.googleAppInfoTasksReady();
        // TODO: test validations
    }

    /**
     * This endpoint will provide you with a list of applications published in the top charts on the Google Play platform, including app IDs, ratings, prices, titles, and more. The results are specific to the app_collection as well as the location and language parameters specified in the POST request. for more info please visit &#39;https://docs.dataforseo.com/v3/app_data/google/app_list/task_get/advanced/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void googleAppListTaskGetAdvancedTest() throws ApiException {
        String id = null;
        AppDataGoogleAppListTaskGetAdvancedResponseInfo response = api.googleAppListTaskGetAdvanced(id);
        // TODO: test validations
    }

    /**
     * Description of the fields for sending a request: for more info please visit &#39;https://docs.dataforseo.com/v3/app_data/google/app_list/task_get/html/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void googleAppListTaskGetHtmlTest() throws ApiException {
        String id = null;
        AppDataGoogleAppListTaskGetHtmlResponseInfo response = api.googleAppListTaskGetHtml(id);
        // TODO: test validations
    }

    /**
     * ‌‌ This endpoint will provide you with a list of mobile applications published in the top charts on the Google Play platform. The returned results are specific to the app collection as well as the the language and location parameters. for more info please visit &#39;https://docs.dataforseo.com/v3/app_data/google/app_list/task_post/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void googleAppListTaskPostTest() throws ApiException {
        List<AppDataGoogleAppListTaskPostRequestInfo> appDataGoogleAppListTaskPostRequestInfo = null;
        AppDataGoogleAppListTaskPostResponseInfo response = api.googleAppListTaskPost(appDataGoogleAppListTaskPostRequestInfo);
        // TODO: test validations
    }

    /**
     * ‌ The ‘Tasks Ready’ endpoint is designed to provide you with a list of completed tasks that haven’t been collected yet. If you use the Standard method without specifying the postback_url, you can receive the list of id for all completed tasks using this endpoint. Then, you can collect the results using the ‘Task GET’ endpoints. for more info please visit &#39;https://docs.dataforseo.com/v3/app_data/google/app_list/tasks_ready/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void googleAppListTasksReadyTest() throws ApiException {
        AppDataGoogleAppListTasksReadyResponseInfo response = api.googleAppListTasksReady();
        // TODO: test validations
    }

    /**
     * This endpoint will provide you with a full list of app categories available on Google Play. for more info please visit &#39;https://docs.dataforseo.com/v3/app_data/google/app_listings/categories/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void googleAppListingsCategoriesTest() throws ApiException {
        AppDataGoogleAppListingsCategoriesResponseInfo response = api.googleAppListingsCategories();
        // TODO: test validations
    }

    /**
     * This endpoint will provide you with a list of apps published on Google Play along with additional information: its ID, icon, reviews count, rating, price, and other data. The results are specific to the title, description, and categories parameters specified in the API request. for more info please visit &#39;https://docs.dataforseo.com/v3/app_data/google/app_listings/search/live/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void googleAppListingsSearchLiveTest() throws ApiException {
        List<AppDataGoogleAppListingsSearchLiveRequestInfo> appDataGoogleAppListingsSearchLiveRequestInfo = null;
        AppDataGoogleAppListingsSearchLiveResponseInfo response = api.googleAppListingsSearchLive(appDataGoogleAppListingsSearchLiveRequestInfo);
        // TODO: test validations
    }

    /**
     * This endpoint will provide you with feedback data on applications listed on the Google Play platform, including review ratings, review content, user profile info of each reviewer, review publication dates, and more. The results are specific to the app_id as well as the location and language parameters specified in the POST request. for more info please visit &#39;https://docs.dataforseo.com/v3/app_data/google/app_reviews/task_get/advanced/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void googleAppReviewsTaskGetAdvancedTest() throws ApiException {
        String id = null;
        AppDataGoogleAppReviewsTaskGetAdvancedResponseInfo response = api.googleAppReviewsTaskGetAdvanced(id);
        // TODO: test validations
    }

    /**
     * Description of the fields for sending a request: for more info please visit &#39;https://docs.dataforseo.com/v3/app_data/google/app_reviews/task_get/html/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void googleAppReviewsTaskGetHtmlTest() throws ApiException {
        String id = null;
        AppDataGoogleAppReviewsTaskGetHtmlResponseInfo response = api.googleAppReviewsTaskGetHtml(id);
        // TODO: test validations
    }

    /**
     * ‌‌ This endpoint will provide you with reviews published on the Google Play platform for the app specified in the app_id field. The returned results are specific to the indicated language and location parameters. for more info please visit &#39;https://docs.dataforseo.com/v3/app_data/google/app_reviews/task_post/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void googleAppReviewsTaskPostTest() throws ApiException {
        List<AppDataGoogleAppReviewsTaskPostRequestInfo> appDataGoogleAppReviewsTaskPostRequestInfo = null;
        AppDataGoogleAppReviewsTaskPostResponseInfo response = api.googleAppReviewsTaskPost(appDataGoogleAppReviewsTaskPostRequestInfo);
        // TODO: test validations
    }

    /**
     * ‌ The ‘Tasks Ready’ endpoint is designed to provide you with a list of completed tasks that haven’t been collected yet. If you use the Standard method without specifying the postback_url, you can receive the list of id for all completed tasks using this endpoint. Then, you can collect the results using the ‘Task GET’ endpoints. for more info please visit &#39;https://docs.dataforseo.com/v3/app_data/google/app_reviews/tasks_ready/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void googleAppReviewsTasksReadyTest() throws ApiException {
        AppDataGoogleAppReviewsTasksReadyResponseInfo response = api.googleAppReviewsTasksReady();
        // TODO: test validations
    }

    /**
     * This endpoint will provide you with a list of apps ranking on Google Play for the keyword specified in a POST request. You will also receive additional information about each application: its ID, icon, reviews count, rating, price, and other data. The results are specific to the keyword as well as location and language parameters specified in the POST request. for more info please visit &#39;https://docs.dataforseo.com/v3/app_data/google/app_searches/task_get/advanced/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void googleAppSearchesTaskGetAdvancedTest() throws ApiException {
        String id = null;
        AppDataGoogleAppSearchesTaskGetAdvancedResponseInfo response = api.googleAppSearchesTaskGetAdvanced(id);
        // TODO: test validations
    }

    /**
     * Description of the fields for sending a request: for more info please visit &#39;https://docs.dataforseo.com/v3/app_data/google/app_searches/task_get/html/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void googleAppSearchesTaskGetHtmlTest() throws ApiException {
        String id = null;
        AppDataGoogleAppSearchesTaskGetHtmlResponseInfo response = api.googleAppSearchesTaskGetHtml(id);
        // TODO: test validations
    }

    /**
     * ‌‌ This endpoint will provide you with a list of apps ranking on Google Play for the specified keyword. The returned results are specific to the indicated keyword, as well as the language and location parameters. for more info please visit &#39;https://docs.dataforseo.com/v3/app_data/google/app_searches/task_post/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void googleAppSearchesTaskPostTest() throws ApiException {
        List<AppDataGoogleAppSearchesTaskPostRequestInfo> appDataGoogleAppSearchesTaskPostRequestInfo = null;
        AppDataGoogleAppSearchesTaskPostResponseInfo response = api.googleAppSearchesTaskPost(appDataGoogleAppSearchesTaskPostRequestInfo);
        // TODO: test validations
    }

    /**
     * ‌ The ‘Tasks Ready’ endpoint is designed to provide you with a list of completed tasks that haven’t been collected yet. If you use the Standard method without specifying the postback_url, you can receive the list of id for all completed tasks using this endpoint. Then, you can collect the results using the ‘Task GET’ endpoints. for more info please visit &#39;https://docs.dataforseo.com/v3/app_data/google/app_searches/tasks_ready/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void googleAppSearchesTasksReadyTest() throws ApiException {
        AppDataGoogleAppSearchesTasksReadyResponseInfo response = api.googleAppSearchesTasksReady();
        // TODO: test validations
    }

    /**
     * This endpoint will provide you with a full list of app categories available on Google Play. for more info please visit &#39;https://docs.dataforseo.com/v3/app_data/google/categories/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void googleCategoriesTest() throws ApiException {
        AppDataGoogleCategoriesResponseInfo response = api.googleCategories();
        // TODO: test validations
    }

}
