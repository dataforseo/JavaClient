/*
 * DataForSEO API documentation
 * DataForSEO API is the starting point on your journey towards building powerful SEO software. With DataForSEO you can get all the data you need to build an efficient application while also saving your time and budget. DataForSEO API is using the REST technology for interchanging data between your application and our service. The data exchange is made through the widely used HTTP protocol, which allows applying our API to almost all programming languages.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.dataforseo.client.api;

import io.github.dataforseo.client.ApiException;
import io.github.dataforseo.client.model.MerchantAmazonAsinTaskGetAdvancedResponseInfo;
import io.github.dataforseo.client.model.MerchantAmazonAsinTaskGetHtmlResponseInfo;
import io.github.dataforseo.client.model.MerchantAmazonAsinTaskPostRequestInfo;
import io.github.dataforseo.client.model.MerchantAmazonAsinTaskPostResponseInfo;
import io.github.dataforseo.client.model.MerchantAmazonAsinTasksReadyResponseInfo;
import io.github.dataforseo.client.model.MerchantAmazonLanguagesResponseInfo;
import io.github.dataforseo.client.model.MerchantAmazonLocationsCountryResponseInfo;
import io.github.dataforseo.client.model.MerchantAmazonLocationsResponseInfo;
import io.github.dataforseo.client.model.MerchantAmazonProductsTaskGetAdvancedResponseInfo;
import io.github.dataforseo.client.model.MerchantAmazonProductsTaskGetHtmlResponseInfo;
import io.github.dataforseo.client.model.MerchantAmazonProductsTaskPostRequestInfo;
import io.github.dataforseo.client.model.MerchantAmazonProductsTaskPostResponseInfo;
import io.github.dataforseo.client.model.MerchantAmazonProductsTasksReadyResponseInfo;
import io.github.dataforseo.client.model.MerchantAmazonReviewsTaskGetAdvancedResponseInfo;
import io.github.dataforseo.client.model.MerchantAmazonReviewsTaskGetHtmlResponseInfo;
import io.github.dataforseo.client.model.MerchantAmazonReviewsTaskPostRequestInfo;
import io.github.dataforseo.client.model.MerchantAmazonReviewsTaskPostResponseInfo;
import io.github.dataforseo.client.model.MerchantAmazonReviewsTasksReadyResponseInfo;
import io.github.dataforseo.client.model.MerchantAmazonSellersTaskGetAdvancedResponseInfo;
import io.github.dataforseo.client.model.MerchantAmazonSellersTaskGetHtmlResponseInfo;
import io.github.dataforseo.client.model.MerchantAmazonSellersTaskPostRequestInfo;
import io.github.dataforseo.client.model.MerchantAmazonSellersTaskPostResponseInfo;
import io.github.dataforseo.client.model.MerchantAmazonSellersTasksReadyResponseInfo;
import io.github.dataforseo.client.model.MerchantErrorsRequestInfo;
import io.github.dataforseo.client.model.MerchantErrorsResponseInfo;
import io.github.dataforseo.client.model.MerchantGoogleLanguagesResponseInfo;
import io.github.dataforseo.client.model.MerchantGoogleLocationsCountryResponseInfo;
import io.github.dataforseo.client.model.MerchantGoogleLocationsResponseInfo;
import io.github.dataforseo.client.model.MerchantGoogleProductInfoTaskGetAdvancedResponseInfo;
import io.github.dataforseo.client.model.MerchantGoogleProductInfoTaskPostRequestInfo;
import io.github.dataforseo.client.model.MerchantGoogleProductInfoTaskPostResponseInfo;
import io.github.dataforseo.client.model.MerchantGoogleProductInfoTasksReadyResponseInfo;
import io.github.dataforseo.client.model.MerchantGoogleProductSpecTaskGetAdvancedResponseInfo;
import io.github.dataforseo.client.model.MerchantGoogleProductSpecTaskGetHtmlResponseInfo;
import io.github.dataforseo.client.model.MerchantGoogleProductSpecTaskPostRequestInfo;
import io.github.dataforseo.client.model.MerchantGoogleProductSpecTaskPostResponseInfo;
import io.github.dataforseo.client.model.MerchantGoogleProductSpecTasksReadyResponseInfo;
import io.github.dataforseo.client.model.MerchantGoogleProductsTaskGetAdvancedResponseInfo;
import io.github.dataforseo.client.model.MerchantGoogleProductsTaskGetHtmlResponseInfo;
import io.github.dataforseo.client.model.MerchantGoogleProductsTaskPostResponseInfo;
import io.github.dataforseo.client.model.MerchantGoogleProductsTasksReadyResponseInfo;
import io.github.dataforseo.client.model.MerchantGoogleSellersAdUrlResponseInfo;
import io.github.dataforseo.client.model.MerchantGoogleSellersTaskGetAdvancedResponseInfo;
import io.github.dataforseo.client.model.MerchantGoogleSellersTaskGetHtmlResponseInfo;
import io.github.dataforseo.client.model.MerchantGoogleSellersTaskPostRequestInfo;
import io.github.dataforseo.client.model.MerchantGoogleSellersTaskPostResponseInfo;
import io.github.dataforseo.client.model.MerchantGoogleSellersTasksReadyResponseInfo;
import io.github.dataforseo.client.model.MerchantIdListRequestInfo;
import io.github.dataforseo.client.model.MerchantIdListResponseInfo;
import io.github.dataforseo.client.model.MerchantTaskRequestInfo;
import io.github.dataforseo.client.model.MerchantTasksReadyResponseInfo;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for MerchantApi
 */
@Disabled
public class MerchantApiTest {

    private final MerchantApi api = new MerchantApi();

    /**
     * This endpoint will provide you with information about the product and ASINs of all its modifications listed on Amazon. for more info please visit &#39;https://docs.dataforseo.com/v3/merchant/amazon/asin/task_get/advanced/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void amazonAsinTaskGetAdvancedTest() throws ApiException {
        String id = null;
        MerchantAmazonAsinTaskGetAdvancedResponseInfo response = api.amazonAsinTaskGetAdvanced(id);
        // TODO: test validations
    }

    /**
     * Description of the fields for sending a request: for more info please visit &#39;https://docs.dataforseo.com/v3/merchant/amazon/asin/task_get/html/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void amazonAsinTaskGetHtmlTest() throws ApiException {
        String id = null;
        MerchantAmazonAsinTaskGetHtmlResponseInfo response = api.amazonAsinTaskGetHtml(id);
        // TODO: test validations
    }

    /**
     * ‌‌ This endpoint will provide you with a full list of ASINs assigned to different modifications of a product. for more info please visit &#39;https://docs.dataforseo.com/v3/merchant/amazon/asin/task_post/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void amazonAsinTaskPostTest() throws ApiException {
        List<MerchantAmazonAsinTaskPostRequestInfo> merchantAmazonAsinTaskPostRequestInfo = null;
        MerchantAmazonAsinTaskPostResponseInfo response = api.amazonAsinTaskPost(merchantAmazonAsinTaskPostRequestInfo);
        // TODO: test validations
    }

    /**
     * ‌ The ‘Tasks Ready’ endpoint is designed to provide you with the list of completed tasks, which haven’t been collected yet. If you use the Standard method without specifying the postback_url, you can receive the list of id for all completed tasks using this endpoint. Then, you can collect the results using the ‘Task GET’ endpoints. for more info please visit &#39;https://docs.dataforseo.com/v3/merchant/amazon/asin/tasks_ready/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void amazonAsinTasksReadyTest() throws ApiException {
        MerchantAmazonAsinTasksReadyResponseInfo response = api.amazonAsinTasksReady();
        // TODO: test validations
    }

    /**
     * Description of the fields for sending a request: for more info please visit &#39;https://docs.dataforseo.com/v3/merchant/amazon/products/task_get/advanced/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void amazonProductsTaskGetAdvancedTest() throws ApiException {
        String id = null;
        MerchantAmazonProductsTaskGetAdvancedResponseInfo response = api.amazonProductsTaskGetAdvanced(id);
        // TODO: test validations
    }

    /**
     * Description of the fields for sending a request: for more info please visit &#39;https://docs.dataforseo.com/v3/merchant/amazon/products/task_get/html/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void amazonProductsTaskGetHtmlTest() throws ApiException {
        String id = null;
        MerchantAmazonProductsTaskGetHtmlResponseInfo response = api.amazonProductsTaskGetHtml(id);
        // TODO: test validations
    }

    /**
     * ‌‌ This endpoint provides results from Amazon product listings according to the specified keyword (product name), location, and language parameters. for more info please visit &#39;https://docs.dataforseo.com/v3/merchant/amazon/products/task_post/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void amazonProductsTaskPostTest() throws ApiException {
        List<MerchantAmazonProductsTaskPostRequestInfo> merchantAmazonProductsTaskPostRequestInfo = null;
        MerchantAmazonProductsTaskPostResponseInfo response = api.amazonProductsTaskPost(merchantAmazonProductsTaskPostRequestInfo);
        // TODO: test validations
    }

    /**
     * ‌ The ‘Tasks Ready’ endpoint is designed to provide you with the list of completed tasks, which haven’t been collected yet. If you use the Standard method without specifying the postback_url, you can receive the list of id for all completed tasks using this endpoint. Then, you can collect the results using the ‘Task GET’ endpoint. for more info please visit &#39;https://docs.dataforseo.com/v3/merchant/amazon/products/tasks_ready/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void amazonProductsTasksReadyTest() throws ApiException {
        MerchantAmazonProductsTasksReadyResponseInfo response = api.amazonProductsTasksReady();
        // TODO: test validations
    }

    /**
     * This endpoint provides feedback data on products listed on the Amazon marketplace, including their titles, images, ratings, review content, user profile info, review publication dates, and more. The results are specific to the asin specified in the POST request. for more info please visit &#39;https://docs.dataforseo.com/v3/merchant/amazon/reviews/task_get/advanced/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void amazonReviewsTaskGetAdvancedTest() throws ApiException {
        String id = null;
        MerchantAmazonReviewsTaskGetAdvancedResponseInfo response = api.amazonReviewsTaskGetAdvanced(id);
        // TODO: test validations
    }

    /**
     * Description of the fields for sending a request: for more info please visit &#39;https://docs.dataforseo.com/v3/merchant/amazon/reviews/task_get/html/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void amazonReviewsTaskGetHtmlTest() throws ApiException {
        String id = null;
        MerchantAmazonReviewsTaskGetHtmlResponseInfo response = api.amazonReviewsTaskGetHtml(id);
        // TODO: test validations
    }

    /**
     * ‌‌ This endpoint will provide you with a list of reviews for the target Amazon product. for more info please visit &#39;https://docs.dataforseo.com/v3/merchant/amazon/reviews/task_post/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void amazonReviewsTaskPostTest() throws ApiException {
        List<MerchantAmazonReviewsTaskPostRequestInfo> merchantAmazonReviewsTaskPostRequestInfo = null;
        MerchantAmazonReviewsTaskPostResponseInfo response = api.amazonReviewsTaskPost(merchantAmazonReviewsTaskPostRequestInfo);
        // TODO: test validations
    }

    /**
     * ‌ The ‘Tasks Ready’ endpoint is designed to provide you with a list of completed tasks that haven’t been collected yet. If you use the Standard method without specifying the postback_url, you can receive the list of id for all completed tasks using this endpoint. Then, you can collect the results using the ‘Task GET’ endpoints. for more info please visit &#39;https://docs.dataforseo.com/v3/merchant/amazon/reviews/tasks_ready/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void amazonReviewsTasksReadyTest() throws ApiException {
        MerchantAmazonReviewsTasksReadyResponseInfo response = api.amazonReviewsTasksReady();
        // TODO: test validations
    }

    /**
     * This endpoint provides a list of sellers of the specified product on Amazon. The data provided for each seller includes related product condition, pricing, shipment, and rating details. for more info please visit &#39;https://docs.dataforseo.com/v3/merchant/amazon/sellers/task_get/advanced/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void amazonSellersTaskGetAdvancedTest() throws ApiException {
        String id = null;
        MerchantAmazonSellersTaskGetAdvancedResponseInfo response = api.amazonSellersTaskGetAdvanced(id);
        // TODO: test validations
    }

    /**
     * Description of the fields for sending a request: for more info please visit &#39;https://docs.dataforseo.com/v3/merchant/amazon/sellers/task_get/html/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void amazonSellersTaskGetHtmlTest() throws ApiException {
        String id = null;
        MerchantAmazonSellersTaskGetHtmlResponseInfo response = api.amazonSellersTaskGetHtml(id);
        // TODO: test validations
    }

    /**
     * ‌‌ This endpoint provides a list of sellers of the specified product on Amazon. The data provided for each seller includes related product condition, pricing, shipment, and rating details. The results are specific to the selected location (see the List of Locations) and language (see the List of Languages) settings. for more info please visit &#39;https://docs.dataforseo.com/v3/merchant/amazon/sellers/task_post/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void amazonSellersTaskPostTest() throws ApiException {
        List<MerchantAmazonSellersTaskPostRequestInfo> merchantAmazonSellersTaskPostRequestInfo = null;
        MerchantAmazonSellersTaskPostResponseInfo response = api.amazonSellersTaskPost(merchantAmazonSellersTaskPostRequestInfo);
        // TODO: test validations
    }

    /**
     * ‌ The ‘Tasks Ready’ endpoint is designed to provide you with the list of completed tasks, which haven’t been collected yet. If you use the Standard method without specifying the postback_url, you can receive the list of id for all completed tasks using this endpoint. Then, you can collect the results using the ‘Task GET’ endpoint. for more info please visit &#39;https://docs.dataforseo.com/v3/merchant/amazon/sellers/tasks_ready/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void amazonSellersTasksReadyTest() throws ApiException {
        MerchantAmazonSellersTasksReadyResponseInfo response = api.amazonSellersTasksReady();
        // TODO: test validations
    }

    /**
     * Description of the fields for sending a request: for more info please visit &#39;https://docs.dataforseo.com/v3/merchant/google/product_info/task_get/advanced/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void googleProductInfoTaskGetAdvancedTest() throws ApiException {
        String id = null;
        MerchantGoogleProductInfoTaskGetAdvancedResponseInfo response = api.googleProductInfoTaskGetAdvanced(id);
        // TODO: test validations
    }

    /**
     * ‌‌ This endpoint provides data on a product listed on Google Shopping, including product description, images, rating, variations, and sellers. In order to set a task, you have to specify the  product_id. for more info please visit &#39;https://docs.dataforseo.com/v3/merchant/google/product_info/task_post/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void googleProductInfoTaskPostTest() throws ApiException {
        List<MerchantGoogleProductInfoTaskPostRequestInfo> merchantGoogleProductInfoTaskPostRequestInfo = null;
        MerchantGoogleProductInfoTaskPostResponseInfo response = api.googleProductInfoTaskPost(merchantGoogleProductInfoTaskPostRequestInfo);
        // TODO: test validations
    }

    /**
     * ‌ The ‘Tasks Ready’ endpoint is designed to provide you with the list of completed tasks, which haven’t been collected yet. If you use the Standard method without specifying the postback_url, you can receive the list of id for all completed tasks using this endpoint. Then, you can collect the results using the ‘Task GET’ endpoint. for more info please visit &#39;https://docs.dataforseo.com/v3/merchant/google/product_info/tasks_ready/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void googleProductInfoTasksReadyTest() throws ApiException {
        MerchantGoogleProductInfoTasksReadyResponseInfo response = api.googleProductInfoTasksReady();
        // TODO: test validations
    }

    /**
     * Description of the fields for sending a request: for more info please visit &#39;https://docs.dataforseo.com/v3/merchant/google/product_spec/task_get/advanced/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void googleProductSpecTaskGetAdvancedTest() throws ApiException {
        String id = null;
        MerchantGoogleProductSpecTaskGetAdvancedResponseInfo response = api.googleProductSpecTaskGetAdvanced(id);
        // TODO: test validations
    }

    /**
     * Description of the fields for sending a request: for more info please visit &#39;https://docs.dataforseo.com/v3/merchant/google/product_spec/task_get/html/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void googleProductSpecTaskGetHtmlTest() throws ApiException {
        String id = null;
        MerchantGoogleProductSpecTaskGetHtmlResponseInfo response = api.googleProductSpecTaskGetHtml(id);
        // TODO: test validations
    }

    /**
     * ‌‌ This endpoint provides product data from Google Shopping based on the specified product_id. You will get a full detailed product description as it is given on the Google Shopping product specification page. Product data can include parameters of the product, brand name, part numbers, GTIN, etc. for more info please visit &#39;https://docs.dataforseo.com/v3/merchant/google/product_spec/task_post/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void googleProductSpecTaskPostTest() throws ApiException {
        List<MerchantGoogleProductSpecTaskPostRequestInfo> merchantGoogleProductSpecTaskPostRequestInfo = null;
        MerchantGoogleProductSpecTaskPostResponseInfo response = api.googleProductSpecTaskPost(merchantGoogleProductSpecTaskPostRequestInfo);
        // TODO: test validations
    }

    /**
     * ‌ The ‘Tasks Ready’ endpoint is designed to provide you with the list of completed tasks, which haven’t been collected yet. If you use the Standard method without specifying the postback_url, you can receive the list of id for all completed tasks using this endpoint. Then, you can collect the results using the ‘Task GET’ endpoint. for more info please visit &#39;https://docs.dataforseo.com/v3/merchant/google/product_spec/tasks_ready/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void googleProductSpecTasksReadyTest() throws ApiException {
        MerchantGoogleProductSpecTasksReadyResponseInfo response = api.googleProductSpecTasksReady();
        // TODO: test validations
    }

    /**
     * Description of the fields for sending a request: for more info please visit &#39;https://docs.dataforseo.com/v3/merchant/google/products/task_get/advanced/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void googleProductsTaskGetAdvancedTest() throws ApiException {
        String id = null;
        MerchantGoogleProductsTaskGetAdvancedResponseInfo response = api.googleProductsTaskGetAdvanced(id);
        // TODO: test validations
    }

    /**
     * Description of the fields for sending a request: for more info please visit &#39;https://docs.dataforseo.com/v3/merchant/google/products/task_get/html/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void googleProductsTaskGetHtmlTest() throws ApiException {
        String id = null;
        MerchantGoogleProductsTaskGetHtmlResponseInfo response = api.googleProductsTaskGetHtml(id);
        // TODO: test validations
    }

    /**
     * ‌‌ Google Shopping Products endpoint will provide you with the list of products found on Google Shopping for the specified query. The results include product title, description in Google Shopping SERP, product rank, price, reviews and rating as well as the related domain. for more info please visit &#39;https://docs.dataforseo.com/v3/merchant/google/products/task_post/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void googleProductsTaskPostTest() throws ApiException {
        List<MerchantTaskRequestInfo> merchantTaskRequestInfo = null;
        MerchantGoogleProductsTaskPostResponseInfo response = api.googleProductsTaskPost(merchantTaskRequestInfo);
        // TODO: test validations
    }

    /**
     * ‌ The ‘Tasks Ready’ endpoint is designed to provide you with the list of completed tasks, which haven’t been collected yet. If you use the Standard method without specifying the postback_url, you can receive the list of id for all completed tasks using this endpoint. Then, you can collect the results using the ‘Task GET’ endpoint. for more info please visit &#39;https://docs.dataforseo.com/v3/merchant/google/products/tasks_ready/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void googleProductsTasksReadyTest() throws ApiException {
        MerchantGoogleProductsTasksReadyResponseInfo response = api.googleProductsTasksReady();
        // TODO: test validations
    }

    /**
     * Google Shopping Sellers Ad URL is designed to provide you with a full URL of the advertisement containing all additional parameters set by the seller. for more info please visit &#39;https://docs.dataforseo.com/v3/merchant/google/sellers/ad_url/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void googleSellersAdUrlTest() throws ApiException {
        String shopAdAclk = null;
        MerchantGoogleSellersAdUrlResponseInfo response = api.googleSellersAdUrl(shopAdAclk);
        // TODO: test validations
    }

    /**
     * Description of the fields for sending a request: for more info please visit &#39;https://docs.dataforseo.com/v3/merchant/google/sellers/task_get/advanced/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void googleSellersTaskGetAdvancedTest() throws ApiException {
        String id = null;
        MerchantGoogleSellersTaskGetAdvancedResponseInfo response = api.googleSellersTaskGetAdvanced(id);
        // TODO: test validations
    }

    /**
     * Description of the fields for sending a request: for more info please visit &#39;https://docs.dataforseo.com/v3/merchant/google/sellers/task_get/html/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void googleSellersTaskGetHtmlTest() throws ApiException {
        String id = null;
        MerchantGoogleSellersTaskGetHtmlResponseInfo response = api.googleSellersTaskGetHtml(id);
        // TODO: test validations
    }

    /**
     * ‌‌ Google Shopping Sellers endpoint will provide you with the list of sellers that listed the specified product on Google Shopping. The provided data for each seller includes related product base and total price, shipment and purchase details and special offers. The results are specific to the selected location (see the List of Locations) and language (see the List of Languages) settings. for more info please visit &#39;https://docs.dataforseo.com/v3/merchant/google/sellers/task_post/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void googleSellersTaskPostTest() throws ApiException {
        List<MerchantGoogleSellersTaskPostRequestInfo> merchantGoogleSellersTaskPostRequestInfo = null;
        MerchantGoogleSellersTaskPostResponseInfo response = api.googleSellersTaskPost(merchantGoogleSellersTaskPostRequestInfo);
        // TODO: test validations
    }

    /**
     * ‌ The ‘Tasks Ready’ endpoint is designed to provide you with the list of completed tasks, which haven’t been collected yet. If you use the Standard method without specifying the postback_url, you can receive the list of id for all completed tasks using this endpoint. Then, you can collect the results using the ‘Task GET’ endpoint. for more info please visit &#39;https://docs.dataforseo.com/v3/merchant/google/sellers/tasks_ready/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void googleSellersTasksReadyTest() throws ApiException {
        MerchantGoogleSellersTasksReadyResponseInfo response = api.googleSellersTasksReady();
        // TODO: test validations
    }

    /**
     * You will receive the list of supported Amazon languages by calling this API. for more info please visit &#39;https://docs.dataforseo.com/v3/merchant/amazon/languages/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void merchantAmazonLanguagesTest() throws ApiException {
        MerchantAmazonLanguagesResponseInfo response = api.merchantAmazonLanguages();
        // TODO: test validations
    }

    /**
     * You will receive the list of supported Amazon locations by this API call. You can filter the list of locations by country when setting a task. for more info please visit &#39;https://docs.dataforseo.com/v3/merchant/amazon/locations/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void merchantAmazonLocationsTest() throws ApiException {
        MerchantAmazonLocationsResponseInfo response = api.merchantAmazonLocations();
        // TODO: test validations
    }

    /**
     * You will receive the list of supported Amazon locations by this API call. You can filter the list of locations by country when setting a task. for more info please visit &#39;https://docs.dataforseo.com/v3/merchant/amazon/locations/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void merchantAmazonLocationsCountryTest() throws ApiException {
        String country = null;
        MerchantAmazonLocationsCountryResponseInfo response = api.merchantAmazonLocationsCountry(country);
        // TODO: test validations
    }

    /**
     * By calling this endpoint you will receive information about the Merchant API tasks that returned an error within the past 24 hours. for more info please visit &#39;https://docs.dataforseo.com/v3/merchant/errors/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void merchantErrorsTest() throws ApiException {
        List<MerchantErrorsRequestInfo> merchantErrorsRequestInfo = null;
        MerchantErrorsResponseInfo response = api.merchantErrors(merchantErrorsRequestInfo);
        // TODO: test validations
    }

    /**
     * You will receive the list of supported Google Shopping languages by calling this API. for more info please visit &#39;https://docs.dataforseo.com/v3/merchant/google/languages/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void merchantGoogleLanguagesTest() throws ApiException {
        MerchantGoogleLanguagesResponseInfo response = api.merchantGoogleLanguages();
        // TODO: test validations
    }

    /**
     * for more info please visit &#39;https://docs.dataforseo.com/v3/merchant/google/locations/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void merchantGoogleLocationsTest() throws ApiException {
        MerchantGoogleLocationsResponseInfo response = api.merchantGoogleLocations();
        // TODO: test validations
    }

    /**
     * for more info please visit &#39;https://docs.dataforseo.com/v3/merchant/google/locations/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void merchantGoogleLocationsCountryTest() throws ApiException {
        String country = null;
        MerchantGoogleLocationsCountryResponseInfo response = api.merchantGoogleLocationsCountry(country);
        // TODO: test validations
    }

    /**
     * This endpoint is designed to provide you with the list of IDs and metadata of the completed Merchant tasks during the specified period. You will get all task IDs that were made including successful, uncompleted, and tasks that responded as errors. for more info please visit &#39;https://docs.dataforseo.com/v3/merchant/id_list/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void merchantIdListTest() throws ApiException {
        List<MerchantIdListRequestInfo> merchantIdListRequestInfo = null;
        MerchantIdListResponseInfo response = api.merchantIdList(merchantIdListRequestInfo);
        // TODO: test validations
    }

    /**
     * ‌ The ‘Tasks Ready’ endpoint is designed to provide you with the list of completed tasks, which haven’t been collected yet. If you use the Standard method without specifying the postback_url, you can receive the list of id for all completed tasks using this endpoint. Then, you can collect the results using the ‘Task GET’ endpoint. for more info please visit &#39;https://docs.dataforseo.com/v3/merchant/google/products/tasks_ready/?bash&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void merchantTasksReadyTest() throws ApiException {
        MerchantTasksReadyResponseInfo response = api.merchantTasksReady();
        // TODO: test validations
    }

}
