/*
 * DataForSEO API documentation
 * DataForSEO API is the starting point on your journey towards building powerful SEO software. With DataForSEO you can get all the data you need to build an efficient application while also saving your time and budget. DataForSEO API is using the REST technology for interchanging data between your application and our service. The data exchange is made through the widely used HTTP protocol, which allows applying our API to almost all programming languages.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.dataforseo.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.github.dataforseo.client.model.AboutThisResultElement;
import io.github.dataforseo.client.model.BaseSerpElementItem;
import io.github.dataforseo.client.model.FaqBox;
import io.github.dataforseo.client.model.ImagesElement;
import io.github.dataforseo.client.model.LinkElement;
import io.github.dataforseo.client.model.PriceInfo;
import io.github.dataforseo.client.model.RatingInfo;
import io.github.dataforseo.client.model.Rectangle;
import io.github.dataforseo.client.model.RelatedResult;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for OrganicSerpElementItem
 */
public class OrganicSerpElementItemTest {
    private final OrganicSerpElementItem model = new OrganicSerpElementItem();

    /**
     * Model tests for OrganicSerpElementItem
     */
    @Test
    public void testOrganicSerpElementItem() {
        // TODO: test OrganicSerpElementItem
    }

    /**
     * Test the property 'type'
     */
    @Test
    public void typeTest() {
        // TODO: test type
    }

    /**
     * Test the property 'rankGroup'
     */
    @Test
    public void rankGroupTest() {
        // TODO: test rankGroup
    }

    /**
     * Test the property 'rankAbsolute'
     */
    @Test
    public void rankAbsoluteTest() {
        // TODO: test rankAbsolute
    }

    /**
     * Test the property 'position'
     */
    @Test
    public void positionTest() {
        // TODO: test position
    }

    /**
     * Test the property 'xpath'
     */
    @Test
    public void xpathTest() {
        // TODO: test xpath
    }

    /**
     * Test the property 'domain'
     */
    @Test
    public void domainTest() {
        // TODO: test domain
    }

    /**
     * Test the property 'title'
     */
    @Test
    public void titleTest() {
        // TODO: test title
    }

    /**
     * Test the property 'url'
     */
    @Test
    public void urlTest() {
        // TODO: test url
    }

    /**
     * Test the property 'cacheUrl'
     */
    @Test
    public void cacheUrlTest() {
        // TODO: test cacheUrl
    }

    /**
     * Test the property 'relatedSearchUrl'
     */
    @Test
    public void relatedSearchUrlTest() {
        // TODO: test relatedSearchUrl
    }

    /**
     * Test the property 'breadcrumb'
     */
    @Test
    public void breadcrumbTest() {
        // TODO: test breadcrumb
    }

    /**
     * Test the property 'websiteName'
     */
    @Test
    public void websiteNameTest() {
        // TODO: test websiteName
    }

    /**
     * Test the property 'isImage'
     */
    @Test
    public void isImageTest() {
        // TODO: test isImage
    }

    /**
     * Test the property 'isVideo'
     */
    @Test
    public void isVideoTest() {
        // TODO: test isVideo
    }

    /**
     * Test the property 'isFeaturedSnippet'
     */
    @Test
    public void isFeaturedSnippetTest() {
        // TODO: test isFeaturedSnippet
    }

    /**
     * Test the property 'isMalicious'
     */
    @Test
    public void isMaliciousTest() {
        // TODO: test isMalicious
    }

    /**
     * Test the property 'isWebStory'
     */
    @Test
    public void isWebStoryTest() {
        // TODO: test isWebStory
    }

    /**
     * Test the property 'description'
     */
    @Test
    public void descriptionTest() {
        // TODO: test description
    }

    /**
     * Test the property 'preSnippet'
     */
    @Test
    public void preSnippetTest() {
        // TODO: test preSnippet
    }

    /**
     * Test the property 'extendedSnippet'
     */
    @Test
    public void extendedSnippetTest() {
        // TODO: test extendedSnippet
    }

    /**
     * Test the property 'images'
     */
    @Test
    public void imagesTest() {
        // TODO: test images
    }

    /**
     * Test the property 'ampVersion'
     */
    @Test
    public void ampVersionTest() {
        // TODO: test ampVersion
    }

    /**
     * Test the property 'rating'
     */
    @Test
    public void ratingTest() {
        // TODO: test rating
    }

    /**
     * Test the property 'price'
     */
    @Test
    public void priceTest() {
        // TODO: test price
    }

    /**
     * Test the property 'highlighted'
     */
    @Test
    public void highlightedTest() {
        // TODO: test highlighted
    }

    /**
     * Test the property 'links'
     */
    @Test
    public void linksTest() {
        // TODO: test links
    }

    /**
     * Test the property 'faq'
     */
    @Test
    public void faqTest() {
        // TODO: test faq
    }

    /**
     * Test the property 'extendedPeopleAlsoSearch'
     */
    @Test
    public void extendedPeopleAlsoSearchTest() {
        // TODO: test extendedPeopleAlsoSearch
    }

    /**
     * Test the property 'aboutThisResult'
     */
    @Test
    public void aboutThisResultTest() {
        // TODO: test aboutThisResult
    }

    /**
     * Test the property 'relatedResult'
     */
    @Test
    public void relatedResultTest() {
        // TODO: test relatedResult
    }

    /**
     * Test the property 'timestamp'
     */
    @Test
    public void timestampTest() {
        // TODO: test timestamp
    }

    /**
     * Test the property 'rectangle'
     */
    @Test
    public void rectangleTest() {
        // TODO: test rectangle
    }

}
