/*
 * DataForSEO API documentation
 * DataForSEO API is the starting point on your journey towards building powerful SEO software. With DataForSEO you can get all the data you need to build an efficient application while also saving your time and budget. DataForSEO API is using the REST technology for interchanging data between your application and our service. The data exchange is made through the widely used HTTP protocol, which allows applying our API to almost all programming languages.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.dataforseo.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.openapitools.jackson.nullable.JsonNullable;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for BacklinksPageMeta
 */
public class BacklinksPageMetaTest {
    private final BacklinksPageMeta model = new BacklinksPageMeta();

    /**
     * Model tests for BacklinksPageMeta
     */
    @Test
    public void testBacklinksPageMeta() {
        // TODO: test BacklinksPageMeta
    }

    /**
     * Test the property 'title'
     */
    @Test
    public void titleTest() {
        // TODO: test title
    }

    /**
     * Test the property 'canonical'
     */
    @Test
    public void canonicalTest() {
        // TODO: test canonical
    }

    /**
     * Test the property 'internalLinksCount'
     */
    @Test
    public void internalLinksCountTest() {
        // TODO: test internalLinksCount
    }

    /**
     * Test the property 'externalLinksCount'
     */
    @Test
    public void externalLinksCountTest() {
        // TODO: test externalLinksCount
    }

    /**
     * Test the property 'imagesCount'
     */
    @Test
    public void imagesCountTest() {
        // TODO: test imagesCount
    }

    /**
     * Test the property 'wordsCount'
     */
    @Test
    public void wordsCountTest() {
        // TODO: test wordsCount
    }

    /**
     * Test the property 'pageSpamScore'
     */
    @Test
    public void pageSpamScoreTest() {
        // TODO: test pageSpamScore
    }

    /**
     * Test the property 'socialMediaTags'
     */
    @Test
    public void socialMediaTagsTest() {
        // TODO: test socialMediaTags
    }

    /**
     * Test the property 'h1'
     */
    @Test
    public void h1Test() {
        // TODO: test h1
    }

    /**
     * Test the property 'h2'
     */
    @Test
    public void h2Test() {
        // TODO: test h2
    }

    /**
     * Test the property 'h3'
     */
    @Test
    public void h3Test() {
        // TODO: test h3
    }

    /**
     * Test the property 'imagesAlt'
     */
    @Test
    public void imagesAltTest() {
        // TODO: test imagesAlt
    }

    /**
     * Test the property 'poweredBy'
     */
    @Test
    public void poweredByTest() {
        // TODO: test poweredBy
    }

    /**
     * Test the property 'language'
     */
    @Test
    public void languageTest() {
        // TODO: test language
    }

    /**
     * Test the property 'charset'
     */
    @Test
    public void charsetTest() {
        // TODO: test charset
    }

    /**
     * Test the property 'platformType'
     */
    @Test
    public void platformTypeTest() {
        // TODO: test platformType
    }

    /**
     * Test the property 'technologies'
     */
    @Test
    public void technologiesTest() {
        // TODO: test technologies
    }

}
