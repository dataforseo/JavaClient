/*
 * DataForSEO API documentation
 * DataForSEO API is the starting point on your journey towards building powerful SEO software. With DataForSEO you can get all the data you need to build an efficient application while also saving your time and budget. DataForSEO API is using the REST technology for interchanging data between your application and our service. The data exchange is made through the widely used HTTP protocol, which allows applying our API to almost all programming languages.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.dataforseo.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for BacklinksSummaryLiveRequestInfo
 */
public class BacklinksSummaryLiveRequestInfoTest {
    private final BacklinksSummaryLiveRequestInfo model = new BacklinksSummaryLiveRequestInfo();

    /**
     * Model tests for BacklinksSummaryLiveRequestInfo
     */
    @Test
    public void testBacklinksSummaryLiveRequestInfo() {
        // TODO: test BacklinksSummaryLiveRequestInfo
    }

    /**
     * Test the property 'target'
     */
    @Test
    public void targetTest() {
        // TODO: test target
    }

    /**
     * Test the property 'includeSubdomains'
     */
    @Test
    public void includeSubdomainsTest() {
        // TODO: test includeSubdomains
    }

    /**
     * Test the property 'includeIndirectLinks'
     */
    @Test
    public void includeIndirectLinksTest() {
        // TODO: test includeIndirectLinks
    }

    /**
     * Test the property 'excludeInternalBacklinks'
     */
    @Test
    public void excludeInternalBacklinksTest() {
        // TODO: test excludeInternalBacklinks
    }

    /**
     * Test the property 'internalListLimit'
     */
    @Test
    public void internalListLimitTest() {
        // TODO: test internalListLimit
    }

    /**
     * Test the property 'backlinksStatusType'
     */
    @Test
    public void backlinksStatusTypeTest() {
        // TODO: test backlinksStatusType
    }

    /**
     * Test the property 'backlinksFilters'
     */
    @Test
    public void backlinksFiltersTest() {
        // TODO: test backlinksFilters
    }

    /**
     * Test the property 'rankScale'
     */
    @Test
    public void rankScaleTest() {
        // TODO: test rankScale
    }

    /**
     * Test the property 'tag'
     */
    @Test
    public void tagTest() {
        // TODO: test tag
    }

}
