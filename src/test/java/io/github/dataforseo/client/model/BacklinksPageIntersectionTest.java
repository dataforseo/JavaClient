/*
 * DataForSEO API documentation
 * DataForSEO API is the starting point on your journey towards building powerful SEO software. With DataForSEO you can get all the data you need to build an efficient application while also saving your time and budget. DataForSEO API is using the REST technology for interchanging data between your application and our service. The data exchange is made through the widely used HTTP protocol, which allows applying our API to almost all programming languages.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.dataforseo.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.github.dataforseo.client.model.BacklinksRedirectInfo;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for BacklinksPageIntersection
 */
public class BacklinksPageIntersectionTest {
    private final BacklinksPageIntersection model = new BacklinksPageIntersection();

    /**
     * Model tests for BacklinksPageIntersection
     */
    @Test
    public void testBacklinksPageIntersection() {
        // TODO: test BacklinksPageIntersection
    }

    /**
     * Test the property 'type'
     */
    @Test
    public void typeTest() {
        // TODO: test type
    }

    /**
     * Test the property 'domainFrom'
     */
    @Test
    public void domainFromTest() {
        // TODO: test domainFrom
    }

    /**
     * Test the property 'urlFrom'
     */
    @Test
    public void urlFromTest() {
        // TODO: test urlFrom
    }

    /**
     * Test the property 'urlFromHttps'
     */
    @Test
    public void urlFromHttpsTest() {
        // TODO: test urlFromHttps
    }

    /**
     * Test the property 'domainTo'
     */
    @Test
    public void domainToTest() {
        // TODO: test domainTo
    }

    /**
     * Test the property 'urlTo'
     */
    @Test
    public void urlToTest() {
        // TODO: test urlTo
    }

    /**
     * Test the property 'urlToHttps'
     */
    @Test
    public void urlToHttpsTest() {
        // TODO: test urlToHttps
    }

    /**
     * Test the property 'tldFrom'
     */
    @Test
    public void tldFromTest() {
        // TODO: test tldFrom
    }

    /**
     * Test the property 'isNew'
     */
    @Test
    public void isNewTest() {
        // TODO: test isNew
    }

    /**
     * Test the property 'isLost'
     */
    @Test
    public void isLostTest() {
        // TODO: test isLost
    }

    /**
     * Test the property 'backlinkSpamScore'
     */
    @Test
    public void backlinkSpamScoreTest() {
        // TODO: test backlinkSpamScore
    }

    /**
     * Test the property 'rank'
     */
    @Test
    public void rankTest() {
        // TODO: test rank
    }

    /**
     * Test the property 'pageFromRank'
     */
    @Test
    public void pageFromRankTest() {
        // TODO: test pageFromRank
    }

    /**
     * Test the property 'domainFromRank'
     */
    @Test
    public void domainFromRankTest() {
        // TODO: test domainFromRank
    }

    /**
     * Test the property 'domainFromPlatformType'
     */
    @Test
    public void domainFromPlatformTypeTest() {
        // TODO: test domainFromPlatformType
    }

    /**
     * Test the property 'domainFromIsIp'
     */
    @Test
    public void domainFromIsIpTest() {
        // TODO: test domainFromIsIp
    }

    /**
     * Test the property 'domainFromIp'
     */
    @Test
    public void domainFromIpTest() {
        // TODO: test domainFromIp
    }

    /**
     * Test the property 'domainFromCountry'
     */
    @Test
    public void domainFromCountryTest() {
        // TODO: test domainFromCountry
    }

    /**
     * Test the property 'pageFromExternalLinks'
     */
    @Test
    public void pageFromExternalLinksTest() {
        // TODO: test pageFromExternalLinks
    }

    /**
     * Test the property 'pageFromInternalLinks'
     */
    @Test
    public void pageFromInternalLinksTest() {
        // TODO: test pageFromInternalLinks
    }

    /**
     * Test the property 'pageFromSize'
     */
    @Test
    public void pageFromSizeTest() {
        // TODO: test pageFromSize
    }

    /**
     * Test the property 'pageFromEncoding'
     */
    @Test
    public void pageFromEncodingTest() {
        // TODO: test pageFromEncoding
    }

    /**
     * Test the property 'pageFromLanguage'
     */
    @Test
    public void pageFromLanguageTest() {
        // TODO: test pageFromLanguage
    }

    /**
     * Test the property 'pageFromTitle'
     */
    @Test
    public void pageFromTitleTest() {
        // TODO: test pageFromTitle
    }

    /**
     * Test the property 'pageFromStatusCode'
     */
    @Test
    public void pageFromStatusCodeTest() {
        // TODO: test pageFromStatusCode
    }

    /**
     * Test the property 'firstSeen'
     */
    @Test
    public void firstSeenTest() {
        // TODO: test firstSeen
    }

    /**
     * Test the property 'prevSeen'
     */
    @Test
    public void prevSeenTest() {
        // TODO: test prevSeen
    }

    /**
     * Test the property 'lastSeen'
     */
    @Test
    public void lastSeenTest() {
        // TODO: test lastSeen
    }

    /**
     * Test the property 'itemType'
     */
    @Test
    public void itemTypeTest() {
        // TODO: test itemType
    }

    /**
     * Test the property 'attributes'
     */
    @Test
    public void attributesTest() {
        // TODO: test attributes
    }

    /**
     * Test the property 'dofollow'
     */
    @Test
    public void dofollowTest() {
        // TODO: test dofollow
    }

    /**
     * Test the property 'original'
     */
    @Test
    public void originalTest() {
        // TODO: test original
    }

    /**
     * Test the property 'alt'
     */
    @Test
    public void altTest() {
        // TODO: test alt
    }

    /**
     * Test the property 'anchor'
     */
    @Test
    public void anchorTest() {
        // TODO: test anchor
    }

    /**
     * Test the property 'textPre'
     */
    @Test
    public void textPreTest() {
        // TODO: test textPre
    }

    /**
     * Test the property 'textPost'
     */
    @Test
    public void textPostTest() {
        // TODO: test textPost
    }

    /**
     * Test the property 'semanticLocation'
     */
    @Test
    public void semanticLocationTest() {
        // TODO: test semanticLocation
    }

    /**
     * Test the property 'linksCount'
     */
    @Test
    public void linksCountTest() {
        // TODO: test linksCount
    }

    /**
     * Test the property 'groupCount'
     */
    @Test
    public void groupCountTest() {
        // TODO: test groupCount
    }

    /**
     * Test the property 'isBroken'
     */
    @Test
    public void isBrokenTest() {
        // TODO: test isBroken
    }

    /**
     * Test the property 'urlToStatusCode'
     */
    @Test
    public void urlToStatusCodeTest() {
        // TODO: test urlToStatusCode
    }

    /**
     * Test the property 'urlToSpamScore'
     */
    @Test
    public void urlToSpamScoreTest() {
        // TODO: test urlToSpamScore
    }

    /**
     * Test the property 'urlToRedirectTarget'
     */
    @Test
    public void urlToRedirectTargetTest() {
        // TODO: test urlToRedirectTarget
    }

    /**
     * Test the property 'isIndirectLink'
     */
    @Test
    public void isIndirectLinkTest() {
        // TODO: test isIndirectLink
    }

    /**
     * Test the property 'indirectLinkPath'
     */
    @Test
    public void indirectLinkPathTest() {
        // TODO: test indirectLinkPath
    }

}
