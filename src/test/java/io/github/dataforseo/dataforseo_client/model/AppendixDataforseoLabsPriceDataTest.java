/*
 * DataForSEO API documentation
 * DataForSEO API is the starting point on your journey towards building powerful SEO software. With DataForSEO you can get all the data you need to build an efficient application while also saving your time and budget. DataForSEO API is using the REST technology for interchanging data between your application and our service. The data exchange is made through the widely used HTTP protocol, which allows applying our API to almost all programming languages.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.dataforseo.dataforseo_client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.github.dataforseo.dataforseo_client.model.AppendixKeywordBingKeywordsDataPriceDataInfo;
import io.github.dataforseo.dataforseo_client.model.AppendixTaskKeywordsDataPriceDataInfo;
import java.io.IOException;
import java.util.Arrays;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for AppendixDataforseoLabsPriceData
 */
public class AppendixDataforseoLabsPriceDataTest {
    private final AppendixDataforseoLabsPriceData model = new AppendixDataforseoLabsPriceData();

    /**
     * Model tests for AppendixDataforseoLabsPriceData
     */
    @Test
    public void testAppendixDataforseoLabsPriceData() {
        // TODO: test AppendixDataforseoLabsPriceData
    }

    /**
     * Test the property 'appCompetitors'
     */
    @Test
    public void appCompetitorsTest() {
        // TODO: test appCompetitors
    }

    /**
     * Test the property 'appIntersection'
     */
    @Test
    public void appIntersectionTest() {
        // TODO: test appIntersection
    }

    /**
     * Test the property 'bulkAppMetrics'
     */
    @Test
    public void bulkAppMetricsTest() {
        // TODO: test bulkAppMetrics
    }

    /**
     * Test the property 'bulkKeywordDifficulty'
     */
    @Test
    public void bulkKeywordDifficultyTest() {
        // TODO: test bulkKeywordDifficulty
    }

    /**
     * Test the property 'bulkSearchVolume'
     */
    @Test
    public void bulkSearchVolumeTest() {
        // TODO: test bulkSearchVolume
    }

    /**
     * Test the property 'bulkTrafficEstimation'
     */
    @Test
    public void bulkTrafficEstimationTest() {
        // TODO: test bulkTrafficEstimation
    }

    /**
     * Test the property 'categories'
     */
    @Test
    public void categoriesTest() {
        // TODO: test categories
    }

    /**
     * Test the property 'categoriesForDomain'
     */
    @Test
    public void categoriesForDomainTest() {
        // TODO: test categoriesForDomain
    }

    /**
     * Test the property 'competitorsDomain'
     */
    @Test
    public void competitorsDomainTest() {
        // TODO: test competitorsDomain
    }

    /**
     * Test the property 'domainIntersection'
     */
    @Test
    public void domainIntersectionTest() {
        // TODO: test domainIntersection
    }

    /**
     * Test the property 'domainMetricsByCategories'
     */
    @Test
    public void domainMetricsByCategoriesTest() {
        // TODO: test domainMetricsByCategories
    }

    /**
     * Test the property 'domainRankOverview'
     */
    @Test
    public void domainRankOverviewTest() {
        // TODO: test domainRankOverview
    }

    /**
     * Test the property 'domainWhoisOverview'
     */
    @Test
    public void domainWhoisOverviewTest() {
        // TODO: test domainWhoisOverview
    }

    /**
     * Test the property 'errors'
     */
    @Test
    public void errorsTest() {
        // TODO: test errors
    }

    /**
     * Test the property 'historicalRankOverview'
     */
    @Test
    public void historicalRankOverviewTest() {
        // TODO: test historicalRankOverview
    }

    /**
     * Test the property 'historicalSearchVolume'
     */
    @Test
    public void historicalSearchVolumeTest() {
        // TODO: test historicalSearchVolume
    }

    /**
     * Test the property 'historicalSerps'
     */
    @Test
    public void historicalSerpsTest() {
        // TODO: test historicalSerps
    }

    /**
     * Test the property 'keywordIdeas'
     */
    @Test
    public void keywordIdeasTest() {
        // TODO: test keywordIdeas
    }

    /**
     * Test the property 'keywordsForApp'
     */
    @Test
    public void keywordsForAppTest() {
        // TODO: test keywordsForApp
    }

    /**
     * Test the property 'keywordsForCategories'
     */
    @Test
    public void keywordsForCategoriesTest() {
        // TODO: test keywordsForCategories
    }

    /**
     * Test the property 'keywordsForSite'
     */
    @Test
    public void keywordsForSiteTest() {
        // TODO: test keywordsForSite
    }

    /**
     * Test the property 'keywordSuggestions'
     */
    @Test
    public void keywordSuggestionsTest() {
        // TODO: test keywordSuggestions
    }

    /**
     * Test the property 'locationsAndLanguages'
     */
    @Test
    public void locationsAndLanguagesTest() {
        // TODO: test locationsAndLanguages
    }

    /**
     * Test the property 'pageIntersection'
     */
    @Test
    public void pageIntersectionTest() {
        // TODO: test pageIntersection
    }

    /**
     * Test the property 'productCompetitors'
     */
    @Test
    public void productCompetitorsTest() {
        // TODO: test productCompetitors
    }

    /**
     * Test the property 'productKeywordIntersections'
     */
    @Test
    public void productKeywordIntersectionsTest() {
        // TODO: test productKeywordIntersections
    }

    /**
     * Test the property 'productRankOverview'
     */
    @Test
    public void productRankOverviewTest() {
        // TODO: test productRankOverview
    }

    /**
     * Test the property 'rankedKeywords'
     */
    @Test
    public void rankedKeywordsTest() {
        // TODO: test rankedKeywords
    }

    /**
     * Test the property 'relatedKeywords'
     */
    @Test
    public void relatedKeywordsTest() {
        // TODO: test relatedKeywords
    }

    /**
     * Test the property 'relevantPages'
     */
    @Test
    public void relevantPagesTest() {
        // TODO: test relevantPages
    }

    /**
     * Test the property 'searchIntent'
     */
    @Test
    public void searchIntentTest() {
        // TODO: test searchIntent
    }

    /**
     * Test the property 'serpCompetitors'
     */
    @Test
    public void serpCompetitorsTest() {
        // TODO: test serpCompetitors
    }

    /**
     * Test the property 'subdomains'
     */
    @Test
    public void subdomainsTest() {
        // TODO: test subdomains
    }

    /**
     * Test the property 'topSearches'
     */
    @Test
    public void topSearchesTest() {
        // TODO: test topSearches
    }

}
