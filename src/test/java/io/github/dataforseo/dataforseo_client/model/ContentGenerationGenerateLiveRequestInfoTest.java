/*
 * DataForSEO API documentation
 * DataForSEO API is the starting point on your journey towards building powerful SEO software. With DataForSEO you can get all the data you need to build an efficient application while also saving your time and budget. DataForSEO API is using the REST technology for interchanging data between your application and our service. The data exchange is made through the widely used HTTP protocol, which allows applying our API to almost all programming languages.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.dataforseo.dataforseo_client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for ContentGenerationGenerateLiveRequestInfo
 */
public class ContentGenerationGenerateLiveRequestInfoTest {
    private final ContentGenerationGenerateLiveRequestInfo model = new ContentGenerationGenerateLiveRequestInfo();

    /**
     * Model tests for ContentGenerationGenerateLiveRequestInfo
     */
    @Test
    public void testContentGenerationGenerateLiveRequestInfo() {
        // TODO: test ContentGenerationGenerateLiveRequestInfo
    }

    /**
     * Test the property 'text'
     */
    @Test
    public void textTest() {
        // TODO: test text
    }

    /**
     * Test the property 'maxNewTokens'
     */
    @Test
    public void maxNewTokensTest() {
        // TODO: test maxNewTokens
    }

    /**
     * Test the property 'maxTokens'
     */
    @Test
    public void maxTokensTest() {
        // TODO: test maxTokens
    }

    /**
     * Test the property 'creativityIndex'
     */
    @Test
    public void creativityIndexTest() {
        // TODO: test creativityIndex
    }

    /**
     * Test the property 'tokenRepetitionPenalty'
     */
    @Test
    public void tokenRepetitionPenaltyTest() {
        // TODO: test tokenRepetitionPenalty
    }

    /**
     * Test the property 'topK'
     */
    @Test
    public void topKTest() {
        // TODO: test topK
    }

    /**
     * Test the property 'topP'
     */
    @Test
    public void topPTest() {
        // TODO: test topP
    }

    /**
     * Test the property 'temperature'
     */
    @Test
    public void temperatureTest() {
        // TODO: test temperature
    }

    /**
     * Test the property 'avoidWords'
     */
    @Test
    public void avoidWordsTest() {
        // TODO: test avoidWords
    }

    /**
     * Test the property 'avoidStartingWords'
     */
    @Test
    public void avoidStartingWordsTest() {
        // TODO: test avoidStartingWords
    }

    /**
     * Test the property 'stopWords'
     */
    @Test
    public void stopWordsTest() {
        // TODO: test stopWords
    }

    /**
     * Test the property 'supplementToken'
     */
    @Test
    public void supplementTokenTest() {
        // TODO: test supplementToken
    }

    /**
     * Test the property 'tag'
     */
    @Test
    public void tagTest() {
        // TODO: test tag
    }

}
