/*
 * DataForSEO API documentation
 * DataForSEO API is the starting point on your journey towards building powerful SEO software. With DataForSEO you can get all the data you need to build an efficient application while also saving your time and budget. DataForSEO API is using the REST technology for interchanging data between your application and our service. The data exchange is made through the widely used HTTP protocol, which allows applying our API to almost all programming languages.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.dataforseo.dataforseo_client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for DataforseoLabsBingCompetitorsDomainLiveRequestInfo
 */
public class DataforseoLabsBingCompetitorsDomainLiveRequestInfoTest {
    private final DataforseoLabsBingCompetitorsDomainLiveRequestInfo model = new DataforseoLabsBingCompetitorsDomainLiveRequestInfo();

    /**
     * Model tests for DataforseoLabsBingCompetitorsDomainLiveRequestInfo
     */
    @Test
    public void testDataforseoLabsBingCompetitorsDomainLiveRequestInfo() {
        // TODO: test DataforseoLabsBingCompetitorsDomainLiveRequestInfo
    }

    /**
     * Test the property 'target'
     */
    @Test
    public void targetTest() {
        // TODO: test target
    }

    /**
     * Test the property 'locationName'
     */
    @Test
    public void locationNameTest() {
        // TODO: test locationName
    }

    /**
     * Test the property 'locationCode'
     */
    @Test
    public void locationCodeTest() {
        // TODO: test locationCode
    }

    /**
     * Test the property 'languageName'
     */
    @Test
    public void languageNameTest() {
        // TODO: test languageName
    }

    /**
     * Test the property 'languageCode'
     */
    @Test
    public void languageCodeTest() {
        // TODO: test languageCode
    }

    /**
     * Test the property 'itemTypes'
     */
    @Test
    public void itemTypesTest() {
        // TODO: test itemTypes
    }

    /**
     * Test the property 'filters'
     */
    @Test
    public void filtersTest() {
        // TODO: test filters
    }

    /**
     * Test the property 'orderBy'
     */
    @Test
    public void orderByTest() {
        // TODO: test orderBy
    }

    /**
     * Test the property 'limit'
     */
    @Test
    public void limitTest() {
        // TODO: test limit
    }

    /**
     * Test the property 'offset'
     */
    @Test
    public void offsetTest() {
        // TODO: test offset
    }

    /**
     * Test the property 'maxRankGroup'
     */
    @Test
    public void maxRankGroupTest() {
        // TODO: test maxRankGroup
    }

    /**
     * Test the property 'excludeTopDomains'
     */
    @Test
    public void excludeTopDomainsTest() {
        // TODO: test excludeTopDomains
    }

    /**
     * Test the property 'intersectingDomains'
     */
    @Test
    public void intersectingDomainsTest() {
        // TODO: test intersectingDomains
    }

    /**
     * Test the property 'tag'
     */
    @Test
    public void tagTest() {
        // TODO: test tag
    }

}
